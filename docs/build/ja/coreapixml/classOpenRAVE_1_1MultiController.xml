<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="classOpenRAVE_1_1MultiController" kind="class" prot="public">
    <compoundname>OpenRAVE::MultiController</compoundname>
    <basecompoundref refid="classOpenRAVE_1_1ControllerBase" prot="public" virt="non-virtual">ControllerBase</basecompoundref>
    <includes refid="controller_8h" local="no">controller.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classOpenRAVE_1_1MultiController_1a96b8c6244de5c544065e0611b566cb84" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1a5a9955dc6058f09c4462952478dfcf58" kindref="member">RobotBasePtr</ref></type>
        <definition>RobotBasePtr _probot</definition>
        <argsstring></argsstring>
        <name>_probot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="178" bodyfile="/home/pra3cob/openrave/include/openrave/controller.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1MultiController_1a2f9e8f5dab3e9126375a9e479d087224" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; _dofindices</definition>
        <argsstring></argsstring>
        <name>_dofindices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="179" bodyfile="/home/pra3cob/openrave/include/openrave/controller.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1MultiController_1a9aa9f2e5fea98be176927cd10e3d9b55" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; _dofreverseindices</definition>
        <argsstring></argsstring>
        <name>_dofreverseindices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="179" bodyfile="/home/pra3cob/openrave/include/openrave/controller.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1MultiController_1a1e82d77ea3eec0ff00ec78f1e825bad5" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int _nControlTransformation</definition>
        <argsstring></argsstring>
        <name>_nControlTransformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="180" bodyfile="/home/pra3cob/openrave/include/openrave/controller.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1MultiController_1ae909ce72e4a1946873b0e4379393a2d8" prot="protected" static="no" mutable="no">
        <type>std::list&lt; <ref refid="namespaceOpenRAVE_1a93f3c54acfadfefe33b745f7df0c81cf" kindref="member">ControllerBasePtr</ref> &gt;</type>
        <definition>std::list&lt;ControllerBasePtr&gt; _listcontrollers</definition>
        <argsstring></argsstring>
        <name>_listcontrollers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="181" bodyfile="/home/pra3cob/openrave/include/openrave/controller.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1MultiController_1a1db0a68fc450ce5b0bc845844caf4355" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a93f3c54acfadfefe33b745f7df0c81cf" kindref="member">ControllerBasePtr</ref> &gt;</type>
        <definition>std::vector&lt;ControllerBasePtr&gt; _vcontrollersbydofs</definition>
        <argsstring></argsstring>
        <name>_vcontrollersbydofs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="182" bodyfile="/home/pra3cob/openrave/include/openrave/controller.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1MultiController_1a1bc422fb6c0a6d3f80caf14f64dfb3a7" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1a93f3c54acfadfefe33b745f7df0c81cf" kindref="member">ControllerBasePtr</ref></type>
        <definition>ControllerBasePtr _ptransformcontroller</definition>
        <argsstring></argsstring>
        <name>_ptransformcontroller</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="183" bodyfile="/home/pra3cob/openrave/include/openrave/controller.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1MultiController_1aad38f47a7dbda5ff04a45d0ab24a4083" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1aa3c159b394f2e4ec46ac49416a2acf17" kindref="member">TrajectoryBasePtr</ref></type>
        <definition>TrajectoryBasePtr _ptraj</definition>
        <argsstring></argsstring>
        <name>_ptraj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="184" bodyfile="/home/pra3cob/openrave/include/openrave/controller.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1MultiController_1abf18812ae19b048af3f11234e0bf605c" prot="protected" static="no" mutable="yes">
        <type>boost::mutex</type>
        <definition>boost::mutex _mutex</definition>
        <argsstring></argsstring>
        <name>_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="185" bodyfile="/home/pra3cob/openrave/include/openrave/controller.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1a91a7c81d7241c410fc2aa78024a6aea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MultiController</definition>
        <argsstring>(EnvironmentBasePtr penv)</argsstring>
        <name>MultiController</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a652cd59d4cc9e3262d85e6776ec8ff9b" kindref="member">EnvironmentBasePtr</ref></type>
          <declname>penv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="137"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1a3d3459db8824e195b237cc7d45ed7dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~MultiController</definition>
        <argsstring>()</argsstring>
        <name>~MultiController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="138"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1ad5666862ecbce5aee42019ec18687268" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Init</definition>
        <argsstring>(RobotBasePtr robot, const std::vector&lt; int &gt; &amp;dofindices, int nControlTransformation)</argsstring>
        <name>Init</name>
        <reimplements refid="classOpenRAVE_1_1ControllerBase_1a27ba60fa2a3a9f63a64b127369482d9a">Init</reimplements>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a5a9955dc6058f09c4462952478dfcf58" kindref="member">RobotBasePtr</ref></type>
          <declname>robot</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>dofindices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nControlTransformation</declname>
        </param>
        <briefdescription>
<para>removes all controllers. <bold>[multi-thread safe]</bold> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="141"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1ac832f4b57548e744cabdaae217278bcb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>virtual const std::vector&lt;int&gt;&amp; GetControlDOFIndices</definition>
        <argsstring>() const </argsstring>
        <name>GetControlDOFIndices</name>
        <reimplements refid="classOpenRAVE_1_1ControllerBase_1a4dad85cda4f74030d3d50e0ae37f7d68">GetControlDOFIndices</reimplements>
        <briefdescription>
<para>returns the dof indices controlled </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="142"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1a6c462684c3045b5750621c92b0da6caa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int IsControlTransformation</definition>
        <argsstring>() const </argsstring>
        <name>IsControlTransformation</name>
        <reimplements refid="classOpenRAVE_1_1ControllerBase_1af577c7692eed532e6ed26db3dca5ef47">IsControlTransformation</reimplements>
        <briefdescription>
<para>returns non-zero value if base affine transformation is controlled. </para>        </briefdescription>
        <detaileddescription>
<para>Only one controller can modify translation and orientation per robot. For now, the two cannot be divided. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="143"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1a8d4e8b42f55281a47dd90d525f19e9c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1a5a9955dc6058f09c4462952478dfcf58" kindref="member">RobotBasePtr</ref></type>
        <definition>virtual RobotBasePtr GetRobot</definition>
        <argsstring>() const </argsstring>
        <name>GetRobot</name>
        <reimplements refid="classOpenRAVE_1_1ControllerBase_1a096f5c8d99a8100089ee11b7fc8bda3f">GetRobot</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="144"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1a908295878cfb74d5e6ef193e2e7c6cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool AttachController</definition>
        <argsstring>(ControllerBasePtr controller, const std::vector&lt; int &gt; &amp;dofindices, int nControlTransformation)</argsstring>
        <name>AttachController</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a93f3c54acfadfefe33b745f7df0c81cf" kindref="member">ControllerBasePtr</ref></type>
          <declname>controller</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>dofindices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nControlTransformation</declname>
        </param>
        <briefdescription>
<para>initializes and adds a controller, must be called after being initialized. <bold>[multi-thread safe]</bold> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>the controller to init </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dofindices</parametername>
</parameternamelist>
<parameterdescription>
<para>robot dof indices to control </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classOpenRAVE_1_1openrave__exception" kindref="compound">openrave_exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the controller dofs interfere with current set dofs, will throw an exception </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="151"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1a865e2cee305a6c50e2b449d5920be590" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void RemoveController</definition>
        <argsstring>(ControllerBasePtr controller)</argsstring>
        <name>RemoveController</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a93f3c54acfadfefe33b745f7df0c81cf" kindref="member">ControllerBasePtr</ref></type>
          <declname>controller</declname>
        </param>
        <briefdescription>
<para>removes a controller from being managed. <bold>[multi-thread safe]</bold> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="154"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1a9c508b103e44320830142f2b450e6d5e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1a93f3c54acfadfefe33b745f7df0c81cf" kindref="member">ControllerBasePtr</ref></type>
        <definition>virtual ControllerBasePtr GetController</definition>
        <argsstring>(int dof) const </argsstring>
        <name>GetController</name>
        <param>
          <type>int</type>
          <declname>dof</declname>
        </param>
        <briefdescription>
<para>gets the controller responsible for dof (in the robot). If dof &lt; 0, returns the transform controller. <bold>[multi-thread safe]</bold> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="157"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1a9989f0173dfbf913acbb058988e73afa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Reset</definition>
        <argsstring>(int options)</argsstring>
        <name>Reset</name>
        <reimplements refid="classOpenRAVE_1_1ControllerBase_1aa495f583f5f0b3b3c412f730fdf8d715">Reset</reimplements>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Resets the current controller trajectories and any other state associated with the robot. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>- specific options that can be used to control what to reset </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="159"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1a6cb246f2c19bc075c38f34e0ccd89014" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SetDesired</definition>
        <argsstring>(const std::vector&lt; dReal &gt; &amp;values, TransformConstPtr trans=TransformConstPtr())</argsstring>
        <name>SetDesired</name>
        <reimplements refid="classOpenRAVE_1_1ControllerBase_1accd34e8fe0dfb473777ab4668bf7a5d9">SetDesired</reimplements>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a6d8be5f641c37cf8096b9bc60c49d763" kindref="member">TransformConstPtr</ref></type>
          <declname>trans</declname>
          <defval><ref refid="namespaceOpenRAVE_1a6d8be5f641c37cf8096b9bc60c49d763" kindref="member">TransformConstPtr</ref>()</defval>
        </param>
        <briefdescription>
<para>go to a specific position in configuration space. <bold>[multi-thread safe]</bold> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>the final configuration in the control dofs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trans</parametername>
</parameternamelist>
<parameterdescription>
<para>the transformation of the base. If not specified will use the current robot transformation. Ignored if controller does not use it </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if position operation successful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="160"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1af1e3ef64d2cae76132b269abc057af31" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SetPath</definition>
        <argsstring>(TrajectoryBaseConstPtr ptraj)</argsstring>
        <name>SetPath</name>
        <reimplements refid="classOpenRAVE_1_1ControllerBase_1aaab0e601177272e3bedb63f0ff5ebf32">SetPath</reimplements>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ae4a194e7d8dcb23b1acad4ff9f84ad49" kindref="member">TrajectoryBaseConstPtr</ref></type>
          <declname>ptraj</declname>
        </param>
        <briefdescription>
<para>Follow a path in configuration space, adds to the queue of trajectories already in execution. <bold>[multi-thread safe]</bold> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptraj</parametername>
</parameternamelist>
<parameterdescription>
<para>- the trajectory </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if trajectory operation successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="161"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1a8e0171e39bae4dfe1590c0c844cf2b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SimulationStep</definition>
        <argsstring>(dReal fTimeElapsed)</argsstring>
        <name>SimulationStep</name>
        <reimplements refid="classOpenRAVE_1_1ControllerBase_1a43163cebf021667f69b0c6b2d357c2fa">SimulationStep</reimplements>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
          <declname>fTimeElapsed</declname>
        </param>
        <briefdescription>
<para>Simulate one step forward for controllers running in the simulation environment. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fTimeElapsed</parametername>
</parameternamelist>
<parameterdescription>
<para>- time elapsed in simulation environment since last frame </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="162"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1a223430ff4833c832a9689262eeb6a509" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool IsDone</definition>
        <argsstring>()</argsstring>
        <name>IsDone</name>
        <reimplements refid="classOpenRAVE_1_1ControllerBase_1a2a9a4df35568126aca5e305ca35d1d31">IsDone</reimplements>
        <briefdescription>
<para>returns true only if all controllers return true </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="165"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1aeeadca62100efc2104208ddac5603bef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
        <definition>virtual dReal GetTime</definition>
        <argsstring>() const </argsstring>
        <name>GetTime</name>
        <reimplements refid="classOpenRAVE_1_1ControllerBase_1a80ec605da12db741e7c3e518af07e6d5">GetTime</reimplements>
        <briefdescription>
<para>return the maximum time </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="168"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1a760d2da71c596f9e967ef85b842ff758" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetVelocity</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;vel) const </argsstring>
        <name>GetVelocity</name>
        <reimplements refid="classOpenRAVE_1_1ControllerBase_1aa7df84105fae386c84139ce5c5b7f1f1">GetVelocity</reimplements>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>vel</declname>
        </param>
        <briefdescription>
<para>get velocity of the controlled DOFs </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vel</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] - current velocity of robot from the dof </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="170"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1MultiController_1aa9cb5e097c6ecb5d0b157f9b7c581085" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetTorque</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;torque) const </argsstring>
        <name>GetTorque</name>
        <reimplements refid="classOpenRAVE_1_1ControllerBase_1a5850b39ddc68841ef2961c2eb7bf7b8f">GetTorque</reimplements>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>torque</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get torque/current/strain values <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>torque</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] - returns the current torque/current/strain exerted by each of the dofs from outside forces. The feedforward and friction terms should be subtracted out already </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="175"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>controller that manage multiple controllers, allows users to easily set multiple controllers for one robot. </para>    </briefdescription>
    <detaileddescription>
<para>The class also make sure individual controllers do not have colliding DOF. It ignores the </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1496">
        <label>ControllerBase</label>
        <link refid="classOpenRAVE_1_1ControllerBase"/>
        <childnode refid="1497" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1497">
        <label>InterfaceBase</label>
        <link refid="classOpenRAVE_1_1InterfaceBase"/>
      </node>
      <node id="1495">
        <label>MultiController</label>
        <link refid="classOpenRAVE_1_1MultiController"/>
        <childnode refid="1496" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1507">
        <label>vector&lt; ControllerBasePtr &gt;</label>
      </node>
      <node id="1499">
        <label>ControllerBase</label>
        <link refid="classOpenRAVE_1_1ControllerBase"/>
        <childnode refid="1500" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1501">
        <label>string</label>
        <childnode refid="1502" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1503">
        <label>map&lt; std::string, boost::shared_ptr&lt; InterfaceCommand &gt;, CaseInsensitiveCompare &gt;</label>
        <childnode refid="1501" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="1502">
        <label>basic_string&lt; char &gt;</label>
      </node>
      <node id="1506">
        <label>vector&lt; int &gt;</label>
      </node>
      <node id="1505">
        <label>list&lt; ControllerBasePtr &gt;</label>
      </node>
      <node id="1504">
        <label>map&lt; std::string, XMLReadablePtr, CaseInsensitiveCompare &gt;</label>
        <childnode refid="1501" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="1500">
        <label>InterfaceBase</label>
        <link refid="classOpenRAVE_1_1InterfaceBase"/>
        <childnode refid="1501" relation="usage">
          <edgelabel>__strpluginname</edgelabel>
          <edgelabel>__struri</edgelabel>
          <edgelabel>__strxmlid</edgelabel>
          <edgelabel>__description</edgelabel>
        </childnode>
        <childnode refid="1503" relation="usage">
          <edgelabel>__mapCommands</edgelabel>
        </childnode>
        <childnode refid="1504" relation="usage">
          <edgelabel>__mapReadableInterfaces</edgelabel>
        </childnode>
      </node>
      <node id="1498">
        <label>MultiController</label>
        <link refid="classOpenRAVE_1_1MultiController"/>
        <childnode refid="1499" relation="public-inheritance">
        </childnode>
        <childnode refid="1505" relation="usage">
          <edgelabel>_listcontrollers</edgelabel>
        </childnode>
        <childnode refid="1506" relation="usage">
          <edgelabel>_dofreverseindices</edgelabel>
          <edgelabel>_dofindices</edgelabel>
        </childnode>
        <childnode refid="1507" relation="usage">
          <edgelabel>_vcontrollersbydofs</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/pra3cob/openrave/include/openrave/controller.h" line="135" bodyfile="/home/pra3cob/openrave/include/openrave/controller.h" bodystart="134" bodyend="186"/>
    <listofallmembers>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a22f4da10ed5f1c80a18f2bcd96776c1a" prot="protected" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>__description</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a2f9e8f5dab3e9126375a9e479d087224" prot="protected" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>_dofindices</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a9aa9f2e5fea98be176927cd10e3d9b55" prot="protected" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>_dofreverseindices</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1ae909ce72e4a1946873b0e4379393a2d8" prot="protected" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>_listcontrollers</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1abf18812ae19b048af3f11234e0bf605c" prot="protected" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>_mutex</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a1e82d77ea3eec0ff00ec78f1e825bad5" prot="protected" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>_nControlTransformation</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a96b8c6244de5c544065e0611b566cb84" prot="protected" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>_probot</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1aad38f47a7dbda5ff04a45d0ab24a4083" prot="protected" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>_ptraj</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a1bc422fb6c0a6d3f80caf14f64dfb3a7" prot="protected" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>_ptransformcontroller</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a1db0a68fc450ce5b0bc845844caf4355" prot="protected" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>_vcontrollersbydofs</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a908295878cfb74d5e6ef193e2e7c6cbc" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>AttachController</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1aadffdb83bc22dcdd5dd50c27d1bb5496" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>Clone</name></member>
      <member refid="classOpenRAVE_1_1ControllerBase_1af051c65cd5e6c845eba3c83a22ca0116" prot="public" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>ControllerBase</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1ac832f4b57548e744cabdaae217278bcb" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>GetControlDOFIndices</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a9c508b103e44320830142f2b450e6d5e" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>GetController</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a1b571821be060055bf6f2474e12fa5a3" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>GetDescription</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a847c7f827694fd3db16f20b5669e1743" prot="public" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>GetEnv</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1ab6da1a274144d2dae86c4414fdc00c8a" prot="public" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>GetInterfaceType</name></member>
      <member refid="classOpenRAVE_1_1ControllerBase_1affeafe65e7c4094f282d273dedbf069b" prot="public" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>GetInterfaceTypeStatic</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a909d5f1a5ae6d3fbb73b69c26b3e6bb4" prot="public" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>GetPluginName</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a948f97af111d83fad6ff054f88aaa214" prot="public" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>GetReadableInterface</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a843c0a1f79a31b230bb85f265f97be6c" prot="public" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>GetReadableInterfaces</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a8d4e8b42f55281a47dd90d525f19e9c4" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>GetRobot</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1aeeadca62100efc2104208ddac5603bef" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>GetTime</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1aa9cb5e097c6ecb5d0b157f9b7c581085" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>GetTorque</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a155ad446997ca5823937f9c171c17021" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>GetURI</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a975ebca32c743c8530807758e7c46618" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>GetUserData</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a760d2da71c596f9e967ef85b842ff758" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>GetVelocity</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1adebf2ecc7ec47f5d27229457e84cab87" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>GetXMLFilename</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a23e085422cc13cf058b9f9558a7d9de6" prot="public" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>GetXMLId</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1ad5666862ecbce5aee42019ec18687268" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>Init</name></member>
      <member refid="classOpenRAVE_1_1ControllerBase_1ae61f45e499ec45a2b70ae3a1af53101b" prot="public" virt="virtual" ambiguityscope="OpenRAVE::ControllerBase::"><scope>OpenRAVE::MultiController</scope><name>Init</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a1505a042027909cb3c715713812d554f" prot="public" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>InterfaceBase</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1af078e9e99c82cbd71d0bfa325438514e" prot="protected" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>InterfaceCommandFn</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a6c462684c3045b5750621c92b0da6caa" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>IsControlTransformation</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a223430ff4833c832a9689262eeb6a509" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>IsDone</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a91a7c81d7241c410fc2aa78024a6aea5" prot="public" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>MultiController</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a14a2c1d323f2f411a9b9eb1e14b99aca" prot="public" virt="non-virtual"><scope>OpenRAVE::MultiController</scope><name>READERSMAP</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a840776899a1d3677582fc6ef87be6ef2" prot="protected" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>RegisterCommand</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a865e2cee305a6c50e2b449d5920be590" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>RemoveController</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a9989f0173dfbf913acbb058988e73afa" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>Reset</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a1293cda647f18fe751e66b910af52407" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>SendCommand</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a9d548988a71fd50f890acdec255bdc17" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>SetDescription</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a6cb246f2c19bc075c38f34e0ccd89014" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>SetDesired</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1af1e3ef64d2cae76132b269abc057af31" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>SetPath</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1ab3a2d5e41d756988959d9f5cdccfe284" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>SetUserData</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1aba2de87983f5e6ad881df19cc6198018" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>SetUserData</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a8e0171e39bae4dfe1590c0c844cf2b6c" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>SimulationStep</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a1a70446e03a29c6c9a5650886027cd2e" prot="protected" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>UnregisterCommand</name></member>
      <member refid="classOpenRAVE_1_1ControllerBase_1aa248527e7bc5f73db1fddfd87673d65d" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>~ControllerBase</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a90ab55ffa15c68875747d2ac2458b8e1" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>~InterfaceBase</name></member>
      <member refid="classOpenRAVE_1_1MultiController_1a3d3459db8824e195b237cc7d45ed7dc8" prot="public" virt="virtual"><scope>OpenRAVE::MultiController</scope><name>~MultiController</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
