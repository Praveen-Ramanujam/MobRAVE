<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="planningutils_8h" kind="file">
    <compoundname>planningutils.h</compoundname>
    <includes refid="openrave_8h" local="no">openrave/openrave.h</includes>
    <includedby refid="ormulticontrol_8cpp" local="no">src/cppexamples/ormulticontrol.cpp</includedby>
    <includedby refid="ortrajectory_8cpp" local="no">src/cppexamples/ortrajectory.cpp</includedby>
    <includedby refid="oryoubotcontrol_8cpp" local="no">src/cppexamples/oryoubotcontrol.cpp</includedby>
    <incdepgraph>
      <node id="2157">
        <label>list</label>
      </node>
      <node id="2169">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="2194">
        <label>openrave/robot.h</label>
        <link refid="robot_8h"/>
      </node>
      <node id="2151">
        <label>stdarg.h</label>
      </node>
      <node id="2201">
        <label>openrave/environment.h</label>
        <link refid="environment_8h"/>
      </node>
      <node id="2186">
        <label>openrave/plugininfo.h</label>
        <link refid="plugininfo_8h"/>
      </node>
      <node id="2188">
        <label>openrave/spacesampler.h</label>
        <link refid="spacesampler_8h"/>
      </node>
      <node id="2161">
        <label>iomanip</label>
      </node>
      <node id="2165">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="2181">
        <label>limits</label>
      </node>
      <node id="2184">
        <label>openrave/mathextra.h</label>
        <link refid="mathextra_8h"/>
        <childnode refid="2183" relation="include">
        </childnode>
        <childnode refid="2179" relation="include">
        </childnode>
        <childnode refid="2185" relation="include">
        </childnode>
      </node>
      <node id="2167">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="2171">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="2176">
        <label>openrave/config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="2154">
        <label>stdint.h</label>
      </node>
      <node id="2173">
        <label>boost/format.hpp</label>
      </node>
      <node id="2177">
        <label>openrave/interfacehashes.h</label>
        <link refid="interfacehashes_8h"/>
      </node>
      <node id="2179">
        <label>cmath</label>
      </node>
      <node id="2183">
        <label>cassert</label>
      </node>
      <node id="2172">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="2170">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="2155">
        <label>string</label>
      </node>
      <node id="2166">
        <label>boost/weak_ptr.hpp</label>
      </node>
      <node id="2158">
        <label>map</label>
      </node>
      <node id="2160">
        <label>exception</label>
      </node>
      <node id="2162">
        <label>fstream</label>
      </node>
      <node id="2192">
        <label>openrave/collisionchecker.h</label>
        <link refid="collisionchecker_8h"/>
      </node>
      <node id="2164">
        <label>boost/function.hpp</label>
      </node>
      <node id="2197">
        <label>openrave/controller.h</label>
        <link refid="controller_8h"/>
      </node>
      <node id="2196">
        <label>openrave/planner.h</label>
        <link refid="planner_8h"/>
      </node>
      <node id="2149">
        <label>openrave/openrave.h</label>
        <link refid="openrave_8h"/>
        <childnode refid="2150" relation="include">
        </childnode>
        <childnode refid="2151" relation="include">
        </childnode>
        <childnode refid="2152" relation="include">
        </childnode>
        <childnode refid="2153" relation="include">
        </childnode>
        <childnode refid="2154" relation="include">
        </childnode>
        <childnode refid="2155" relation="include">
        </childnode>
        <childnode refid="2156" relation="include">
        </childnode>
        <childnode refid="2157" relation="include">
        </childnode>
        <childnode refid="2158" relation="include">
        </childnode>
        <childnode refid="2159" relation="include">
        </childnode>
        <childnode refid="2160" relation="include">
        </childnode>
        <childnode refid="2161" relation="include">
        </childnode>
        <childnode refid="2162" relation="include">
        </childnode>
        <childnode refid="2163" relation="include">
        </childnode>
        <childnode refid="2164" relation="include">
        </childnode>
        <childnode refid="2165" relation="include">
        </childnode>
        <childnode refid="2166" relation="include">
        </childnode>
        <childnode refid="2167" relation="include">
        </childnode>
        <childnode refid="2168" relation="include">
        </childnode>
        <childnode refid="2169" relation="include">
        </childnode>
        <childnode refid="2170" relation="include">
        </childnode>
        <childnode refid="2171" relation="include">
        </childnode>
        <childnode refid="2172" relation="include">
        </childnode>
        <childnode refid="2173" relation="include">
        </childnode>
        <childnode refid="2174" relation="include">
        </childnode>
        <childnode refid="2175" relation="include">
        </childnode>
        <childnode refid="2176" relation="include">
        </childnode>
        <childnode refid="2177" relation="include">
        </childnode>
        <childnode refid="2178" relation="include">
        </childnode>
        <childnode refid="2184" relation="include">
        </childnode>
        <childnode refid="2186" relation="include">
        </childnode>
        <childnode refid="2187" relation="include">
        </childnode>
        <childnode refid="2188" relation="include">
        </childnode>
        <childnode refid="2189" relation="include">
        </childnode>
        <childnode refid="2190" relation="include">
        </childnode>
        <childnode refid="2191" relation="include">
        </childnode>
        <childnode refid="2192" relation="include">
        </childnode>
        <childnode refid="2193" relation="include">
        </childnode>
        <childnode refid="2194" relation="include">
        </childnode>
        <childnode refid="2195" relation="include">
        </childnode>
        <childnode refid="2196" relation="include">
        </childnode>
        <childnode refid="2197" relation="include">
        </childnode>
        <childnode refid="2198" relation="include">
        </childnode>
        <childnode refid="2199" relation="include">
        </childnode>
        <childnode refid="2200" relation="include">
        </childnode>
        <childnode refid="2201" relation="include">
        </childnode>
      </node>
      <node id="2150">
        <label>cstdio</label>
      </node>
      <node id="2200">
        <label>openrave/viewer.h</label>
        <link refid="viewer_8h"/>
      </node>
      <node id="2148">
        <label>include/openrave/planningutils.h</label>
        <link refid="planningutils.h"/>
        <childnode refid="2149" relation="include">
        </childnode>
      </node>
      <node id="2156">
        <label>vector</label>
      </node>
      <node id="2189">
        <label>openrave/kinbody.h</label>
        <link refid="kinbody_8h"/>
      </node>
      <node id="2182">
        <label>utility</label>
      </node>
      <node id="2163">
        <label>sstream</label>
      </node>
      <node id="2199">
        <label>openrave/sensorsystem.h</label>
        <link refid="sensorsystem_8h"/>
      </node>
      <node id="2198">
        <label>openrave/physicsengine.h</label>
        <link refid="physicsengine_8h"/>
      </node>
      <node id="2168">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="2178">
        <label>openrave/geometry.h</label>
        <link refid="geometry_8h"/>
        <childnode refid="2179" relation="include">
        </childnode>
        <childnode refid="2180" relation="include">
        </childnode>
        <childnode refid="2181" relation="include">
        </childnode>
        <childnode refid="2182" relation="include">
        </childnode>
        <childnode refid="2152" relation="include">
        </childnode>
        <childnode refid="2153" relation="include">
        </childnode>
        <childnode refid="2183" relation="include">
        </childnode>
      </node>
      <node id="2153">
        <label>cstdlib</label>
      </node>
      <node id="2180">
        <label>iostream</label>
      </node>
      <node id="2190">
        <label>openrave/trajectory.h</label>
        <link refid="trajectory_8h"/>
      </node>
      <node id="2185">
        <label>climits</label>
      </node>
      <node id="2187">
        <label>openrave/interface.h</label>
        <link refid="interface_8h"/>
      </node>
      <node id="2195">
        <label>openrave/iksolver.h</label>
        <link refid="iksolver_8h"/>
      </node>
      <node id="2174">
        <label>boost/array.hpp</label>
      </node>
      <node id="2191">
        <label>openrave/module.h</label>
        <link refid="module_8h"/>
      </node>
      <node id="2159">
        <label>set</label>
      </node>
      <node id="2175">
        <label>boost/multi_array.hpp</label>
      </node>
      <node id="2152">
        <label>cstring</label>
      </node>
      <node id="2193">
        <label>openrave/sensor.h</label>
        <link refid="sensor_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2205">
        <label>src/cppexamples/oryoubotcontrol.cpp</label>
        <link refid="oryoubotcontrol_8cpp"/>
      </node>
      <node id="2203">
        <label>src/cppexamples/ormulticontrol.cpp</label>
        <link refid="ormulticontrol_8cpp"/>
      </node>
      <node id="2202">
        <label>include/openrave/planningutils.h</label>
        <link refid="planningutils.h"/>
        <childnode refid="2203" relation="include">
        </childnode>
        <childnode refid="2204" relation="include">
        </childnode>
        <childnode refid="2205" relation="include">
        </childnode>
      </node>
      <node id="2204">
        <label>src/cppexamples/ortrajectory.cpp</label>
        <link refid="ortrajectory_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classOpenRAVE_1_1planningutils_1_1LineCollisionConstraint" prot="public">OpenRAVE::planningutils::LineCollisionConstraint</innerclass>
    <innerclass refid="classOpenRAVE_1_1planningutils_1_1SimpleDistanceMetric" prot="public">OpenRAVE::planningutils::SimpleDistanceMetric</innerclass>
    <innerclass refid="classOpenRAVE_1_1planningutils_1_1SimpleNeighborhoodSampler" prot="public">OpenRAVE::planningutils::SimpleNeighborhoodSampler</innerclass>
    <innerclass refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler" prot="public">OpenRAVE::planningutils::ManipulatorIKGoalSampler</innerclass>
    <innerclass refid="structOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1_1SampleInfo" prot="protected">OpenRAVE::planningutils::ManipulatorIKGoalSampler::SampleInfo</innerclass>
    <innernamespace refid="namespaceOpenRAVE">OpenRAVE</innernamespace>
    <innernamespace refid="namespaceOpenRAVE_1_1planningutils">OpenRAVE::planningutils</innernamespace>
    <briefdescription>
<para>Planning related utilities likes samplers, distance metrics, etc. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006-2011<sp/>Rosen<sp/>Diankov<sp/>&lt;rosen.diankov@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>OpenRAVE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OpenRAVE<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor">#ifndef<sp/>OPENRAVE_PLANNINGUTILS_H</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>OPENRAVE_PLANNINGUTILS_H</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="openrave_8h" kindref="compound" tooltip="Defines the public headers that every plugin must include in order to use openrave...">openrave/openrave.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">OpenRAVE<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespaceOpenRAVE_1_1planningutils" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">planningutils<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1planningutils_1a3371dbb8b41bc0b2a79273dc3b90d375" kindref="member" tooltip="Jitters the active joint angles of the robot until it escapes collision.">JitterActiveDOF</ref>(<ref refid="namespaceOpenRAVE_1a5a9955dc6058f09c4462952478dfcf58" kindref="member">RobotBasePtr</ref><sp/>robot,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMaxIterations=5000,<ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref><sp/>fRand=0.03f,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classOpenRAVE_1_1PlannerBase_1_1PlannerParameters_1a602e68d3c6c25efa6539bbd8b5e02c39" kindref="member" tooltip="Adds a delta state to a curent state, acting like a next-nearest-neighbor function...">PlannerBase::PlannerParameters::NeighStateFn</ref>&amp;<sp/>neighstatefn<sp/>=<sp/><ref refid="classOpenRAVE_1_1PlannerBase_1_1PlannerParameters_1a602e68d3c6c25efa6539bbd8b5e02c39" kindref="member" tooltip="Adds a delta state to a curent state, acting like a next-nearest-neighbor function...">PlannerBase::PlannerParameters::NeighStateFn</ref>());</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1planningutils_1a1f782836180a0fb466ac0a852f234f1f" kindref="member" tooltip="Jitters the transform of a body until it escapes collision.">JitterTransform</ref>(<ref refid="namespaceOpenRAVE_1abdcbe7a0abc56f7fd090dbd298a5a44c" kindref="member">KinBodyPtr</ref><sp/>pbody,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fJitter,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMaxIterations=1000);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1planningutils_1ab5e7f7405551cd5eb22e19e61d424a8b" kindref="member" tooltip="validates a trajectory with respect to the planning constraints.">VerifyTrajectory</ref>(<ref refid="classOpenRAVE_1_1PlannerBase_1ab566be29bf1d40d8631782886bb45bb0" kindref="member">PlannerBase::PlannerParametersConstPtr</ref><sp/>parameters,<sp/><ref refid="namespaceOpenRAVE_1ae4a194e7d8dcb23b1acad4ff9f84ad49" kindref="member">TrajectoryBaseConstPtr</ref><sp/>trajectory,<sp/><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref><sp/>samplingstep=0.002);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1planningutils_1a164e0c7cc3c0c50d13573f72aa57f2dc" kindref="member" tooltip="retimes the trajectory points consisting of active dofs of the robot">RetimeActiveDOFTrajectory</ref>(<ref refid="namespaceOpenRAVE_1aa3c159b394f2e4ec46ac49416a2acf17" kindref="member">TrajectoryBasePtr</ref><sp/>traj,<sp/><ref refid="namespaceOpenRAVE_1a5a9955dc6058f09c4462952478dfcf58" kindref="member">RobotBasePtr</ref><sp/>robot,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hastimestamps=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref><sp/>fmaxvelmult=1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>plannername=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1planningutils_1a0560d78f2da8b7cee9e9106787ec5dda" kindref="member" tooltip="retimes the trajectory points consisting of affine dofs">RetimeAffineTrajectory</ref>(<ref refid="namespaceOpenRAVE_1aa3c159b394f2e4ec46ac49416a2acf17" kindref="member">TrajectoryBasePtr</ref><sp/>traj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;dReal&gt;&amp;<sp/>maxvelocities,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;dReal&gt;&amp;<sp/>maxaccelerations,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hastimestamps=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>plannername=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1planningutils_1ab19429a9a082977dc3300a648dd4a93d" kindref="member" tooltip="convert the trajectory and all its points to a new specification">ConvertTrajectorySpecification</ref>(<ref refid="namespaceOpenRAVE_1aa3c159b394f2e4ec46ac49416a2acf17" kindref="member">TrajectoryBasePtr</ref><sp/>traj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classOpenRAVE_1_1ConfigurationSpecification" kindref="compound" tooltip="A configuration specification references values in the environment that then define...">ConfigurationSpecification</ref>&amp;<sp/>spec);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/><ref refid="namespaceOpenRAVE_1aa3c159b394f2e4ec46ac49416a2acf17" kindref="member">TrajectoryBasePtr</ref><sp/><ref refid="namespaceOpenRAVE_1_1planningutils_1abcb19942c53d53b351156386767bd5c1" kindref="member" tooltip="reverses the order of the trajectory waypoints and times.">ReverseTrajectory</ref>(<ref refid="namespaceOpenRAVE_1ae4a194e7d8dcb23b1acad4ff9f84ad49" kindref="member">TrajectoryBaseConstPtr</ref><sp/>traj);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classOpenRAVE_1_1planningutils_1_1LineCollisionConstraint" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/><ref refid="classOpenRAVE_1_1planningutils_1_1LineCollisionConstraint" kindref="compound" tooltip="Line collision.">LineCollisionConstraint</ref></highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOpenRAVE_1_1planningutils_1_1LineCollisionConstraint" kindref="compound" tooltip="Line collision.">LineCollisionConstraint</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Check(<ref refid="classOpenRAVE_1_1PlannerBase_1a65a20c3007e065de99a3f21bb177013d" kindref="member">PlannerBase::PlannerParametersWeakPtr</ref><sp/>_params,<sp/><ref refid="namespaceOpenRAVE_1a5a9955dc6058f09c4462952478dfcf58" kindref="member">RobotBasePtr</ref><sp/>robot,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;dReal&gt;&amp;<sp/>pQ0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;dReal&gt;&amp;<sp/>pQ1,<sp/><ref refid="namespaceOpenRAVE_1a0d04dbfb6240509e26f8336ab1756937" kindref="member" tooltip="Specifies the boundary conditions of intervals for sampling.">IntervalType</ref><sp/>interval,<sp/><ref refid="classOpenRAVE_1_1PlannerBase_1a5b660e564b471d714462742a939dbd40" kindref="member">PlannerBase::ConfigurationListPtr</ref><sp/>pvCheckedConfigurations);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83" refid="classOpenRAVE_1_1planningutils_1_1LineCollisionConstraint_1a2b2b28a6934599337ccfdcac63516f78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;dReal&gt;<sp/>_vtempconfig,<sp/>dQ;</highlight></codeline>
<codeline lineno="84" refid="classOpenRAVE_1_1planningutils_1_1LineCollisionConstraint_1a78c822433bd8dedb5eada09aca5cb95a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1ae3a01279d893036b26d4bb1b74d3ef0f" kindref="member">CollisionReportPtr</ref><sp/>_report;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classOpenRAVE_1_1planningutils_1_1SimpleDistanceMetric" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/><ref refid="classOpenRAVE_1_1planningutils_1_1SimpleDistanceMetric" kindref="compound" tooltip="simple distance metric based on joint weights">SimpleDistanceMetric</ref></highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOpenRAVE_1_1planningutils_1_1SimpleDistanceMetric" kindref="compound" tooltip="simple distance metric based on joint weights">SimpleDistanceMetric</ref>(<ref refid="namespaceOpenRAVE_1a5a9955dc6058f09c4462952478dfcf58" kindref="member">RobotBasePtr</ref><sp/>robot);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref><sp/>Eval(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;dReal&gt;&amp;<sp/>c0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;dReal&gt;&amp;<sp/>c1);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94" refid="classOpenRAVE_1_1planningutils_1_1SimpleDistanceMetric_1a509c536961a51f5b102005d7bf778ecb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1a5a9955dc6058f09c4462952478dfcf58" kindref="member">RobotBasePtr</ref><sp/>_robot;</highlight></codeline>
<codeline lineno="95" refid="classOpenRAVE_1_1planningutils_1_1SimpleDistanceMetric_1abef4d36e1b419fb7950b2f7537120709" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;dReal&gt;<sp/>weights2;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classOpenRAVE_1_1planningutils_1_1SimpleNeighborhoodSampler" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/><ref refid="classOpenRAVE_1_1planningutils_1_1SimpleNeighborhoodSampler" kindref="compound" tooltip="samples the neighborhood of a configuration using the configuration space distance...">SimpleNeighborhoodSampler</ref></highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOpenRAVE_1_1planningutils_1_1SimpleNeighborhoodSampler" kindref="compound" tooltip="samples the neighborhood of a configuration using the configuration space distance...">SimpleNeighborhoodSampler</ref>(<ref refid="namespaceOpenRAVE_1ad7176d63b178b8eab68b6947d4d850bb" kindref="member">SpaceSamplerBasePtr</ref><sp/>psampler,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::function&lt;<ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;dReal&gt;&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;dReal&gt;&amp;)&gt;&amp;distmetricfn);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Sample(std::vector&lt;dReal&gt;&amp;<sp/>vNewSample,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;dReal&gt;&amp;<sp/>vCurSample,<sp/><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref><sp/>fRadius);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Sample(std::vector&lt;dReal&gt;&amp;<sp/>samples);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107" refid="classOpenRAVE_1_1planningutils_1_1SimpleNeighborhoodSampler_1a2d95cf39fba83f174d52291b9497429a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1ad7176d63b178b8eab68b6947d4d850bb" kindref="member">SpaceSamplerBasePtr</ref><sp/>_psampler;</highlight></codeline>
<codeline lineno="108" refid="classOpenRAVE_1_1planningutils_1_1SimpleNeighborhoodSampler_1adffc52f78b3cf37f580720c06045e775" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::function&lt;dReal(const<sp/>std::vector&lt;dReal&gt;&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;dReal&gt;&amp;)&gt;<sp/>_distmetricfn;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/><ref refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler" kindref="compound" tooltip="Samples numsamples of solutions and each solution to vsolutions.">ManipulatorIKGoalSampler</ref></highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler" kindref="compound" tooltip="Samples numsamples of solutions and each solution to vsolutions.">ManipulatorIKGoalSampler</ref>(<ref refid="classOpenRAVE_1_1RobotBase_1acd0ffcc71189ba5106c0481f70ae94e0" kindref="member">RobotBase::ManipulatorConstPtr</ref><sp/>pmanip,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::list&lt;IkParameterization&gt;&amp;listparameterizations,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nummaxsamples=20,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nummaxtries=10,<sp/><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref><sp/>fsampleprob=1);</highlight></codeline>
<codeline lineno="120" refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1a841814e8d4783a1ea35562cffc3640ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1a841814e8d4783a1ea35562cffc3640ea" kindref="member">~ManipulatorIKGoalSampler</ref>()<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>SetCheckPathConstraintsFn(const<sp/>PlannerBase::PlannerParameters::CheckPathConstraintFn&amp;<sp/>checkfn)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Sample(std::vector&lt;dReal&gt;&amp;<sp/>vgoal);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetIkParameterizationIndex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSamplingProb(<ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref><sp/>fsampleprob);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128" refid="structOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1_1SampleInfo" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1_1SampleInfo" kindref="compound">SampleInfo</ref></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130" refid="structOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1_1SampleInfo_1a7f2d8742bca1024404b3f04ffba74d61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOpenRAVE_1_1IkParameterization" kindref="compound" tooltip="Parameterization of basic primitives for querying inverse-kinematics solutions.">IkParameterization</ref><sp/>_ikparam;</highlight></codeline>
<codeline lineno="131" refid="structOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1_1SampleInfo_1a20478c33b04a7e5d0847e69c5d0f7c13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_numleft;</highlight></codeline>
<codeline lineno="132" refid="structOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1_1SampleInfo_1a2d95cf39fba83f174d52291b9497429a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1ad7176d63b178b8eab68b6947d4d850bb" kindref="member">SpaceSamplerBasePtr</ref><sp/>_psampler;</highlight></codeline>
<codeline lineno="133" refid="structOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1_1SampleInfo_1a29aec141fdcff4335b3d67834ea02195" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_orgindex;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="135" refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1a96b8c6244de5c544065e0611b566cb84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1a5a9955dc6058f09c4462952478dfcf58" kindref="member">RobotBasePtr</ref><sp/>_probot;</highlight></codeline>
<codeline lineno="136" refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1ac6e06d5d4efff1ed1b00c47345bc532d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOpenRAVE_1_1RobotBase_1acd0ffcc71189ba5106c0481f70ae94e0" kindref="member">RobotBase::ManipulatorConstPtr</ref><sp/>_pmanip;</highlight></codeline>
<codeline lineno="137" refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1a427a9ce04a51c550cf4b076c28bdb552" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_nummaxsamples,<sp/>_nummaxtries;</highlight></codeline>
<codeline lineno="138" refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1ac87befcbfdb7503f5829a0ee99481e1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;SampleInfo&gt;<sp/>_listsamples;</highlight></codeline>
<codeline lineno="139" refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1a7e08e622c6ffa37aa689ccbe47c6c5e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1ad7176d63b178b8eab68b6947d4d850bb" kindref="member">SpaceSamplerBasePtr</ref><sp/>_pindexsampler;</highlight></codeline>
<codeline lineno="140" refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1a017e5b4d36f2cd4e2e828e53cce0ea5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref><sp/>_fsampleprob;</highlight></codeline>
<codeline lineno="141" refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1a78c822433bd8dedb5eada09aca5cb95a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1ae3a01279d893036b26d4bb1b74d3ef0f" kindref="member">CollisionReportPtr</ref><sp/>_report;</highlight></codeline>
<codeline lineno="142" refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1a79e7be1389ab2253f7f973eb8b56db11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;dReal&gt;<sp/>&gt;<sp/>_viksolutions;</highlight></codeline>
<codeline lineno="143" refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1a0387c57557444c9d47dd5e7f75a35811" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;int&gt;<sp/>_listreturnedsamples;</highlight></codeline>
<codeline lineno="144" refid="classOpenRAVE_1_1planningutils_1_1ManipulatorIKGoalSampler_1a9959c6ea58fc53b2090ae04e4d670ced" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;dReal&gt;<sp/>_vfreestart;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="namespaceOpenRAVE_1_1planningutils_1aac42ef7a026c90010ccca8b42e5ed203" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;ManipulatorIKGoalSampler&gt;<sp/><ref refid="namespaceOpenRAVE_1_1planningutils_1aac42ef7a026c90010ccca8b42e5ed203" kindref="member">ManipulatorIKGoalSamplerPtr</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>planningutils</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>OpenRAVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/pra3cob/openrave/include/openrave/planningutils.h"/>
  </compounddef>
</doxygen>
