<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="mathextra_8h" kind="file">
    <compoundname>mathextra.h</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">cmath</includes>
    <includes local="no">climits</includes>
    <includedby refid="openrave_8h" local="no">include/openrave/openrave.h</includedby>
    <incdepgraph>
      <node id="1979">
        <label>include/openrave/mathextra.h</label>
        <link refid="mathextra.h"/>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1981" relation="include">
        </childnode>
        <childnode refid="1982" relation="include">
        </childnode>
      </node>
      <node id="1981">
        <label>cmath</label>
      </node>
      <node id="1980">
        <label>cassert</label>
      </node>
      <node id="1982">
        <label>climits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1994">
        <label>src/cppexamples/ikfastloader.cpp</label>
        <link refid="ikfastloader_8cpp"/>
      </node>
      <node id="2003">
        <label>src/cppexamples/orshowsensors.cpp</label>
        <link refid="orshowsensors_8cpp"/>
      </node>
      <node id="1983">
        <label>include/openrave/mathextra.h</label>
        <link refid="mathextra.h"/>
        <childnode refid="1984" relation="include">
        </childnode>
      </node>
      <node id="1986">
        <label>src/cppexamples/orpythonbinding.cpp</label>
        <link refid="orpythonbinding_8cpp"/>
      </node>
      <node id="1993">
        <label>src/libopenrave-core/openrave-core.h</label>
        <link refid="openrave-core_8h"/>
        <childnode refid="1994" relation="include">
        </childnode>
        <childnode refid="1995" relation="include">
        </childnode>
        <childnode refid="1996" relation="include">
        </childnode>
        <childnode refid="1997" relation="include">
        </childnode>
        <childnode refid="1998" relation="include">
        </childnode>
        <childnode refid="1999" relation="include">
        </childnode>
        <childnode refid="1989" relation="include">
        </childnode>
        <childnode refid="2000" relation="include">
        </childnode>
        <childnode refid="2001" relation="include">
        </childnode>
        <childnode refid="2002" relation="include">
        </childnode>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="1990" relation="include">
        </childnode>
        <childnode refid="1991" relation="include">
        </childnode>
      </node>
      <node id="1991">
        <label>src/cppexamples/oryoubotcontrol.cpp</label>
        <link refid="oryoubotcontrol_8cpp"/>
      </node>
      <node id="1998">
        <label>src/cppexamples/orikfilter.cpp</label>
        <link refid="orikfilter_8cpp"/>
      </node>
      <node id="2001">
        <label>src/cppexamples/orplanning_module.cpp</label>
        <link refid="orplanning__module_8cpp"/>
      </node>
      <node id="1992">
        <label>include/openrave/plugin.h</label>
        <link refid="plugin_8h"/>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1987" relation="include">
        </childnode>
      </node>
      <node id="2000">
        <label>src/cppexamples/orplanning_ik.cpp</label>
        <link refid="orplanning__ik_8cpp"/>
      </node>
      <node id="2004">
        <label>src/libopenrave/libopenrave.cpp</label>
        <link refid="libopenrave_8cpp"/>
        <childnode refid="2004" relation="include">
        </childnode>
      </node>
      <node id="1984">
        <label>include/openrave/openrave.h</label>
        <link refid="openrave_8h"/>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1986" relation="include">
        </childnode>
        <childnode refid="1987" relation="include">
        </childnode>
        <childnode refid="1988" relation="include">
        </childnode>
        <childnode refid="1992" relation="include">
        </childnode>
        <childnode refid="1993" relation="include">
        </childnode>
        <childnode refid="2004" relation="include">
        </childnode>
      </node>
      <node id="1985">
        <label>src/cppexamples/customreader.cpp</label>
        <link refid="customreader_8cpp"/>
      </node>
      <node id="1995">
        <label>src/cppexamples/opencvsaving.cpp</label>
        <link refid="opencvsaving_8cpp"/>
      </node>
      <node id="1989">
        <label>src/cppexamples/ormulticontrol.cpp</label>
        <link refid="ormulticontrol_8cpp"/>
      </node>
      <node id="1988">
        <label>include/openrave/planningutils.h</label>
        <link refid="planningutils_8h"/>
        <childnode refid="1989" relation="include">
        </childnode>
        <childnode refid="1990" relation="include">
        </childnode>
        <childnode refid="1991" relation="include">
        </childnode>
      </node>
      <node id="1997">
        <label>src/cppexamples/orconveyormovement.cpp</label>
        <link refid="orconveyormovement_8cpp"/>
      </node>
      <node id="1990">
        <label>src/cppexamples/ortrajectory.cpp</label>
        <link refid="ortrajectory_8cpp"/>
      </node>
      <node id="1996">
        <label>src/cppexamples/orcollision.cpp</label>
        <link refid="orcollision_8cpp"/>
      </node>
      <node id="1999">
        <label>src/cppexamples/orloadviewer.cpp</label>
        <link refid="orloadviewer_8cpp"/>
      </node>
      <node id="1987">
        <label>src/cppexamples/plugincpp.cpp</label>
        <link refid="plugincpp_8cpp"/>
      </node>
      <node id="2002">
        <label>src/cppexamples/orplanning_planner.cpp</label>
        <link refid="orplanning__planner_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceOpenRAVE">OpenRAVE</innernamespace>
    <innernamespace refid="namespaceOpenRAVE_1_1mathextra">OpenRAVE::mathextra</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="mathextra_8h_1af24c16dd00620665fbbeddd0579003c2" prot="public" static="no">
        <name>MATH_ASSERT</name>
        <initializer>assert</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/mathextra.h" line="31" bodyfile="/home/pra3cob/openrave/include/openrave/mathextra.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mathextra_8h_1a1c5a68152fd8c2d5c231f721cda03d56" prot="public" static="no">
        <name>distinctRoots</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/mathextra.h" line="42" bodyfile="/home/pra3cob/openrave/include/openrave/mathextra.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mathextra_8h_1a87ece92dcd9718f61b799bde21d701e7" prot="public" static="no">
        <name>singleRoot</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/mathextra.h" line="43" bodyfile="/home/pra3cob/openrave/include/openrave/mathextra.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mathextra_8h_1a762d7a7cd57955c294601bfe80209604" prot="public" static="no">
        <name>floatRoot01</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/mathextra.h" line="44" bodyfile="/home/pra3cob/openrave/include/openrave/mathextra.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mathextra_8h_1aa01b7937c4887369b17811d204f95590" prot="public" static="no">
        <name>floatRoot12</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/mathextra.h" line="45" bodyfile="/home/pra3cob/openrave/include/openrave/mathextra.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mathextra_8h_1ad858a3ebff1f58b97f8a99a3c5ae79c5" prot="public" static="no">
        <name>tripleRoot</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/mathextra.h" line="46" bodyfile="/home/pra3cob/openrave/include/openrave/mathextra.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mathextra_8h_1a3d58d0ae59d734d03e8eca70d1302adf" prot="public" static="no">
        <name>MULT3</name>
        <param><defname>stride</defname></param>
        <initializer>{ \
        pfres2[0*stride+0] = pf1[0*stride+0]*pf2[0*stride+0]+pf1[0*stride+1]*pf2[1*stride+0]+pf1[0*stride+2]*pf2[2*stride+0]; \
        pfres2[0*stride+1] = pf1[0*stride+0]*pf2[0*stride+1]+pf1[0*stride+1]*pf2[1*stride+1]+pf1[0*stride+2]*pf2[2*stride+1]; \
        pfres2[0*stride+2] = pf1[0*stride+0]*pf2[0*stride+2]+pf1[0*stride+1]*pf2[1*stride+2]+pf1[0*stride+2]*pf2[2*stride+2]; \
        pfres2[1*stride+0] = pf1[1*stride+0]*pf2[0*stride+0]+pf1[1*stride+1]*pf2[1*stride+0]+pf1[1*stride+2]*pf2[2*stride+0]; \
        pfres2[1*stride+1] = pf1[1*stride+0]*pf2[0*stride+1]+pf1[1*stride+1]*pf2[1*stride+1]+pf1[1*stride+2]*pf2[2*stride+1]; \
        pfres2[1*stride+2] = pf1[1*stride+0]*pf2[0*stride+2]+pf1[1*stride+1]*pf2[1*stride+2]+pf1[1*stride+2]*pf2[2*stride+2]; \
        pfres2[2*stride+0] = pf1[2*stride+0]*pf2[0*stride+0]+pf1[2*stride+1]*pf2[1*stride+0]+pf1[2*stride+2]*pf2[2*stride+0]; \
        pfres2[2*stride+1] = pf1[2*stride+0]*pf2[0*stride+1]+pf1[2*stride+1]*pf2[1*stride+1]+pf1[2*stride+2]*pf2[2*stride+1]; \
        pfres2[2*stride+2] = pf1[2*stride+0]*pf2[0*stride+2]+pf1[2*stride+1]*pf2[1*stride+2]+pf1[2*stride+2]*pf2[2*stride+2]; \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/mathextra.h" line="283" bodyfile="/home/pra3cob/openrave/include/openrave/mathextra.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Extra math routines that are useful to have but don&apos;t really belong anywhere. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006-2011<sp/>Rosen<sp/>Diankov<sp/>&lt;rosen.diankov@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>OpenRAVE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OpenRAVE<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENRAVE_MATHEXTRA_H</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>OPENRAVE_MATHEXTRA_H</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENRAVE_API</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>OPENRAVE_API</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BOOST_ASSERT</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MATH_ASSERT<sp/>BOOST_ASSERT</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="mathextra_8h_1af24c16dd00620665fbbeddd0579003c2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATH_ASSERT<sp/>assert</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;climits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">OpenRAVE<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="namespaceOpenRAVE_1_1mathextra" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mathextra<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="mathextra_8h_1a1c5a68152fd8c2d5c231f721cda03d56" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>distinctRoots<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>roots<sp/>r0<sp/>&lt;<sp/>r1<sp/>&lt;<sp/>r2</highlight></codeline>
<codeline lineno="43" refid="mathextra_8h_1a87ece92dcd9718f61b799bde21d701e7" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>singleRoot<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>root<sp/>r0</highlight></codeline>
<codeline lineno="44" refid="mathextra_8h_1a762d7a7cd57955c294601bfe80209604" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>floatRoot01<sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>roots<sp/>r0<sp/>=<sp/>r1<sp/>&lt;<sp/>r2</highlight></codeline>
<codeline lineno="45" refid="mathextra_8h_1aa01b7937c4887369b17811d204f95590" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>floatRoot12<sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>roots<sp/>r0<sp/>&lt;<sp/>r1<sp/>=<sp/>r2</highlight></codeline>
<codeline lineno="46" refid="mathextra_8h_1ad858a3ebff1f58b97f8a99a3c5ae79c5" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>tripleRoot<sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>roots<sp/>r0<sp/>=<sp/>r1<sp/>=<sp/>r2</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiplies<sp/>4x4<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a81fb331bc68449313f352e6582e361a6" kindref="member">mult4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pf1^T<sp/>*<sp/>pf2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a4a44ef5d851ffffeb1288c50abbf29b3" kindref="member">multtrans3</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a06f3263e838f64e607923ff065d9c37a" kindref="member">multtrans4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a725e782059052b4e40f8dc99b39c2779" kindref="member">transnorm3</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfmat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a1f2f6a714d9937409f4af7e8abbedf60" kindref="member">transpose3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ae3ecb8ff5bf7b3701e1eff7a399d5724" kindref="member">transpose4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a6e66dbcddc141b9c134e65aeeb444b68" kindref="member">dot2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a527c9a64311f7f2c2428d79acae6cbff" kindref="member">dot3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a96bf07ea8f5101a0147508758262f674" kindref="member">dot4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a3a0b2ebd387daef7aafb864d73c77038" kindref="member">lengthsqr2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ad8930797789eae5569491c0f05174426" kindref="member">lengthsqr3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1aed0b451327f9924a83137a0aa1229f42" kindref="member">lengthsqr4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1affc167f7a19e542e4d13b79775bdec8f" kindref="member">normalize2</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a229decb2c54cdee7cca9a03139d6f6ec" kindref="member">normalize3</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a4fe10078a02dc7fa9f562de150662fbc" kindref="member">normalize4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a28281cdd752b067fcfa996b3ed329067" kindref="member">cross3</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiplies<sp/>3x3<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a43c711671450191396c6a6fb64b14ab6" kindref="member">mult3_s4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a68d9ac2c8ee157350fb5f7a9e12777df" kindref="member">mult3_s3</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ac0e5067fda68bff2c95ec6656447cfdc" kindref="member">inv3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfdet,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ab4314fb677aba33db7ec8988bdedc1c7" kindref="member">inv4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a81fb331bc68449313f352e6582e361a6" kindref="member">mult4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pf1^T<sp/>*<sp/>pf2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a4a44ef5d851ffffeb1288c50abbf29b3" kindref="member">multtrans3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a06f3263e838f64e607923ff065d9c37a" kindref="member">multtrans4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a725e782059052b4e40f8dc99b39c2779" kindref="member">transnorm3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfmat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a1f2f6a714d9937409f4af7e8abbedf60" kindref="member">transpose3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ae3ecb8ff5bf7b3701e1eff7a399d5724" kindref="member">transpose4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a6e66dbcddc141b9c134e65aeeb444b68" kindref="member">dot2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a527c9a64311f7f2c2428d79acae6cbff" kindref="member">dot3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a96bf07ea8f5101a0147508758262f674" kindref="member">dot4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a3a0b2ebd387daef7aafb864d73c77038" kindref="member">lengthsqr2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ad8930797789eae5569491c0f05174426" kindref="member">lengthsqr3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1aed0b451327f9924a83137a0aa1229f42" kindref="member">lengthsqr4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1affc167f7a19e542e4d13b79775bdec8f" kindref="member">normalize2</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a229decb2c54cdee7cca9a03139d6f6ec" kindref="member">normalize3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a4fe10078a02dc7fa9f562de150662fbc" kindref="member">normalize4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a28281cdd752b067fcfa996b3ed329067" kindref="member">cross3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiplies<sp/>3x3<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a43c711671450191396c6a6fb64b14ab6" kindref="member">mult3_s4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a68d9ac2c8ee157350fb5f7a9e12777df" kindref="member">mult3_s3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ac0e5067fda68bff2c95ec6656447cfdc" kindref="member">inv3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfdet,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ab4314fb677aba33db7ec8988bdedc1c7" kindref="member">inv4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="comment">//<sp/>More<sp/>complex<sp/>ops<sp/>that<sp/>deal<sp/>with<sp/>arbitrary<sp/>matrices<sp/>//</highlight></codeline>
<codeline lineno="116"><highlight class="comment"></highlight></codeline>
<codeline lineno="119"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a3c6e92adb2deae09d195c86818918c4b" kindref="member">eig2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pfmat,<sp/>T*<sp/>peigs,<sp/>T&amp;<sp/>fv1x,<sp/>T&amp;<sp/>fv1y,<sp/>T&amp;<sp/>fv2x,<sp/>T&amp;<sp/>fv2y);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simple<sp/>routines<sp/>for<sp/>linear<sp/>algebra<sp/>algorithms<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a497d33fc82165e195c97e0c834e65db8" kindref="member">CubicRoots</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*r0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*r1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*r2);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ad10d0faef4a5cb3a8469265678154d85" kindref="member">Tridiagonal3</ref><sp/>(S*<sp/>mat,<sp/>T*<sp/>diag,<sp/>T*<sp/>subd);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ab4008c737b79b568a509235e6b9c5f01" kindref="member">QLAlgorithm3</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>m_aafEntry,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>afDiag,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>afSubDiag);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ab4008c737b79b568a509235e6b9c5f01" kindref="member">QLAlgorithm3</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>m_aafEntry,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>afDiag,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>afSubDiag);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="config_8h_1a5570a9c8b03ef026009d5233c146aa0c" kindref="member">OPENRAVE_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a49dafe034618c02f2190ca994eeea976" kindref="member">EigenSymmetric3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>fCovariance,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>eval,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>fAxes);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="134" refid="namespaceOpenRAVE_1_1mathextra_1ac7b910595448278e861ce787a01fc9a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ac7b910595448278e861ce787a01fc9a2" kindref="member">GetCovarBasisVectors</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>fCovariance[3][3],<sp/>T<sp/>vbasis[3][3])</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>EigenVals[3];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a49dafe034618c02f2190ca994eeea976" kindref="member">EigenSymmetric3</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*)fCovariance,<sp/>EigenVals,<sp/>(T*)vbasis);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>new<sp/>axes<sp/>follow<sp/>the<sp/>right-hand<sp/>coord<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a229decb2c54cdee7cca9a03139d6f6ec" kindref="member">normalize3</ref>(vbasis[0],vbasis[0]);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>f<sp/>=<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a527c9a64311f7f2c2428d79acae6cbff" kindref="member">dot3</ref>(vbasis[0],vbasis[1]);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>vbasis[1][0]<sp/>-=<sp/>vbasis[0][0]*f;<sp/>vbasis[1][1]<sp/>-=<sp/>vbasis[0][1]*f;<sp/>vbasis[1][2]<sp/>-=<sp/>vbasis[0][2]*f;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a229decb2c54cdee7cca9a03139d6f6ec" kindref="member">normalize3</ref>(vbasis[1],vbasis[1]);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a28281cdd752b067fcfa996b3ed329067" kindref="member">cross3</ref>(vbasis[2],vbasis[0],vbasis[1]);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a698af188ade25c457317354c0e9ebcba" kindref="member">svd3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>A,<sp/>T*<sp/>U,<sp/>T*<sp/>D,<sp/>T*<sp/>V);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a5da29cad5c0859b8f34444a2c7977744" kindref="member">mult</ref>(T*<sp/>pf,<sp/>T<sp/>fa,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(r<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--r;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf[r]<sp/>*=<sp/>fa;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a28fab5ce9954860ea9ffb5bee9fc0f09" kindref="member">Min</ref>(T*<sp/>pts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPts);<sp/></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>index,<sp/>stride<sp/>in<sp/>units<sp/>of<sp/>T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1afa49cf2b486df8e832804efe2eb23835" kindref="member">Max</ref>(T*<sp/>pts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPts);<sp/></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiplies<sp/>a<sp/>matrix<sp/>by<sp/>a<sp/>scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a5da29cad5c0859b8f34444a2c7977744" kindref="member">mult</ref>(T*<sp/>pf,<sp/>T<sp/>fa,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiplies<sp/>a<sp/>r1xc1<sp/>by<sp/>c1xc2<sp/>matrix<sp/>into<sp/>pfres,<sp/>if<sp/>badd<sp/>is<sp/>true<sp/>adds<sp/>the<sp/>result<sp/>to<sp/>pfres</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>does<sp/>not<sp/>handle<sp/>cases<sp/>where<sp/>pfres<sp/>is<sp/>equal<sp/>to<sp/>pf1<sp/>or<sp/>pf2,<sp/>use<sp/>multtox<sp/>for<sp/>those<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>S*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a5da29cad5c0859b8f34444a2c7977744" kindref="member">mult</ref>(T*<sp/>pf1,<sp/>R*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2,<sp/>S*<sp/>pfres,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>badd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pf1<sp/>is<sp/>transposed<sp/>before<sp/>mult</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rows<sp/>of<sp/>pf2<sp/>must<sp/>equal<sp/>rows<sp/>of<sp/>pf1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pfres<sp/>will<sp/>be<sp/>c1xc2<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>S*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a026fa1e10be5ba90b2907f207a57d686" kindref="member">multtrans</ref>(T*<sp/>pf1,<sp/>R*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2,<sp/>S*<sp/>pfres,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>badd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pf2<sp/>is<sp/>transposed<sp/>before<sp/>mult</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>columns<sp/>of<sp/>both<sp/>matrices<sp/>must<sp/>be<sp/>the<sp/>same<sp/>and<sp/>equal<sp/>to<sp/>c1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>r2<sp/>is<sp/>the<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>pf2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pfres<sp/>must<sp/>be<sp/>an<sp/>r1xr2<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>S*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a9da8532a0ff0230a01ae8e64e59d25b8" kindref="member">multtrans_to2</ref>(T*<sp/>pf1,<sp/>R*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r2,<sp/>S*<sp/>pfres,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>badd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiplies<sp/>rxc<sp/>matrix<sp/>pf1<sp/>and<sp/>cxc<sp/>matrix<sp/>pf2<sp/>and<sp/>stores<sp/>the<sp/>result<sp/>in<sp/>pf1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>function<sp/>needs<sp/>a<sp/>temporary<sp/>buffer<sp/>the<sp/>size<sp/>of<sp/>c<sp/>doubles,<sp/>if<sp/>pftemp<sp/>==<sp/>NULL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>function<sp/>will<sp/>allocate<sp/>the<sp/>necessary<sp/>memory,<sp/>otherwise<sp/>pftemp<sp/>should<sp/>be<sp/>big</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>enough<sp/>to<sp/>store<sp/>all<sp/>the<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ad9d449f5bf7205e75134e9b6452360b7" kindref="member">multto1</ref>(T*<sp/>pf1,<sp/>T*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1,<sp/>T*<sp/>pftemp<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>multto1<sp/>except<sp/>stores<sp/>the<sp/>result<sp/>in<sp/>pf2,<sp/>pf1<sp/>has<sp/>to<sp/>be<sp/>an<sp/>r2xr2<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pftemp<sp/>must<sp/>be<sp/>of<sp/>size<sp/>r2<sp/>if<sp/>not<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a2ccbcd22eee92b1456746b47329263a1" kindref="member">multto2</ref>(T*<sp/>pf1,<sp/>S*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2,<sp/>S*<sp/>pftemp<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>add<sp/>pf1<sp/>+<sp/>pf2<sp/>and<sp/>store<sp/>in<sp/>pf1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a219be6390b14991d050a220fd5485eb1" kindref="member">sub</ref>(T*<sp/>pf1,<sp/>T*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a0f1951ea43605ecb4afc8c63b7df5ede" kindref="member">normsqr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ac64ed03a4d6b1db8560d1d0c6e19122c" kindref="member">lengthsqr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a88c880c263a9a5dc3731a588157ba573" kindref="member">dot</ref>(T*<sp/>pf1,<sp/>T*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ad51c7a2a23e482e3b2d13c0dd938a86f" kindref="member">sum</ref>(T*<sp/>pf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1abb67a10be5fe708132dbe3792089cb43" kindref="member" tooltip="takes the inverse of the 2x2 matrix pf and stores it into pfres, returns true if...">inv2</ref>(T*<sp/>pf,<sp/>T*<sp/>pfres);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="comment">//<sp/>Function<sp/>Definitions</highlight></codeline>
<codeline lineno="211"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="212" refid="namespaceOpenRAVE_1_1mathextra_1a3c6e92adb2deae09d195c86818918c4b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a3c6e92adb2deae09d195c86818918c4b" kindref="member">eig2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pfmat,<sp/>T*<sp/>peigs,<sp/>T&amp;<sp/>fv1x,<sp/>T&amp;<sp/>fv1y,<sp/>T&amp;<sp/>fv2x,<sp/>T&amp;<sp/>fv2y)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x^2<sp/>+<sp/>bx<sp/>+<sp/>c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>a,<sp/>b,<sp/>c,<sp/>d;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>-(pfmat[0]<sp/>+<sp/>pfmat[3]);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>pfmat[0]<sp/>*<sp/>pfmat[3]<sp/>-<sp/>pfmat[1]<sp/>*<sp/>pfmat[2];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>b<sp/>*<sp/>b<sp/>-<sp/>4.0f<sp/>*<sp/>c<sp/>+<sp/>1e-16f;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>d<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>d<sp/>&lt;<sp/>1e-16f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>-0.5f<sp/>*<sp/>b;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peigs[0]<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peigs[1]<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fv1x<sp/>=<sp/>pfmat[1];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fv1y<sp/>=<sp/>a<sp/>-<sp/>pfmat[0];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>1<sp/>/<sp/>sqrt(fv1x*fv1x<sp/>+<sp/>fv1y*fv1y);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fv1x<sp/>*=<sp/>c;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fv1y<sp/>*=<sp/>c;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fv2x<sp/>=<sp/>-fv1y;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fv2y<sp/>=<sp/>fv1x;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>roots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>sqrt(d);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>-0.5f<sp/>*<sp/>(b<sp/>+<sp/>d);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>peigs[0]<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>fv1x<sp/>=<sp/>pfmat[1];</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>fv1y<sp/>=<sp/>a-pfmat[0];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>1<sp/>/<sp/>sqrt(fv1x*fv1x<sp/>+<sp/>fv1y*fv1y);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>fv1x<sp/>*=<sp/>c;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>fv1y<sp/>*=<sp/>c;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>peigs[1]<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>fv2x<sp/>=<sp/>pfmat[1];</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>fv2y<sp/>=<sp/>a-pfmat[0];</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>1<sp/>/<sp/>sqrt(fv2x*fv2x<sp/>+<sp/>fv2y*fv2y);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>fv2x<sp/>*=<sp/>c;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>fv2y<sp/>*=<sp/>c;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>real<sp/>roots,<sp/>fills<sp/>r1<sp/>and<sp/>r2<sp/>with<sp/>the<sp/>answers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="256" refid="namespaceOpenRAVE_1_1mathextra_1ad6d7baf85607fa62597982c478ac0331" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ad6d7baf85607fa62597982c478ac0331" kindref="member">solvequad</ref>(T<sp/>a,<sp/>T<sp/>b,<sp/>T<sp/>c,<sp/>T&amp;<sp/>r1,<sp/>T&amp;<sp/>r2)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>d<sp/>=<sp/>b<sp/>*<sp/>b<sp/>-<sp/>(T)4<sp/>*<sp/>c<sp/>*<sp/>a<sp/>+<sp/>(T)1e-16;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>d<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>d<sp/>&lt;<sp/>(T)1e-16<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1<sp/>=<sp/>r2<sp/>=<sp/>(T)-0.5<sp/>*<sp/>b<sp/>/<sp/>a;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>roots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>sqrt(d);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>r1<sp/>=<sp/>(-b+d)/(2*a);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>r2<sp/>=<sp/>c/(a*r1);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="mathextra_8h_1a3d58d0ae59d734d03e8eca70d1302adf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MULT3(stride)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres2[0*stride+0]<sp/>=<sp/>pf1[0*stride+0]*pf2[0*stride+0]+pf1[0*stride+1]*pf2[1*stride+0]+pf1[0*stride+2]*pf2[2*stride+0];<sp/>\</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres2[0*stride+1]<sp/>=<sp/>pf1[0*stride+0]*pf2[0*stride+1]+pf1[0*stride+1]*pf2[1*stride+1]+pf1[0*stride+2]*pf2[2*stride+1];<sp/>\</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres2[0*stride+2]<sp/>=<sp/>pf1[0*stride+0]*pf2[0*stride+2]+pf1[0*stride+1]*pf2[1*stride+2]+pf1[0*stride+2]*pf2[2*stride+2];<sp/>\</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres2[1*stride+0]<sp/>=<sp/>pf1[1*stride+0]*pf2[0*stride+0]+pf1[1*stride+1]*pf2[1*stride+0]+pf1[1*stride+2]*pf2[2*stride+0];<sp/>\</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres2[1*stride+1]<sp/>=<sp/>pf1[1*stride+0]*pf2[0*stride+1]+pf1[1*stride+1]*pf2[1*stride+1]+pf1[1*stride+2]*pf2[2*stride+1];<sp/>\</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres2[1*stride+2]<sp/>=<sp/>pf1[1*stride+0]*pf2[0*stride+2]+pf1[1*stride+1]*pf2[1*stride+2]+pf1[1*stride+2]*pf2[2*stride+2];<sp/>\</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres2[2*stride+0]<sp/>=<sp/>pf1[2*stride+0]*pf2[0*stride+0]+pf1[2*stride+1]*pf2[1*stride+0]+pf1[2*stride+2]*pf2[2*stride+0];<sp/>\</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres2[2*stride+1]<sp/>=<sp/>pf1[2*stride+0]*pf2[0*stride+1]+pf1[2*stride+1]*pf2[1*stride+1]+pf1[2*stride+2]*pf2[2*stride+1];<sp/>\</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres2[2*stride+2]<sp/>=<sp/>pf1[2*stride+0]*pf2[0*stride+2]+pf1[2*stride+1]*pf2[1*stride+2]+pf1[2*stride+2]*pf2[2*stride+2];<sp/>\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="286"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="287" refid="namespaceOpenRAVE_1_1mathextra_1acdad3d8acab4d752d7373d9cb5a0a9db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1acdad3d8acab4d752d7373d9cb5a0a9db" kindref="member" tooltip="mult3 with a 3x3 matrix whose row stride is 16 bytes">_mult3_s4</ref>(T*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf2)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf1<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf2<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pfres<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>pfres2;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pfres<sp/>==<sp/>pf1)||(pfres<sp/>==<sp/>pf2))<sp/>pfres2<sp/>=<sp/>(T*)alloca(12<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>pfres2<sp/>=<sp/>pfres;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mathextra_8h_1a3d58d0ae59d734d03e8eca70d1302adf" kindref="member">MULT3</ref>(4);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pfres2<sp/>!=<sp/>pfres<sp/>)<sp/>memcpy(pfres,<sp/>pfres2,<sp/>12*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="302" refid="namespaceOpenRAVE_1_1mathextra_1ae5a24b1c71ce7b35a40ae7008ddf47ae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ae5a24b1c71ce7b35a40ae7008ddf47ae" kindref="member" tooltip="mult3 with a 3x3 matrix whose row stride is 12 bytes">_mult3_s3</ref>(T*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf2)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf1<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf2<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pfres<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>pfres2;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pfres<sp/>==<sp/>pf1)||(pfres<sp/>==<sp/>pf2))<sp/>pfres2<sp/>=<sp/>(T*)alloca(9<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>pfres2<sp/>=<sp/>pfres;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mathextra_8h_1a3d58d0ae59d734d03e8eca70d1302adf" kindref="member">MULT3</ref>(3);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pfres2<sp/>!=<sp/>pfres<sp/>)<sp/>memcpy(pfres,<sp/>pfres2,<sp/>9*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mult4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="319" refid="namespaceOpenRAVE_1_1mathextra_1accf35ea6f28861c4eec720e7794dacaa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1accf35ea6f28861c4eec720e7794dacaa" kindref="member">_mult4</ref>(T*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>p2)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pfres<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>p1<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>p2<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>pfres2;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pfres<sp/>==<sp/>p1)||(pfres<sp/>==<sp/>p2))<sp/>pfres2<sp/>=<sp/>(T*)alloca(16<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>pfres2<sp/>=<sp/>pfres;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[0*4+0]<sp/>=<sp/>p1[0*4+0]*p2[0*4+0]<sp/>+<sp/>p1[0*4+1]*p2[1*4+0]<sp/>+<sp/>p1[0*4+2]*p2[2*4+0]<sp/>+<sp/>p1[0*4+3]*p2[3*4+0];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[0*4+1]<sp/>=<sp/>p1[0*4+0]*p2[0*4+1]<sp/>+<sp/>p1[0*4+1]*p2[1*4+1]<sp/>+<sp/>p1[0*4+2]*p2[2*4+1]<sp/>+<sp/>p1[0*4+3]*p2[3*4+1];</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[0*4+2]<sp/>=<sp/>p1[0*4+0]*p2[0*4+2]<sp/>+<sp/>p1[0*4+1]*p2[1*4+2]<sp/>+<sp/>p1[0*4+2]*p2[2*4+2]<sp/>+<sp/>p1[0*4+3]*p2[3*4+2];</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[0*4+3]<sp/>=<sp/>p1[0*4+0]*p2[0*4+3]<sp/>+<sp/>p1[0*4+1]*p2[1*4+3]<sp/>+<sp/>p1[0*4+2]*p2[2*4+3]<sp/>+<sp/>p1[0*4+3]*p2[3*4+3];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[1*4+0]<sp/>=<sp/>p1[1*4+0]*p2[0*4+0]<sp/>+<sp/>p1[1*4+1]*p2[1*4+0]<sp/>+<sp/>p1[1*4+2]*p2[2*4+0]<sp/>+<sp/>p1[1*4+3]*p2[3*4+0];</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[1*4+1]<sp/>=<sp/>p1[1*4+0]*p2[0*4+1]<sp/>+<sp/>p1[1*4+1]*p2[1*4+1]<sp/>+<sp/>p1[1*4+2]*p2[2*4+1]<sp/>+<sp/>p1[1*4+3]*p2[3*4+1];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[1*4+2]<sp/>=<sp/>p1[1*4+0]*p2[0*4+2]<sp/>+<sp/>p1[1*4+1]*p2[1*4+2]<sp/>+<sp/>p1[1*4+2]*p2[2*4+2]<sp/>+<sp/>p1[1*4+3]*p2[3*4+2];</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[1*4+3]<sp/>=<sp/>p1[1*4+0]*p2[0*4+3]<sp/>+<sp/>p1[1*4+1]*p2[1*4+3]<sp/>+<sp/>p1[1*4+2]*p2[2*4+3]<sp/>+<sp/>p1[1*4+3]*p2[3*4+3];</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[2*4+0]<sp/>=<sp/>p1[2*4+0]*p2[0*4+0]<sp/>+<sp/>p1[2*4+1]*p2[1*4+0]<sp/>+<sp/>p1[2*4+2]*p2[2*4+0]<sp/>+<sp/>p1[2*4+3]*p2[3*4+0];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[2*4+1]<sp/>=<sp/>p1[2*4+0]*p2[0*4+1]<sp/>+<sp/>p1[2*4+1]*p2[1*4+1]<sp/>+<sp/>p1[2*4+2]*p2[2*4+1]<sp/>+<sp/>p1[2*4+3]*p2[3*4+1];</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[2*4+2]<sp/>=<sp/>p1[2*4+0]*p2[0*4+2]<sp/>+<sp/>p1[2*4+1]*p2[1*4+2]<sp/>+<sp/>p1[2*4+2]*p2[2*4+2]<sp/>+<sp/>p1[2*4+3]*p2[3*4+2];</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[2*4+3]<sp/>=<sp/>p1[2*4+0]*p2[0*4+3]<sp/>+<sp/>p1[2*4+1]*p2[1*4+3]<sp/>+<sp/>p1[2*4+2]*p2[2*4+3]<sp/>+<sp/>p1[2*4+3]*p2[3*4+3];</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[3*4+0]<sp/>=<sp/>p1[3*4+0]*p2[0*4+0]<sp/>+<sp/>p1[3*4+1]*p2[1*4+0]<sp/>+<sp/>p1[3*4+2]*p2[2*4+0]<sp/>+<sp/>p1[3*4+3]*p2[3*4+0];</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[3*4+1]<sp/>=<sp/>p1[3*4+0]*p2[0*4+1]<sp/>+<sp/>p1[3*4+1]*p2[1*4+1]<sp/>+<sp/>p1[3*4+2]*p2[2*4+1]<sp/>+<sp/>p1[3*4+3]*p2[3*4+1];</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[3*4+2]<sp/>=<sp/>p1[3*4+0]*p2[0*4+2]<sp/>+<sp/>p1[3*4+1]*p2[1*4+2]<sp/>+<sp/>p1[3*4+2]*p2[2*4+2]<sp/>+<sp/>p1[3*4+3]*p2[3*4+2];</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[3*4+3]<sp/>=<sp/>p1[3*4+0]*p2[0*4+3]<sp/>+<sp/>p1[3*4+1]*p2[1*4+3]<sp/>+<sp/>p1[3*4+2]*p2[2*4+3]<sp/>+<sp/>p1[3*4+3]*p2[3*4+3];</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pfres<sp/>!=<sp/>pfres2<sp/>)<sp/>memcpy(pfres,<sp/>pfres2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)*16);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="352" refid="namespaceOpenRAVE_1_1mathextra_1ab6a85af5edd8ccef7544f4a5f887e83b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ab6a85af5edd8ccef7544f4a5f887e83b" kindref="member">_multtrans3</ref>(T*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf2)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>pfres2;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pfres<sp/>==<sp/>pf1<sp/>)<sp/>pfres2<sp/>=<sp/>(T*)alloca(9<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>pfres2<sp/>=<sp/>pfres;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[0]<sp/>=<sp/>pf1[0]*pf2[0]+pf1[3]*pf2[3]+pf1[6]*pf2[6];</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[1]<sp/>=<sp/>pf1[0]*pf2[1]+pf1[3]*pf2[4]+pf1[6]*pf2[7];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[2]<sp/>=<sp/>pf1[0]*pf2[2]+pf1[3]*pf2[5]+pf1[6]*pf2[8];</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[3]<sp/>=<sp/>pf1[1]*pf2[0]+pf1[4]*pf2[3]+pf1[7]*pf2[6];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[4]<sp/>=<sp/>pf1[1]*pf2[1]+pf1[4]*pf2[4]+pf1[7]*pf2[7];</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[5]<sp/>=<sp/>pf1[1]*pf2[2]+pf1[4]*pf2[5]+pf1[7]*pf2[8];</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[6]<sp/>=<sp/>pf1[2]*pf2[0]+pf1[5]*pf2[3]+pf1[8]*pf2[6];</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[7]<sp/>=<sp/>pf1[2]*pf2[1]+pf1[5]*pf2[4]+pf1[8]*pf2[7];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[8]<sp/>=<sp/>pf1[2]*pf2[2]+pf1[5]*pf2[5]+pf1[8]*pf2[8];</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pfres2<sp/>!=<sp/>pfres<sp/>)<sp/>memcpy(pfres,<sp/>pfres2,<sp/>9*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="376" refid="namespaceOpenRAVE_1_1mathextra_1a72ce422ba1557a6048a2d9d175db1785" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a72ce422ba1557a6048a2d9d175db1785" kindref="member">_multtrans4</ref>(T*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf2)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>pfres2;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pfres<sp/>==<sp/>pf1<sp/>)<sp/>pfres2<sp/>=<sp/>(T*)alloca(16<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>pfres2<sp/>=<sp/>pfres;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>4;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres2[4*i+j]<sp/>=<sp/>pf1[i]<sp/>*<sp/>pf2[j]<sp/>+<sp/>pf1[i+4]<sp/>*<sp/>pf2[j+4]<sp/>+<sp/>pf1[i+8]<sp/>*<sp/>pf2[j+8]<sp/>+<sp/>pf1[i+12]<sp/>*<sp/>pf2[j+12];</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pfres2<sp/>!=<sp/>pfres<sp/>)<sp/>memcpy(pfres,<sp/>pfres2,<sp/>16*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="namespaceOpenRAVE_1_1mathextra_1ad9d110d6d2dd3e1f4777ff1c42aa2fff" refkind="member"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ad9d110d6d2dd3e1f4777ff1c42aa2fff" kindref="member" tooltip="Compute the determinant of a 3x3 matrix whose row stride stride elements.">matrixdet3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pf[0*stride+2]<sp/>*<sp/>(pf[1*stride<sp/>+<sp/>0]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>1]<sp/>-<sp/>pf[1*stride<sp/>+<sp/>1]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>0])<sp/>+</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf[1*stride+2]<sp/>*<sp/>(pf[0*stride<sp/>+<sp/>1]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>0]<sp/>-<sp/>pf[0*stride<sp/>+<sp/>0]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>1])<sp/>+</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf[2*stride+2]<sp/>*<sp/>(pf[0*stride<sp/>+<sp/>0]<sp/>*<sp/>pf[1*stride<sp/>+<sp/>1]<sp/>-<sp/>pf[0*stride<sp/>+<sp/>1]<sp/>*<sp/>pf[1*stride<sp/>+<sp/>0]);</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="409" refid="namespaceOpenRAVE_1_1mathextra_1abb859ce4ca095416219250a83ca94793" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1abb859ce4ca095416219250a83ca94793" kindref="member" tooltip="3x3 matrix inverse.">_inv3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf,<sp/>T*<sp/>pfres,<sp/>T*<sp/>pfdet,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>pfres2;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pfres<sp/>==<sp/>pf<sp/>)<sp/>pfres2<sp/>=<sp/>(T*)alloca(3<sp/>*<sp/>stride<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>pfres2<sp/>=<sp/>pfres;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inverse<sp/>=<sp/>C^t<sp/>/<sp/>det(pf)<sp/>where<sp/>C<sp/>is<sp/>the<sp/>matrix<sp/>of<sp/>coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calc<sp/>C^t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[0*stride<sp/>+<sp/>0]<sp/>=<sp/>pf[1*stride<sp/>+<sp/>1]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>2]<sp/>-<sp/>pf[1*stride<sp/>+<sp/>2]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[0*stride<sp/>+<sp/>1]<sp/>=<sp/>pf[0*stride<sp/>+<sp/>2]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>1]<sp/>-<sp/>pf[0*stride<sp/>+<sp/>1]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[0*stride<sp/>+<sp/>2]<sp/>=<sp/>pf[0*stride<sp/>+<sp/>1]<sp/>*<sp/>pf[1*stride<sp/>+<sp/>2]<sp/>-<sp/>pf[0*stride<sp/>+<sp/>2]<sp/>*<sp/>pf[1*stride<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[1*stride<sp/>+<sp/>0]<sp/>=<sp/>pf[1*stride<sp/>+<sp/>2]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>0]<sp/>-<sp/>pf[1*stride<sp/>+<sp/>0]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[1*stride<sp/>+<sp/>1]<sp/>=<sp/>pf[0*stride<sp/>+<sp/>0]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>2]<sp/>-<sp/>pf[0*stride<sp/>+<sp/>2]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[1*stride<sp/>+<sp/>2]<sp/>=<sp/>pf[0*stride<sp/>+<sp/>2]<sp/>*<sp/>pf[1*stride<sp/>+<sp/>0]<sp/>-<sp/>pf[0*stride<sp/>+<sp/>0]<sp/>*<sp/>pf[1*stride<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[2*stride<sp/>+<sp/>0]<sp/>=<sp/>pf[1*stride<sp/>+<sp/>0]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>1]<sp/>-<sp/>pf[1*stride<sp/>+<sp/>1]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[2*stride<sp/>+<sp/>1]<sp/>=<sp/>pf[0*stride<sp/>+<sp/>1]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>0]<sp/>-<sp/>pf[0*stride<sp/>+<sp/>0]<sp/>*<sp/>pf[2*stride<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[2*stride<sp/>+<sp/>2]<sp/>=<sp/>pf[0*stride<sp/>+<sp/>0]<sp/>*<sp/>pf[1*stride<sp/>+<sp/>1]<sp/>-<sp/>pf[0*stride<sp/>+<sp/>1]<sp/>*<sp/>pf[1*stride<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>fdet<sp/>=<sp/>pf[0*stride<sp/>+<sp/>2]<sp/>*<sp/>pfres2[2*stride<sp/>+<sp/>0]<sp/>+<sp/>pf[1*stride<sp/>+<sp/>2]<sp/>*<sp/>pfres2[2*stride<sp/>+<sp/>1]<sp/>+</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf[2*stride<sp/>+<sp/>2]<sp/>*<sp/>pfres2[2*stride<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pfdet<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfdet[0]<sp/>=<sp/>fdet;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(fdet)<sp/>&lt;<sp/>1e-12<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>fdet<sp/>=<sp/>1<sp/>/<sp/>fdet;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(<sp/>pfdet<sp/>!=<sp/>NULL<sp/>)<sp/>*pfdet<sp/>=<sp/>fdet;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pfres<sp/>!=<sp/>pf<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[0*stride+0]<sp/>*=<sp/>fdet;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[0*stride+1]<sp/>*=<sp/>fdet;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[0*stride+2]<sp/>*=<sp/>fdet;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[1*stride+0]<sp/>*=<sp/>fdet;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[1*stride+1]<sp/>*=<sp/>fdet;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[1*stride+2]<sp/>*=<sp/>fdet;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[2*stride+0]<sp/>*=<sp/>fdet;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[2*stride+1]<sp/>*=<sp/>fdet;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[2*stride+2]<sp/>*=<sp/>fdet;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[0*stride+0]<sp/>=<sp/>pfres2[0*stride+0]<sp/>*<sp/>fdet;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[0*stride+1]<sp/>=<sp/>pfres2[0*stride+1]<sp/>*<sp/>fdet;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[0*stride+2]<sp/>=<sp/>pfres2[0*stride+2]<sp/>*<sp/>fdet;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[1*stride+0]<sp/>=<sp/>pfres2[1*stride+0]<sp/>*<sp/>fdet;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[1*stride+1]<sp/>=<sp/>pfres2[1*stride+1]<sp/>*<sp/>fdet;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[1*stride+2]<sp/>=<sp/>pfres2[1*stride+2]<sp/>*<sp/>fdet;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[2*stride+0]<sp/>=<sp/>pfres2[2*stride+0]<sp/>*<sp/>fdet;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[2*stride+1]<sp/>=<sp/>pfres2[2*stride+1]<sp/>*<sp/>fdet;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[2*stride+2]<sp/>=<sp/>pfres2[2*stride+2]<sp/>*<sp/>fdet;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="462" refid="namespaceOpenRAVE_1_1mathextra_1a81c950faa17b5d293eb547c9b3bcab41" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a81c950faa17b5d293eb547c9b3bcab41" kindref="member" tooltip="4x4 matrix inverse.">_inv4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf,<sp/>T*<sp/>pfres)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>pfres2;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pfres<sp/>==<sp/>pf<sp/>)<sp/>pfres2<sp/>=<sp/>(T*)alloca(16<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>pfres2<sp/>=<sp/>pfres;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inverse<sp/>=<sp/>C^t<sp/>/<sp/>det(pf)<sp/>where<sp/>C<sp/>is<sp/>the<sp/>matrix<sp/>of<sp/>coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calc<sp/>C^t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determinants<sp/>of<sp/>all<sp/>possibel<sp/>2x2<sp/>submatrices<sp/>formed<sp/>by<sp/>last<sp/>two<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>fd0,<sp/>fd1,<sp/>fd2;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>f1,<sp/>f2,<sp/>f3;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>fd0<sp/>=<sp/>pf[2*4<sp/>+<sp/>0]<sp/>*<sp/>pf[3*4<sp/>+<sp/>1]<sp/>-<sp/>pf[2*4<sp/>+<sp/>1]<sp/>*<sp/>pf[3*4<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>fd1<sp/>=<sp/>pf[2*4<sp/>+<sp/>1]<sp/>*<sp/>pf[3*4<sp/>+<sp/>2]<sp/>-<sp/>pf[2*4<sp/>+<sp/>2]<sp/>*<sp/>pf[3*4<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>fd2<sp/>=<sp/>pf[2*4<sp/>+<sp/>2]<sp/>*<sp/>pf[3*4<sp/>+<sp/>3]<sp/>-<sp/>pf[2*4<sp/>+<sp/>3]<sp/>*<sp/>pf[3*4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>f1<sp/>=<sp/>pf[2*4<sp/>+<sp/>1]<sp/>*<sp/>pf[3*4<sp/>+<sp/>3]<sp/>-<sp/>pf[2*4<sp/>+<sp/>3]<sp/>*<sp/>pf[3*4<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>f2<sp/>=<sp/>pf[2*4<sp/>+<sp/>0]<sp/>*<sp/>pf[3*4<sp/>+<sp/>3]<sp/>-<sp/>pf[2*4<sp/>+<sp/>3]<sp/>*<sp/>pf[3*4<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>f3<sp/>=<sp/>pf[2*4<sp/>+<sp/>0]<sp/>*<sp/>pf[3*4<sp/>+<sp/>2]<sp/>-<sp/>pf[2*4<sp/>+<sp/>2]<sp/>*<sp/>pf[3*4<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[0*4<sp/>+<sp/>0]<sp/>=<sp/><sp/><sp/>pf[1*4<sp/>+<sp/>1]<sp/>*<sp/>fd2<sp/>-<sp/>pf[1*4<sp/>+<sp/>2]<sp/>*<sp/>f1<sp/>+<sp/>pf[1*4<sp/>+<sp/>3]<sp/>*<sp/>fd1;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[0*4<sp/>+<sp/>1]<sp/>=<sp/>-(pf[0*4<sp/>+<sp/>1]<sp/>*<sp/>fd2<sp/>-<sp/>pf[0*4<sp/>+<sp/>2]<sp/>*<sp/>f1<sp/>+<sp/>pf[0*4<sp/>+<sp/>3]<sp/>*<sp/>fd1);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[1*4<sp/>+<sp/>0]<sp/>=<sp/>-(pf[1*4<sp/>+<sp/>0]<sp/>*<sp/>fd2<sp/>-<sp/>pf[1*4<sp/>+<sp/>2]<sp/>*<sp/>f2<sp/>+<sp/>pf[1*4<sp/>+<sp/>3]<sp/>*<sp/>f3);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[1*4<sp/>+<sp/>1]<sp/>=<sp/><sp/><sp/>pf[0*4<sp/>+<sp/>0]<sp/>*<sp/>fd2<sp/>-<sp/>pf[0*4<sp/>+<sp/>2]<sp/>*<sp/>f2<sp/>+<sp/>pf[0*4<sp/>+<sp/>3]<sp/>*<sp/>f3;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[2*4<sp/>+<sp/>0]<sp/>=<sp/><sp/><sp/>pf[1*4<sp/>+<sp/>0]<sp/>*<sp/>f1<sp/>-<sp/><sp/>pf[1*4<sp/>+<sp/>1]<sp/>*<sp/>f2<sp/>+<sp/>pf[1*4<sp/>+<sp/>3]<sp/>*<sp/>fd0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[2*4<sp/>+<sp/>1]<sp/>=<sp/>-(pf[0*4<sp/>+<sp/>0]<sp/>*<sp/>f1<sp/>-<sp/><sp/>pf[0*4<sp/>+<sp/>1]<sp/>*<sp/>f2<sp/>+<sp/>pf[0*4<sp/>+<sp/>3]<sp/>*<sp/>fd0);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[3*4<sp/>+<sp/>0]<sp/>=<sp/>-(pf[1*4<sp/>+<sp/>0]<sp/>*<sp/>fd1<sp/>-<sp/>pf[1*4<sp/>+<sp/>1]<sp/>*<sp/>f3<sp/>+<sp/>pf[1*4<sp/>+<sp/>2]<sp/>*<sp/>fd0);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[3*4<sp/>+<sp/>1]<sp/>=<sp/><sp/><sp/>pf[0*4<sp/>+<sp/>0]<sp/>*<sp/>fd1<sp/>-<sp/>pf[0*4<sp/>+<sp/>1]<sp/>*<sp/>f3<sp/>+<sp/>pf[0*4<sp/>+<sp/>2]<sp/>*<sp/>fd0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determinants<sp/>of<sp/>first<sp/>2<sp/>rows<sp/>of<sp/>4x4<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>fd0<sp/>=<sp/>pf[0*4<sp/>+<sp/>0]<sp/>*<sp/>pf[1*4<sp/>+<sp/>1]<sp/>-<sp/>pf[0*4<sp/>+<sp/>1]<sp/>*<sp/>pf[1*4<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>fd1<sp/>=<sp/>pf[0*4<sp/>+<sp/>1]<sp/>*<sp/>pf[1*4<sp/>+<sp/>2]<sp/>-<sp/>pf[0*4<sp/>+<sp/>2]<sp/>*<sp/>pf[1*4<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>fd2<sp/>=<sp/>pf[0*4<sp/>+<sp/>2]<sp/>*<sp/>pf[1*4<sp/>+<sp/>3]<sp/>-<sp/>pf[0*4<sp/>+<sp/>3]<sp/>*<sp/>pf[1*4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>f1<sp/>=<sp/>pf[0*4<sp/>+<sp/>1]<sp/>*<sp/>pf[1*4<sp/>+<sp/>3]<sp/>-<sp/>pf[0*4<sp/>+<sp/>3]<sp/>*<sp/>pf[1*4<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>f2<sp/>=<sp/>pf[0*4<sp/>+<sp/>0]<sp/>*<sp/>pf[1*4<sp/>+<sp/>3]<sp/>-<sp/>pf[0*4<sp/>+<sp/>3]<sp/>*<sp/>pf[1*4<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>f3<sp/>=<sp/>pf[0*4<sp/>+<sp/>0]<sp/>*<sp/>pf[1*4<sp/>+<sp/>2]<sp/>-<sp/>pf[0*4<sp/>+<sp/>2]<sp/>*<sp/>pf[1*4<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[0*4<sp/>+<sp/>2]<sp/>=<sp/><sp/><sp/>pf[3*4<sp/>+<sp/>1]<sp/>*<sp/>fd2<sp/>-<sp/>pf[3*4<sp/>+<sp/>2]<sp/>*<sp/>f1<sp/>+<sp/>pf[3*4<sp/>+<sp/>3]<sp/>*<sp/>fd1;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[0*4<sp/>+<sp/>3]<sp/>=<sp/>-(pf[2*4<sp/>+<sp/>1]<sp/>*<sp/>fd2<sp/>-<sp/>pf[2*4<sp/>+<sp/>2]<sp/>*<sp/>f1<sp/>+<sp/>pf[2*4<sp/>+<sp/>3]<sp/>*<sp/>fd1);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[1*4<sp/>+<sp/>2]<sp/>=<sp/>-(pf[3*4<sp/>+<sp/>0]<sp/>*<sp/>fd2<sp/>-<sp/>pf[3*4<sp/>+<sp/>2]<sp/>*<sp/>f2<sp/>+<sp/>pf[3*4<sp/>+<sp/>3]<sp/>*<sp/>f3);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[1*4<sp/>+<sp/>3]<sp/>=<sp/><sp/><sp/>pf[2*4<sp/>+<sp/>0]<sp/>*<sp/>fd2<sp/>-<sp/>pf[2*4<sp/>+<sp/>2]<sp/>*<sp/>f2<sp/>+<sp/>pf[2*4<sp/>+<sp/>3]<sp/>*<sp/>f3;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[2*4<sp/>+<sp/>2]<sp/>=<sp/><sp/><sp/>pf[3*4<sp/>+<sp/>0]<sp/>*<sp/>f1<sp/>-<sp/><sp/>pf[3*4<sp/>+<sp/>1]<sp/>*<sp/>f2<sp/>+<sp/>pf[3*4<sp/>+<sp/>3]<sp/>*<sp/>fd0;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[2*4<sp/>+<sp/>3]<sp/>=<sp/>-(pf[2*4<sp/>+<sp/>0]<sp/>*<sp/>f1<sp/>-<sp/><sp/>pf[2*4<sp/>+<sp/>1]<sp/>*<sp/>f2<sp/>+<sp/>pf[2*4<sp/>+<sp/>3]<sp/>*<sp/>fd0);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[3*4<sp/>+<sp/>2]<sp/>=<sp/>-(pf[3*4<sp/>+<sp/>0]<sp/>*<sp/>fd1<sp/>-<sp/>pf[3*4<sp/>+<sp/>1]<sp/>*<sp/>f3<sp/>+<sp/>pf[3*4<sp/>+<sp/>2]<sp/>*<sp/>fd0);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres2[3*4<sp/>+<sp/>3]<sp/>=<sp/><sp/><sp/>pf[2*4<sp/>+<sp/>0]<sp/>*<sp/>fd1<sp/>-<sp/>pf[2*4<sp/>+<sp/>1]<sp/>*<sp/>f3<sp/>+<sp/>pf[2*4<sp/>+<sp/>2]<sp/>*<sp/>fd0;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>fdet<sp/>=<sp/>pf[0*4<sp/>+<sp/>3]<sp/>*<sp/>pfres2[3*4<sp/>+<sp/>0]<sp/>+<sp/>pf[1*4<sp/>+<sp/>3]<sp/>*<sp/>pfres2[3*4<sp/>+<sp/>1]<sp/>+</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf[2*4<sp/>+<sp/>3]<sp/>*<sp/>pfres2[3*4<sp/>+<sp/>2]<sp/>+<sp/>pf[3*4<sp/>+<sp/>3]<sp/>*<sp/>pfres2[3*4<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(fdet)<sp/>&lt;<sp/>1e-9)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>fdet<sp/>=<sp/>1<sp/>/<sp/>fdet;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(<sp/>pfdet<sp/>!=<sp/>NULL<sp/>)<sp/>*pfdet<sp/>=<sp/>fdet;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pfres2<sp/>==<sp/>pfres<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a5da29cad5c0859b8f34444a2c7977744" kindref="member">mult</ref>(pfres,<sp/>fdet,<sp/>16);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&lt;<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[i]<sp/>=<sp/>pfres2[i]<sp/>*<sp/>fdet;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="540" refid="namespaceOpenRAVE_1_1mathextra_1a98432a8613c3ee83bb5b6d2092b406ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a98432a8613c3ee83bb5b6d2092b406ff" kindref="member" tooltip="Transpose a 3x3 matrix.">_transpose3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf,<sp/>T*<sp/>pfres)</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pfres<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pf<sp/>==<sp/>pfres<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(pfres[1],<sp/>pfres[3]);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(pfres[2],<sp/>pfres[6]);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(pfres[5],<sp/>pfres[7]);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[0]<sp/>=<sp/>pf[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[1]<sp/>=<sp/>pf[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[2]<sp/>=<sp/>pf[6];</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[3]<sp/>=<sp/>pf[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[4]<sp/>=<sp/>pf[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[5]<sp/>=<sp/>pf[7];</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[6]<sp/>=<sp/>pf[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[7]<sp/>=<sp/>pf[5];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[8]<sp/>=<sp/>pf[8];</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="560" refid="namespaceOpenRAVE_1_1mathextra_1af6485a9fbc08e970a019a8c78df0d54b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1af6485a9fbc08e970a019a8c78df0d54b" kindref="member" tooltip="Transpose a 4x4 matrix.">_transpose4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf,<sp/>T*<sp/>pfres)</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pfres<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pf<sp/>==<sp/>pfres<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(pfres[1],<sp/>pfres[4]);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(pfres[2],<sp/>pfres[8]);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(pfres[3],<sp/>pfres[12]);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(pfres[6],<sp/>pfres[9]);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(pfres[7],<sp/>pfres[13]);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(pfres[11],<sp/>pfres[15]);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[0]<sp/>=<sp/>pf[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[1]<sp/>=<sp/>pf[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[2]<sp/>=<sp/>pf[8];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[3]<sp/>=<sp/>pf[12];</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[4]<sp/>=<sp/>pf[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[5]<sp/>=<sp/>pf[5];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[6]<sp/>=<sp/>pf[9];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[7]<sp/>=<sp/>pf[13];</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[8]<sp/>=<sp/>pf[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[9]<sp/>=<sp/>pf[6];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[10]<sp/>=<sp/>pf[10];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[11]<sp/>=<sp/>pf[14];</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[12]<sp/>=<sp/>pf[3];<sp/><sp/><sp/><sp/><sp/><sp/>pfres[13]<sp/>=<sp/>pf[7];<sp/><sp/><sp/><sp/><sp/><sp/>pfres[14]<sp/>=<sp/>pf[11];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[15]<sp/>=<sp/>pf[15];</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="582" refid="namespaceOpenRAVE_1_1mathextra_1a623e8f4c9e97b3c84962c6e9b99fa679" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a623e8f4c9e97b3c84962c6e9b99fa679" kindref="member">_dot2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf2)</highlight></codeline>
<codeline lineno="583"><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf1<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf2<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pf1[0]*pf2[0]<sp/>+<sp/>pf1[1]*pf2[1];</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="589" refid="namespaceOpenRAVE_1_1mathextra_1a659ebd94608c5ff92aae50be29fd2097" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a659ebd94608c5ff92aae50be29fd2097" kindref="member">_dot3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf2)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf1<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf2<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pf1[0]*pf2[0]<sp/>+<sp/>pf1[1]*pf2[1]<sp/>+<sp/>pf1[2]*pf2[2];</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="596" refid="namespaceOpenRAVE_1_1mathextra_1acaa8f8e426d6febf2e4fe5d3b497c161" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1acaa8f8e426d6febf2e4fe5d3b497c161" kindref="member">_dot4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf2)</highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf1<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf2<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pf1[0]*pf2[0]<sp/>+<sp/>pf1[1]*pf2[1]<sp/>+<sp/>pf1[2]*pf2[2]<sp/>+<sp/>pf1[3]<sp/>*<sp/>pf2[3];</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="603" refid="namespaceOpenRAVE_1_1mathextra_1ad2db5ce47ed368515243a0945634a3c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ad2db5ce47ed368515243a0945634a3c5" kindref="member">_lengthsqr2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf)</highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pf[0]<sp/>*<sp/>pf[0]<sp/>+<sp/>pf[1]<sp/>*<sp/>pf[1];</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="610" refid="namespaceOpenRAVE_1_1mathextra_1a2712ff08011a416b781253817d713788" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a2712ff08011a416b781253817d713788" kindref="member">_lengthsqr3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf)</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pf[0]<sp/>*<sp/>pf[0]<sp/>+<sp/>pf[1]<sp/>*<sp/>pf[1]<sp/>+<sp/>pf[2]<sp/>*<sp/>pf[2];</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="617" refid="namespaceOpenRAVE_1_1mathextra_1aa64e50799e90cc59c2c1733fb8031373" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1aa64e50799e90cc59c2c1733fb8031373" kindref="member">_lengthsqr4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf)</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pf[0]<sp/>*<sp/>pf[0]<sp/>+<sp/>pf[1]<sp/>*<sp/>pf[1]<sp/>+<sp/>pf[2]<sp/>*<sp/>pf[2]<sp/>+<sp/>pf[3]<sp/>*<sp/>pf[3];</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="624" refid="namespaceOpenRAVE_1_1mathextra_1a82f1895d58de57e819a121aa483c698e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a82f1895d58de57e819a121aa483c698e" kindref="member">_normalize2</ref>(T*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf)</highlight></codeline>
<codeline lineno="625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(pf<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>f<sp/>=<sp/>pf[0]*pf[0]<sp/>+<sp/>pf[1]*pf[1];</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>=<sp/>1<sp/>/<sp/>sqrt(f);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>pfout[0]<sp/>=<sp/>pf[0]<sp/>*<sp/>f;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>pfout[1]<sp/>=<sp/>pf[1]<sp/>*<sp/>f;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfout;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="637" refid="namespaceOpenRAVE_1_1mathextra_1a937a71d661275c59259cdd6d62775ec3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a937a71d661275c59259cdd6d62775ec3" kindref="member">_normalize3</ref>(T*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf)</highlight></codeline>
<codeline lineno="638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(pf<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>f<sp/>=<sp/>pf[0]*pf[0]<sp/>+<sp/>pf[1]*pf[1]<sp/>+<sp/>pf[2]*pf[2];</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>=<sp/>1<sp/>/<sp/>sqrt(f);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>pfout[0]<sp/>=<sp/>pf[0]<sp/>*<sp/>f;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>pfout[1]<sp/>=<sp/>pf[1]<sp/>*<sp/>f;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>pfout[2]<sp/>=<sp/>pf[2]<sp/>*<sp/>f;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfout;</highlight></codeline>
<codeline lineno="649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="652" refid="namespaceOpenRAVE_1_1mathextra_1a6064a73d64b7d0e816f1e6a8b2dd6d4f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a6064a73d64b7d0e816f1e6a8b2dd6d4f" kindref="member">_normalize4</ref>(T*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf)</highlight></codeline>
<codeline lineno="653"><highlight class="normal">{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(pf<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>f<sp/>=<sp/>pf[0]*pf[0]<sp/>+<sp/>pf[1]*pf[1]<sp/>+<sp/>pf[2]*pf[2]<sp/>+<sp/>pf[3]*pf[3];</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>=<sp/>1<sp/>/<sp/>sqrt(f);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>pfout[0]<sp/>=<sp/>pf[0]<sp/>*<sp/>f;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>pfout[1]<sp/>=<sp/>pf[1]<sp/>*<sp/>f;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>pfout[2]<sp/>=<sp/>pf[2]<sp/>*<sp/>f;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>pfout[3]<sp/>=<sp/>pf[3]<sp/>*<sp/>f;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfout;</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="668" refid="namespaceOpenRAVE_1_1mathextra_1a058906813b50d023a9b2d4f6c3722b7f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a058906813b50d023a9b2d4f6c3722b7f" kindref="member">_cross3</ref>(T*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf2)</highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pfout<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf1<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf2<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>temp[3];</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>temp[0]<sp/>=<sp/>pf1[1]<sp/>*<sp/>pf2[2]<sp/>-<sp/>pf1[2]<sp/>*<sp/>pf2[1];</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>temp[1]<sp/>=<sp/>pf1[2]<sp/>*<sp/>pf2[0]<sp/>-<sp/>pf1[0]<sp/>*<sp/>pf2[2];</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>temp[2]<sp/>=<sp/>pf1[0]<sp/>*<sp/>pf2[1]<sp/>-<sp/>pf1[1]<sp/>*<sp/>pf2[0];</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>pfout[0]<sp/>=<sp/>temp[0];<sp/>pfout[1]<sp/>=<sp/>temp[1];<sp/>pfout[2]<sp/>=<sp/>temp[2];</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfout;</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="682" refid="namespaceOpenRAVE_1_1mathextra_1a01d9e7e21e06c174e19d9b7335960770" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a01d9e7e21e06c174e19d9b7335960770" kindref="member">_transnorm3</ref>(T*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pfmat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf)</highlight></codeline>
<codeline lineno="683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pfout<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pfmat<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>dummy[3];</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>pfreal<sp/>=<sp/>(pfout<sp/>==<sp/>pf)<sp/>?<sp/>dummy<sp/>:<sp/>pfout;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>pfreal[0]<sp/>=<sp/>pf[0]<sp/>*<sp/>pfmat[0]<sp/>+<sp/>pf[1]<sp/>*<sp/>pfmat[1]<sp/>+<sp/>pf[2]<sp/>*<sp/>pfmat[2];</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>pfreal[1]<sp/>=<sp/>pf[0]<sp/>*<sp/>pfmat[3]<sp/>+<sp/>pf[1]<sp/>*<sp/>pfmat[4]<sp/>+<sp/>pf[2]<sp/>*<sp/>pfmat[5];</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>pfreal[2]<sp/>=<sp/>pf[0]<sp/>*<sp/>pfmat[6]<sp/>+<sp/>pf[1]<sp/>*<sp/>pfmat[7]<sp/>+<sp/>pf[2]<sp/>*<sp/>pfmat[8];</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pfout<sp/>==pf<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfout[0]<sp/>=<sp/>pfreal[0];</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfout[1]<sp/>=<sp/>pfreal[1];</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfout[2]<sp/>=<sp/>pfreal[2];</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfout;</highlight></codeline>
<codeline lineno="700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702" refid="namespaceOpenRAVE_1_1mathextra_1a81fb331bc68449313f352e6582e361a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a81fb331bc68449313f352e6582e361a6" kindref="member">mult4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mult4&lt;float&gt;(pfres,<sp/>pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pf1^T<sp/>*<sp/>pf2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706" refid="namespaceOpenRAVE_1_1mathextra_1a4a44ef5d851ffffeb1288c50abbf29b3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a4a44ef5d851ffffeb1288c50abbf29b3" kindref="member">multtrans3</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_multtrans3&lt;float&gt;(pfres,<sp/>pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="709" refid="namespaceOpenRAVE_1_1mathextra_1a06f3263e838f64e607923ff065d9c37a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a06f3263e838f64e607923ff065d9c37a" kindref="member">multtrans4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_multtrans4&lt;float&gt;(pfres,<sp/>pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712" refid="namespaceOpenRAVE_1_1mathextra_1a725e782059052b4e40f8dc99b39c2779" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a725e782059052b4e40f8dc99b39c2779" kindref="member">transnorm3</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfmat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_transnorm3&lt;float&gt;(pfout,<sp/>pfmat,<sp/>pf);</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="namespaceOpenRAVE_1_1mathextra_1a1f2f6a714d9937409f4af7e8abbedf60" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a1f2f6a714d9937409f4af7e8abbedf60" kindref="member">transpose3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_transpose3&lt;float&gt;(pf,<sp/>pfres);</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719" refid="namespaceOpenRAVE_1_1mathextra_1ae3ecb8ff5bf7b3701e1eff7a399d5724" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ae3ecb8ff5bf7b3701e1eff7a399d5724" kindref="member">transpose4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_transpose4&lt;float&gt;(pf,<sp/>pfres);</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723" refid="namespaceOpenRAVE_1_1mathextra_1a6e66dbcddc141b9c134e65aeeb444b68" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a6e66dbcddc141b9c134e65aeeb444b68" kindref="member">dot2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dot2&lt;float&gt;(pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726" refid="namespaceOpenRAVE_1_1mathextra_1a527c9a64311f7f2c2428d79acae6cbff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a527c9a64311f7f2c2428d79acae6cbff" kindref="member">dot3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dot3&lt;float&gt;(pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729" refid="namespaceOpenRAVE_1_1mathextra_1a96bf07ea8f5101a0147508758262f674" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a96bf07ea8f5101a0147508758262f674" kindref="member">dot4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dot4&lt;float&gt;(pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733" refid="namespaceOpenRAVE_1_1mathextra_1a3a0b2ebd387daef7aafb864d73c77038" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a3a0b2ebd387daef7aafb864d73c77038" kindref="member">lengthsqr2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_lengthsqr2&lt;float&gt;(pf);</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736" refid="namespaceOpenRAVE_1_1mathextra_1ad8930797789eae5569491c0f05174426" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ad8930797789eae5569491c0f05174426" kindref="member">lengthsqr3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_lengthsqr3&lt;float&gt;(pf);</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739" refid="namespaceOpenRAVE_1_1mathextra_1aed0b451327f9924a83137a0aa1229f42" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1aed0b451327f9924a83137a0aa1229f42" kindref="member">lengthsqr4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_lengthsqr4&lt;float&gt;(pf);</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="namespaceOpenRAVE_1_1mathextra_1affc167f7a19e542e4d13b79775bdec8f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1affc167f7a19e542e4d13b79775bdec8f" kindref="member">normalize2</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf)<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_normalize2&lt;float&gt;(pfout,<sp/>pf);</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746" refid="namespaceOpenRAVE_1_1mathextra_1a229decb2c54cdee7cca9a03139d6f6ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a229decb2c54cdee7cca9a03139d6f6ec" kindref="member">normalize3</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_normalize3&lt;float&gt;(pfout,<sp/>pf);</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749" refid="namespaceOpenRAVE_1_1mathextra_1a4fe10078a02dc7fa9f562de150662fbc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a4fe10078a02dc7fa9f562de150662fbc" kindref="member">normalize4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf)<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_normalize4&lt;float&gt;(pfout,<sp/>pf);</highlight></codeline>
<codeline lineno="751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753" refid="namespaceOpenRAVE_1_1mathextra_1a28281cdd752b067fcfa996b3ed329067" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a28281cdd752b067fcfa996b3ed329067" kindref="member">cross3</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_cross3&lt;float&gt;(pfout,<sp/>pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiplies<sp/>3x3<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758" refid="namespaceOpenRAVE_1_1mathextra_1a43c711671450191396c6a6fb64b14ab6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a43c711671450191396c6a6fb64b14ab6" kindref="member">mult3_s4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mult3_s4&lt;float&gt;(pfres,<sp/>pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="761" refid="namespaceOpenRAVE_1_1mathextra_1a68d9ac2c8ee157350fb5f7a9e12777df" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a68d9ac2c8ee157350fb5f7a9e12777df" kindref="member">mult3_s3</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mult3_s3&lt;float&gt;(pfres,<sp/>pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765" refid="namespaceOpenRAVE_1_1mathextra_1ac0e5067fda68bff2c95ec6656447cfdc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ac0e5067fda68bff2c95ec6656447cfdc" kindref="member">inv3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfdet,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_inv3&lt;float&gt;(pf,<sp/>pfres,<sp/>pfdet,<sp/>stride);</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768" refid="namespaceOpenRAVE_1_1mathextra_1ab4314fb677aba33db7ec8988bdedc1c7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ab4314fb677aba33db7ec8988bdedc1c7" kindref="member">inv4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pfres)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_inv4&lt;float&gt;(pf,<sp/>pfres);</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773" refid="namespaceOpenRAVE_1_1mathextra_1a51d61c3f4ce92cc12ddc36c596e28818" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a81fb331bc68449313f352e6582e361a6" kindref="member">mult4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mult4&lt;double&gt;(pfres,<sp/>pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pf1^T<sp/>*<sp/>pf2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777" refid="namespaceOpenRAVE_1_1mathextra_1ad913b5b9fe5fd614847b31e53e3e7db7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a4a44ef5d851ffffeb1288c50abbf29b3" kindref="member">multtrans3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_multtrans3&lt;double&gt;(pfres,<sp/>pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780" refid="namespaceOpenRAVE_1_1mathextra_1a17dfaea3650877d99d2d5f29a1ed231c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a06f3263e838f64e607923ff065d9c37a" kindref="member">multtrans4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_multtrans4&lt;double&gt;(pfres,<sp/>pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="783" refid="namespaceOpenRAVE_1_1mathextra_1aa3a8acec5125df0f367c0c953d60e31a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a725e782059052b4e40f8dc99b39c2779" kindref="member">transnorm3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfmat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_transnorm3&lt;double&gt;(pfout,<sp/>pfmat,<sp/>pf);</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787" refid="namespaceOpenRAVE_1_1mathextra_1a457012e782e2f95245815950325c0efa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a1f2f6a714d9937409f4af7e8abbedf60" kindref="member">transpose3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_transpose3&lt;double&gt;(pf,<sp/>pfres);</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790" refid="namespaceOpenRAVE_1_1mathextra_1aeacb67821892b748b6f71a122212d570" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ae3ecb8ff5bf7b3701e1eff7a399d5724" kindref="member">transpose4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_transpose4&lt;double&gt;(pf,<sp/>pfres);</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794" refid="namespaceOpenRAVE_1_1mathextra_1a2b1c71ffd8f415e540c9fe6ae219209b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a6e66dbcddc141b9c134e65aeeb444b68" kindref="member">dot2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dot2&lt;double&gt;(pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="797" refid="namespaceOpenRAVE_1_1mathextra_1afaa340ef61dba68399a443d1b5b850da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a527c9a64311f7f2c2428d79acae6cbff" kindref="member">dot3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dot3&lt;double&gt;(pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800" refid="namespaceOpenRAVE_1_1mathextra_1aec2800b40c34066bd48eb3274267c7d2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a96bf07ea8f5101a0147508758262f674" kindref="member">dot4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dot4&lt;double&gt;(pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804" refid="namespaceOpenRAVE_1_1mathextra_1a3107f8f697b36b792709be295f88fac3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a3a0b2ebd387daef7aafb864d73c77038" kindref="member">lengthsqr2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_lengthsqr2&lt;double&gt;(pf);</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807" refid="namespaceOpenRAVE_1_1mathextra_1ae8b2f5dd2264fc8f50a197f0a055eacd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ad8930797789eae5569491c0f05174426" kindref="member">lengthsqr3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_lengthsqr3&lt;double&gt;(pf);</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810" refid="namespaceOpenRAVE_1_1mathextra_1a1af3baebf2928b5a4b99ad29665b837f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1aed0b451327f9924a83137a0aa1229f42" kindref="member">lengthsqr4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf)<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_lengthsqr4&lt;double&gt;(pf);</highlight></codeline>
<codeline lineno="812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814" refid="namespaceOpenRAVE_1_1mathextra_1aa020dd4463b869ba8786d255fc5ecb91" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1affc167f7a19e542e4d13b79775bdec8f" kindref="member">normalize2</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_normalize2&lt;double&gt;(pfout,<sp/>pf);</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817" refid="namespaceOpenRAVE_1_1mathextra_1a3b2de808d9b42ec46282a1b8aeb3eb68" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a229decb2c54cdee7cca9a03139d6f6ec" kindref="member">normalize3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_normalize3&lt;double&gt;(pfout,<sp/>pf);</highlight></codeline>
<codeline lineno="819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="820" refid="namespaceOpenRAVE_1_1mathextra_1a73ac77b5d5ecdb67f6d4f998373b4aa8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a4fe10078a02dc7fa9f562de150662fbc" kindref="member">normalize4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_normalize4&lt;double&gt;(pfout,<sp/>pf);</highlight></codeline>
<codeline lineno="822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824" refid="namespaceOpenRAVE_1_1mathextra_1a2b3b5a10b93accf124ff45ea0bd5c68f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a28281cdd752b067fcfa996b3ed329067" kindref="member">cross3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_cross3&lt;double&gt;(pfout,<sp/>pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiplies<sp/>3x3<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829" refid="namespaceOpenRAVE_1_1mathextra_1a4c9a9fb2d0102a448f615ef4d63f1b1f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a43c711671450191396c6a6fb64b14ab6" kindref="member">mult3_s4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mult3_s4&lt;double&gt;(pfres,<sp/>pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832" refid="namespaceOpenRAVE_1_1mathextra_1ab384d1c83141acdad73f6cec4f5a6c78" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a68d9ac2c8ee157350fb5f7a9e12777df" kindref="member">mult3_s3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf2)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mult3_s3&lt;double&gt;(pfres,<sp/>pf1,<sp/>pf2);</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836" refid="namespaceOpenRAVE_1_1mathextra_1addece3c4630229504027ea78f2eab03c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ac0e5067fda68bff2c95ec6656447cfdc" kindref="member">inv3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfdet,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_inv3&lt;double&gt;(pf,<sp/>pfres,<sp/>pfdet,<sp/>stride);</highlight></codeline>
<codeline lineno="838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="839" refid="namespaceOpenRAVE_1_1mathextra_1a1f42b846cb8ee1147d2fe85fdd8e8be3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ab4314fb677aba33db7ec8988bdedc1c7" kindref="member">inv4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pfres)<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_inv4&lt;double&gt;(pf,<sp/>pfres);</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="844" refid="namespaceOpenRAVE_1_1mathextra_1a83ec66af95ada84efae402892c3b4550" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>S*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a5da29cad5c0859b8f34444a2c7977744" kindref="member">mult</ref>(T*<sp/>pf1,<sp/>R*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2,<sp/>S*<sp/>pfres,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>badd)</highlight></codeline>
<codeline lineno="845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf1<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf2<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pfres<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!badd<sp/>)<sp/>memset(pfres,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(S)<sp/>*<sp/>r1<sp/>*<sp/>c2);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(r1<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--r1;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(j<sp/>&lt;<sp/>c2)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(k<sp/>&lt;<sp/>c1)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[j]<sp/>+=<sp/>(S)(pf1[k]<sp/>*<sp/>pf2[k*c2<sp/>+<sp/>j]);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++k;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf1<sp/>+=<sp/>c1;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres<sp/>+=<sp/>c2;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="872" refid="namespaceOpenRAVE_1_1mathextra_1a026fa1e10be5ba90b2907f207a57d686" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>S*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a026fa1e10be5ba90b2907f207a57d686" kindref="member">multtrans</ref>(T*<sp/>pf1,<sp/>R*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2,<sp/>S*<sp/>pfres,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>badd)</highlight></codeline>
<codeline lineno="873"><highlight class="normal">{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf1<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf2<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pfres<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!badd<sp/>)<sp/>memset(pfres,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(S)<sp/>*<sp/>c1<sp/>*<sp/>c2);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&lt;<sp/>c1)<sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(j<sp/>&lt;<sp/>c2)<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(k<sp/>&lt;<sp/>r1)<sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[j]<sp/>+=<sp/>(S)(pf1[k*c1]<sp/>*<sp/>pf2[k*c2<sp/>+<sp/>j]);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++k;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres<sp/>+=<sp/>c2;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pf1;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="903" refid="namespaceOpenRAVE_1_1mathextra_1a9da8532a0ff0230a01ae8e64e59d25b8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>S*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a9da8532a0ff0230a01ae8e64e59d25b8" kindref="member">multtrans_to2</ref>(T*<sp/>pf1,<sp/>R*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r2,<sp/>S*<sp/>pfres,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>badd)</highlight></codeline>
<codeline lineno="904"><highlight class="normal">{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf1<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf2<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pfres<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!badd<sp/>)<sp/>memset(pfres,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(S)<sp/>*<sp/>r1<sp/>*<sp/>r2);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(r1<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--r1;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(j<sp/>&lt;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(k<sp/>&lt;<sp/>c1)<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[j]<sp/>+=<sp/>(S)(pf1[k]<sp/>*<sp/>pf2[j*c1<sp/>+<sp/>k]);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++k;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf1<sp/>+=<sp/>c1;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres<sp/>+=<sp/>r2;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pfres;</highlight></codeline>
<codeline lineno="928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930" refid="namespaceOpenRAVE_1_1mathextra_1ad9d449f5bf7205e75134e9b6452360b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ad9d449f5bf7205e75134e9b6452360b7" kindref="member">multto1</ref>(T*<sp/>pf1,<sp/>T*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/>T*<sp/>pftemp)</highlight></codeline>
<codeline lineno="931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf1<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf2<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bdel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pftemp<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pftemp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[c];</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bdel<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(r<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--r;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(j<sp/>&lt;<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pftemp[j]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(k<sp/>&lt;<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pftemp[j]<sp/>+=<sp/>pf1[k]<sp/>*<sp/>pf2[k*c<sp/>+<sp/>j];</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++k;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pf1,<sp/>pftemp,<sp/>c<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf1<sp/>+=<sp/>c;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bdel<sp/>)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>pftemp;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pf1;</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967" refid="namespaceOpenRAVE_1_1mathextra_1a2ccbcd22eee92b1456746b47329263a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a2ccbcd22eee92b1456746b47329263a1" kindref="member">multto2</ref>(T*<sp/>pf1,<sp/>S*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2,<sp/>S*<sp/>pftemp)</highlight></codeline>
<codeline lineno="968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf1<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf2<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bdel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pftemp<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pftemp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>S[r2];</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bdel<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>columns<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(j<sp/>&lt;<sp/>c2)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&lt;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pftemp[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(k<sp/>&lt;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pftemp[i]<sp/>+=<sp/>pf1[i*r2<sp/>+<sp/>k]<sp/>*<sp/>pf2[k*c2<sp/>+<sp/>j];</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++k;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&lt;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pf2+i*c2+j)<sp/>=<sp/>pftemp[i];</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bdel<sp/>)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>pftemp;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pf1;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009" refid="namespaceOpenRAVE_1_1mathextra_1ab6e747e0ab612067f2652d7b13b0289d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ab6e747e0ab612067f2652d7b13b0289d" kindref="member">add</ref>(T*<sp/>pf1,<sp/>T*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf1<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf2<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(r<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--r;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf1[r]<sp/>+=<sp/>pf2[r];</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019" refid="namespaceOpenRAVE_1_1mathextra_1a219be6390b14991d050a220fd5485eb1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a219be6390b14991d050a220fd5485eb1" kindref="member">sub</ref>(T*<sp/>pf1,<sp/>T*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf1<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pf2<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(r<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--r;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf1[r]<sp/>-=<sp/>pf2[r];</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029" refid="namespaceOpenRAVE_1_1mathextra_1a0f1951ea43605ecb4afc8c63b7df5ede" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a0f1951ea43605ecb4afc8c63b7df5ede" kindref="member">normsqr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pf1<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>d<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(r<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--r;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>+=<sp/>pf1[r]<sp/>*<sp/>pf1[r];</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042" refid="namespaceOpenRAVE_1_1mathextra_1ac64ed03a4d6b1db8560d1d0c6e19122c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ac64ed03a4d6b1db8560d1d0c6e19122c" kindref="member">lengthsqr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>d<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(length<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--length;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>t<sp/>=<sp/>pf1[length]<sp/>-<sp/>pf2[length];</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>+=<sp/>t<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054" refid="namespaceOpenRAVE_1_1mathextra_1a88c880c263a9a5dc3731a588157ba573" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a88c880c263a9a5dc3731a588157ba573" kindref="member">dot</ref>(T*<sp/>pf1,<sp/>T*<sp/>pf2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>d<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(length<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--length;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>+=<sp/>pf1[length]<sp/>*<sp/>pf2[length];</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065" refid="namespaceOpenRAVE_1_1mathextra_1ad51c7a2a23e482e3b2d13c0dd938a86f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ad51c7a2a23e482e3b2d13c0dd938a86f" kindref="member">sum</ref>(T*<sp/>pf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>d<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(length<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--length;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>+=<sp/>pf[length];</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076" refid="namespaceOpenRAVE_1_1mathextra_1abb67a10be5fe708132dbe3792089cb43" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1abb67a10be5fe708132dbe3792089cb43" kindref="member" tooltip="takes the inverse of the 2x2 matrix pf and stores it into pfres, returns true if...">inv2</ref>(T*<sp/>pf,<sp/>T*<sp/>pfres)</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>fdet<sp/>=<sp/>pf[0]<sp/>*<sp/>pf[3]<sp/>-<sp/>pf[1]<sp/>*<sp/>pf[2];</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(fdet)<sp/>&lt;<sp/>1e-16<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>fdet<sp/>=<sp/>1<sp/>/<sp/>fdet;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(<sp/>pfdet<sp/>!=<sp/>NULL<sp/>)<sp/>*pfdet<sp/>=<sp/>fdet;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pfres<sp/>!=<sp/>pf<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[0]<sp/>=<sp/>fdet<sp/>*<sp/>pf[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[1]<sp/>=<sp/>-fdet<sp/>*<sp/>pf[1];</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[2]<sp/>=<sp/>-fdet<sp/>*<sp/>pf[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfres[3]<sp/>=<sp/>fdet<sp/>*<sp/>pf[0];</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>ftemp<sp/>=<sp/>pf[0];</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[0]<sp/>=<sp/>pf[3]<sp/>*<sp/>fdet;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[1]<sp/>*=<sp/>-fdet;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[2]<sp/>*=<sp/>-fdet;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>pfres[3]<sp/>=<sp/>ftemp<sp/>*<sp/>pf[0];</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="1101" refid="namespaceOpenRAVE_1_1mathextra_1ad10d0faef4a5cb3a8469265678154d85" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ad10d0faef4a5cb3a8469265678154d85" kindref="member">Tridiagonal3</ref><sp/>(S*<sp/>mat,<sp/>T*<sp/>diag,<sp/>T*<sp/>subd)</highlight></codeline>
<codeline lineno="1102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>ell,<sp/>q;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>mat[0*3+0];</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>mat[0*3+1];</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>mat[0*3+2];</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>mat[1*3+1];</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>mat[1*3+2];</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>=<sp/>mat[2*3+2];</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>subd[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>diag[0]<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fabs(c)<sp/>&gt;=<sp/><ref refid="openrave_8h_1a280aa678a7e8c375487ffb5e10d70fd3" kindref="member">g_fEpsilon</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ell<sp/>=<sp/>(T)sqrt(b*b+c*c);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>/=<sp/>ell;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>/=<sp/>ell;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>2*b*e+c*(f-d);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diag[1]<sp/>=<sp/>d+c*q;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diag[2]<sp/>=<sp/>f-c*q;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subd[0]<sp/>=<sp/>ell;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subd[1]<sp/>=<sp/>e-b*q;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[0*3+0]<sp/>=<sp/>(S)1;<sp/>mat[0*3+1]<sp/>=<sp/>(S)0;<sp/>mat[0*3+2]<sp/>=<sp/>(T)0;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[1*3+0]<sp/>=<sp/>(S)0;<sp/>mat[1*3+1]<sp/>=<sp/>b;<sp/>mat[1*3+2]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[2*3+0]<sp/>=<sp/>(S)0;<sp/>mat[2*3+1]<sp/>=<sp/>c;<sp/>mat[2*3+2]<sp/>=<sp/>-b;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diag[1]<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diag[2]<sp/>=<sp/>f;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subd[0]<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subd[1]<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[0*3+0]<sp/>=<sp/>(S)1;<sp/>mat[0*3+1]<sp/>=<sp/>(S)0;<sp/>mat[0*3+2]<sp/>=<sp/>(S)0;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[1*3+0]<sp/>=<sp/>(S)0;<sp/>mat[1*3+1]<sp/>=<sp/>(S)1;<sp/>mat[1*3+2]<sp/>=<sp/>(S)0;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[2*3+0]<sp/>=<sp/>(S)0;<sp/>mat[2*3+1]<sp/>=<sp/>(S)0;<sp/>mat[2*3+2]<sp/>=<sp/>(S)1;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1139" refid="namespaceOpenRAVE_1_1mathextra_1a698af188ade25c457317354c0e9ebcba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a698af188ade25c457317354c0e9ebcba" kindref="member">svd3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>A,<sp/>T*<sp/>U,<sp/>T*<sp/>D,<sp/>T*<sp/>V)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>VVt[9];</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>eigenvalues[3];</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a4a44ef5d851ffffeb1288c50abbf29b3" kindref="member">multtrans3</ref>(VVt,<sp/>A,<sp/>A);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>eigen<sp/>values<sp/>of<sp/>V:<sp/>VVt<sp/><sp/>V<sp/>=<sp/>V<sp/><sp/>D^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>afSubDiag[3];</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(&amp;VVt,&amp;VVt[9],&amp;V[0]);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ad10d0faef4a5cb3a8469265678154d85" kindref="member">Tridiagonal3</ref>(V,eigenvalues,afSubDiag);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1ab4008c737b79b568a509235e6b9c5f01" kindref="member">QLAlgorithm3</ref>(V,eigenvalues,afSubDiag);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>fDet<sp/>=<sp/><sp/>V[0*3+0]<sp/>*<sp/>(V[1*3+1]<sp/>*<sp/>V[2*3+2]<sp/>-<sp/>V[1*3+2]<sp/>*<sp/>V[2*3+1])<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V[0*3+1]<sp/>*<sp/>(V[1*3+2]<sp/>*<sp/>V[2*3+0]<sp/>-<sp/>V[1*3+0]<sp/>*<sp/>V[2*3+2])<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V[0*3+2]<sp/>*<sp/>(V[1*3+0]<sp/>*<sp/>V[2*3+1]<sp/>-<sp/>V[1*3+1]<sp/>*<sp/>V[2*3+0]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(<sp/>fDet<sp/>&lt;<sp/>0.0f<sp/>)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V[0*3+2]<sp/>=<sp/>-<sp/>V[0*3+2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V[1*3+2]<sp/>=<sp/>-<sp/>V[1*3+2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V[2*3+2]<sp/>=<sp/>-<sp/>V[2*3+2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a68d9ac2c8ee157350fb5f7a9e12777df" kindref="member">mult3_s3</ref>(U,<sp/>A,<sp/>V);<sp/></highlight><highlight class="comment">//<sp/>U<sp/>=<sp/>A<sp/>V<sp/>=<sp/>U<sp/>D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D[i]<sp/>=<sp/>sqrt(eigenvalues[i]);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>f<sp/>=<sp/>1/D[i];</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U[i]<sp/>*=<sp/>f;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U[i+3]<sp/>*=<sp/>f;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U[i+6]<sp/>*=<sp/>f;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>D[1]<sp/>&gt;<sp/>D[maxval]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxval<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>D[2]<sp/>&gt;<sp/>D[maxval]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxval<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>maxval<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flip<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(U[0],<sp/>U[maxval]);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(U[3],<sp/>U[3+maxval]);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(U[6],<sp/>U[6+maxval]);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(V[0],<sp/>V[maxval]);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(V[3],<sp/>V[3+maxval]);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(V[6],<sp/>V[6+maxval]);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(D[0],<sp/>D[maxval]);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>D[1]<sp/>&lt;<sp/>D[2]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(U[1],<sp/>U[2]);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(U[4],<sp/>U[5]);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(U[7],<sp/>U[8]);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(V[1],<sp/>V[2]);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(V[4],<sp/>V[5]);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(V[7],<sp/>V[8]);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(D[1],<sp/>D[2]);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1197" refid="namespaceOpenRAVE_1_1mathextra_1a28fab5ce9954860ea9ffb5bee9fc0f09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1a28fab5ce9954860ea9ffb5bee9fc0f09" kindref="member">Min</ref>(T*<sp/>pts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPts)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pts<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>numPts<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>stride<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best<sp/>=<sp/>pts[0];<sp/>pts<sp/>+=<sp/>stride;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>numPts;<sp/>++i,<sp/>pts<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>best<sp/>&gt;<sp/>pts[0]<sp/>)</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>pts[0];</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1211" refid="namespaceOpenRAVE_1_1mathextra_1afa49cf2b486df8e832804efe2eb23835" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1_1mathextra_1afa49cf2b486df8e832804efe2eb23835" kindref="member">Max</ref>(T*<sp/>pts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPts)</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1af24c16dd00620665fbbeddd0579003c2" kindref="member">MATH_ASSERT</ref>(<sp/>pts<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>numPts<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>stride<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best<sp/>=<sp/>pts[0];<sp/>pts<sp/>+=<sp/>stride;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>numPts;<sp/>++i,<sp/>pts<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>best<sp/>&lt;<sp/>pts[0]<sp/>)</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>pts[0];</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>mathextra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>OpenRAVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/pra3cob/openrave/include/openrave/mathextra.h"/>
  </compounddef>
</doxygen>
