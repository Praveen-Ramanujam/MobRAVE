<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="classOpenRAVE_1_1KinBody" kind="class" prot="public">
    <compoundname>OpenRAVE::KinBody</compoundname>
    <basecompoundref refid="classOpenRAVE_1_1InterfaceBase" prot="public" virt="non-virtual">InterfaceBase</basecompoundref>
    <derivedcompoundref refid="classOpenRAVE_1_1RobotBase" prot="public" virt="non-virtual">RobotBase</derivedcompoundref>
    <includes refid="kinbody_8h" local="no">kinbody.h</includes>
    <innerclass refid="classOpenRAVE_1_1KinBody_1_1BodyState" prot="public">OpenRAVE::KinBody::BodyState</innerclass>
    <innerclass refid="classOpenRAVE_1_1KinBody_1_1Joint" prot="public">OpenRAVE::KinBody::Joint</innerclass>
    <innerclass refid="classOpenRAVE_1_1KinBody_1_1KinBodyStateSaver" prot="public">OpenRAVE::KinBody::KinBodyStateSaver</innerclass>
    <innerclass refid="classOpenRAVE_1_1KinBody_1_1Link" prot="public">OpenRAVE::KinBody::Link</innerclass>
    <innerclass refid="classOpenRAVE_1_1KinBody_1_1ManageData" prot="public">OpenRAVE::KinBody::ManageData</innerclass>
      <sectiondef kind="user-defined">
      <header>Basic Information</header>
      <description><para><anchor id="_1amgrp87cabb0c5e5abac7a37df3f21bf09d17"/> Methods for accessing basic information about joints </para></description>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a44fbec2fd26a45cada889c5c0f0751c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int GetDOF</definition>
        <argsstring>() const </argsstring>
        <name>GetDOF</name>
        <briefdescription>
<para>Number controllable degrees of freedom of the body. </para>        </briefdescription>
        <detaileddescription>
<para>Only uses _vecjoints and last joint for computation, so can work before _ComputeInternalInformation is called. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="912"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1aa07f040a19a9fe7b80254915b1cce26b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetDOFValues</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const </argsstring>
        <name>GetDOFValues</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns all the joint values as organized by the DOF indices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="915"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1af77a7f1b7f83bbd441c8e488c2f57e94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetDOFVelocities</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const </argsstring>
        <name>GetDOFVelocities</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns all the joint velocities as organized by the DOF indices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="917"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a3eb84ab4c44c1589ca8ff5ffaf14ddc3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetDOFLimits</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;lowerlimit, std::vector&lt; dReal &gt; &amp;upperlimit) const </argsstring>
        <name>GetDOFLimits</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>lowerlimit</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>upperlimit</declname>
        </param>
        <briefdescription>
<para>Returns all the joint limits as organized by the DOF indices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="919"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a62447722990a87e074023da86ce5bb74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetDOFVelocityLimits</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;lowerlimit, std::vector&lt; dReal &gt; &amp;upperlimit) const </argsstring>
        <name>GetDOFVelocityLimits</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>lowerlimit</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>upperlimit</declname>
        </param>
        <briefdescription>
<para>Returns all the joint velocity limits as organized by the DOF indices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="921"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a235492faf314ece039e652cb7493ef32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetDOFVelocityLimits</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;maxvelocities) const </argsstring>
        <name>GetDOFVelocityLimits</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>maxvelocities</declname>
        </param>
        <briefdescription>
<para>Returns the max velocity for each DOF. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="923"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ad463b766576c1691d2937c43d53ec61b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetDOFAccelerationLimits</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;maxaccelerations) const </argsstring>
        <name>GetDOFAccelerationLimits</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>maxaccelerations</declname>
        </param>
        <briefdescription>
<para>Returns the max acceleration for each DOF. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="925"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a1e9ec62d458f7c3b1ea298fa0499b25e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void GetDOFMaxVel</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const RAVE_DEPRECATED</argsstring>
        <name>GetDOFMaxVel</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000012"><xreftitle>非推奨</xreftitle><xrefdescription><para>(11/05/26) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="928" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="928" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a6fe001f451547229641f352a57cac7c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void GetDOFMaxAccel</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const RAVE_DEPRECATED</argsstring>
        <name>GetDOFMaxAccel</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="931" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="931" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a30e259c711d606c9d38591da2c169ca8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetDOFMaxTorque</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const </argsstring>
        <name>GetDOFMaxTorque</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="934"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a8179efee098a3632e86cd3e278e89781" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetDOFResolutions</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const </argsstring>
        <name>GetDOFResolutions</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="935"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a6568e67c28b56bea234bcbdf78172ee6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetDOFWeights</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const </argsstring>
        <name>GetDOFWeights</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="936"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a01fcab06f416b2ac3bac1385e09ff9bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" kindref="member">JointPtr</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;JointPtr&gt;&amp; GetJoints</definition>
        <argsstring>() const </argsstring>
        <name>GetJoints</name>
        <briefdescription>
<para>Returns the joints making up the controllable degrees of freedom of the body. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="939" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="939" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ab7ece8b3b39a3c9dcc61899dc8dc783e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" kindref="member">JointPtr</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;JointPtr&gt;&amp; GetPassiveJoints</definition>
        <argsstring>() const </argsstring>
        <name>GetPassiveJoints</name>
        <briefdescription>
<para>Returns the passive joints, order does not matter. </para>        </briefdescription>
        <detaileddescription>
<para>A passive joint is not directly controlled by the body&apos;s degrees of freedom so it has no joint index and no dof index. Passive joints allows mimic joints to be hidden from the users. However, there are cases when passive joints are not mimic; for example, suspension mechanism on vehicles. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="949" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="949" bodyend="951"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a2fc883be19068452aa218bf252c244b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetRigidlyAttachedLinks</definition>
        <argsstring>(int linkindex, std::vector&lt; LinkPtr &gt; &amp;vattachedlinks) const RAVE_DEPRECATED</argsstring>
        <name>GetRigidlyAttachedLinks</name>
        <param>
          <type>int</type>
          <declname>linkindex</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classOpenRAVE_1_1KinBody_1a8dea7b02ac1900156e6776d795c476c3" kindref="member">LinkPtr</ref> &gt; &amp;</type>
          <declname>vattachedlinks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000013"><xreftitle>非推奨</xreftitle><xrefdescription></xrefdescription></xrefsect><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1KinBody_1_1Link_1a1452271a9a62d59785c04764543f94d7" kindref="member">Link::GetRigidlyAttachedLinks</ref> (10/12/12) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="954"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a23704d633d23272f467ea0a2ca5a5223" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::vector&lt; <ref refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" kindref="member">JointPtr</ref> &gt; &amp;</type>
        <definition>virtual const std::vector&lt;JointPtr&gt;&amp; GetDependencyOrderedJoints</definition>
        <argsstring>() const </argsstring>
        <name>GetDependencyOrderedJoints</name>
        <briefdescription>
<para>Returns the joints in hierarchical order starting at the base link. </para>        </briefdescription>
        <detaileddescription>
<para>In the case of closed loops, the joints are returned in the order closest to the root. All the joints affecting a particular joint&apos;s transformation will always come before the joint in the list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="960"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a6eb3b9da2ed2b9b8eec770f018bbeb19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::vector&lt; std::vector&lt; std::pair&lt; <ref refid="classOpenRAVE_1_1KinBody_1a8dea7b02ac1900156e6776d795c476c3" kindref="member">LinkPtr</ref>, <ref refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" kindref="member">JointPtr</ref> &gt; &gt; &gt; &amp;</type>
        <definition>virtual const std::vector&lt; std::vector&lt; std::pair&lt;LinkPtr, JointPtr&gt; &gt; &gt;&amp; GetClosedLoops</definition>
        <argsstring>() const </argsstring>
        <name>GetClosedLoops</name>
        <briefdescription>
<para>Return the set of unique closed loops of the kinematics hierarchy. </para>        </briefdescription>
        <detaileddescription>
<para>Each loop is a set of link indices and joint indices. For example, a loop of link indices: [l_0,l_1,l_2] will consist of three joints connecting l_0 to l_1, l_1 to l_2, and l_2 to l_0. The first element in the pair is the link l_X, the second element in the joint connecting l_X to l_(X+1). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="968"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a81d58139430e2200f75c1bbba99c6a74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool GetChain</definition>
        <argsstring>(int linkindex1, int linkindex2, std::vector&lt; JointPtr &gt; &amp;vjoints) const </argsstring>
        <name>GetChain</name>
        <param>
          <type>int</type>
          <declname>linkindex1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>linkindex2</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" kindref="member">JointPtr</ref> &gt; &amp;</type>
          <declname>vjoints</declname>
        </param>
        <briefdescription>
<para>2つのリンクを繋ぐ関節の最短経路を計算する． </para>        </briefdescription>
        <detaileddescription>
<para>受動的な関節は，位置関係が固定されているリンクを見つけるために調べられている 受動的な関節も返される可能があるから，注意する必要があります． <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">linkindex1</parametername>
</parameternamelist>
<parameterdescription>
<para>始点リンクインデックス </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">linkindex2</parametername>
</parameternamelist>
<parameterdescription>
<para>終点リンクインデックス </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">vjoints　関節の経路</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>経路が存在している場合，trueを返す． </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="988"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ac6b65af9a7369ff0141880abf1576c33" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool GetChain</definition>
        <argsstring>(int linkindex1, int linkindex2, std::vector&lt; LinkPtr &gt; &amp;vlinks) const </argsstring>
        <name>GetChain</name>
        <param>
          <type>int</type>
          <declname>linkindex1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>linkindex2</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classOpenRAVE_1_1KinBody_1a8dea7b02ac1900156e6776d795c476c3" kindref="member">LinkPtr</ref> &gt; &amp;</type>
          <declname>vlinks</declname>
        </param>
        <briefdescription>
<para>similar to GetChain(int,int,std::vector&lt;JointPtr&gt;&amp;) except returns the links along the path. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="991"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a0367d00b79b29dae5c647b169432b2a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool IsDOFInChain</definition>
        <argsstring>(int linkindex1, int linkindex2, int dofindex) const </argsstring>
        <name>IsDOFInChain</name>
        <param>
          <type>int</type>
          <declname>linkindex1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>linkindex2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dofindex</declname>
        </param>
        <briefdescription>
<para>Returns true if the dof index affects the relative transformation between the two links. </para>        </briefdescription>
        <detaileddescription>
<para>The internal implementation uses <ref refid="classOpenRAVE_1_1KinBody_1ae63c68d8042f54cfb86ef6b52827cb69" kindref="member">KinBody::DoesAffect</ref>, therefore mimic indices are correctly handled. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">linkindex1</parametername>
</parameternamelist>
<parameterdescription>
<para>the link index to start the search </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">linkindex2</parametername>
</parameternamelist>
<parameterdescription>
<para>the link index where the search ends </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="998"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a65ecee02fe64e7adf7609aa5375f0bcd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int GetJointIndex</definition>
        <argsstring>(const std::string &amp;name) const </argsstring>
        <name>GetJointIndex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Return the index of the joint with the given name, else -1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1001"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ae299b01185a923df10e1fc9fe0fc58be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" kindref="member">JointPtr</ref></type>
        <definition>virtual JointPtr GetJoint</definition>
        <argsstring>(const std::string &amp;name) const </argsstring>
        <name>GetJoint</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Return a pointer to the joint with the given name. Search in the regular and passive joints. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1004"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ab386b6dd306aca447113b8892c0fc265" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" kindref="member">JointPtr</ref></type>
        <definition>virtual JointPtr GetJointFromDOFIndex</definition>
        <argsstring>(int dofindex) const </argsstring>
        <name>GetJointFromDOFIndex</name>
        <param>
          <type>int</type>
          <declname>dofindex</declname>
        </param>
        <briefdescription>
<para>Returns the joint that covers the degree of freedom index. </para>        </briefdescription>
        <detaileddescription>
<para>Note that the mapping of joint structures is not the same as the values in GetJointValues since each joint can have more than one degree of freedom. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1009"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Configuration Specification API</header>
      <description><para><anchor id="_1amgrp2139ca0333f454b48b4bee2383d4b688"/> Functions dealing with configuration specifications </para></description>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a4e917473a7d475324af43320f83796fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classOpenRAVE_1_1ConfigurationSpecification" kindref="compound">ConfigurationSpecification</ref> &amp;</type>
        <definition>virtual const ConfigurationSpecification&amp; GetConfigurationSpecification</definition>
        <argsstring>() const </argsstring>
        <name>GetConfigurationSpecification</name>
        <briefdescription>
<para>return the configuration specification of the joint values and transform </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1283"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1af7fef3f4f3e970937d82cac5b2e25dc6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classOpenRAVE_1_1ConfigurationSpecification" kindref="compound">ConfigurationSpecification</ref></type>
        <definition>virtual ConfigurationSpecification GetConfigurationSpecificationIndices</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;indices) const </argsstring>
        <name>GetConfigurationSpecificationIndices</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
<para>return the configuration specification of the specified joint indices. </para>        </briefdescription>
        <detaileddescription>
<para>Note that the return type is by-value, so should not be used in iteration </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1288"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ad5dc4cc6b247465c2522c31a9169cfd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetConfigurationValues</definition>
        <argsstring>(std::vector&lt; dReal &gt;::const_iterator itvalues, bool checklimits=false)</argsstring>
        <name>SetConfigurationValues</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt;::const_iterator</type>
          <declname>itvalues</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checklimits</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>sets joint values and transform of the body using configuration values as specified by <ref refid="classOpenRAVE_1_1KinBody_1a4e917473a7d475324af43320f83796fc" kindref="member">GetConfigurationSpecification()</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itvalues</parametername>
</parameternamelist>
<parameterdescription>
<para>the iterator to the vector containing the dof values. Must have <ref refid="classOpenRAVE_1_1KinBody_1a4e917473a7d475324af43320f83796fc" kindref="member">GetConfigurationSpecification()</ref>.<ref refid="classOpenRAVE_1_1KinBody_1a44fbec2fd26a45cada889c5c0f0751c8" kindref="member">GetDOF()</ref> values! </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1293"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a9d2332ddf65fc655aa7ebaa39223ee66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetConfigurationValues</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const </argsstring>
        <name>GetConfigurationValues</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns the configuration values as specified by <ref refid="classOpenRAVE_1_1KinBody_1a4e917473a7d475324af43320f83796fc" kindref="member">GetConfigurationSpecification()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1296"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238f" prot="public" static="no">
        <name>KinBodyProperty</name>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa785fd1ee72bf56f00622d147f18ba985" prot="public">
          <name>Prop_Joints</name>
          <initializer>0x1</initializer>
          <briefdescription>
<para>all properties of all joints </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa4814d65685cdcf1a1acd4b0c8379e9a0" prot="public">
          <name>Prop_JointLimits</name>
          <initializer>0x2|Prop_Joints</initializer>
          <briefdescription>
<para>regular limits </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa7ee92fba472282a56c66883f947dd997" prot="public">
          <name>Prop_JointOffset</name>
          <initializer>0x4|Prop_Joints</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fac45ebedd04034c45de4da8c2786fad9e" prot="public">
          <name>Prop_JointProperties</name>
          <initializer>0x8|Prop_Joints</initializer>
          <briefdescription>
<para>max velocity, max acceleration, resolution, max torque </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa98f236c1d5da89a2ed36445af493324e" prot="public">
          <name>Prop_Links</name>
          <initializer>0x10</initializer>
          <briefdescription>
<para>all properties of all links </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa47f8210384e3bcc38a5c2c8d3f295c46" prot="public">
          <name>Prop_Name</name>
          <initializer>0x20</initializer>
          <briefdescription>
<para>name changed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fabe5d066e02460667e0f9b81dfe55dca3" prot="public">
          <name>Prop_LinkDraw</name>
          <initializer>0x40</initializer>
          <briefdescription>
<para>toggle link geometries rendering </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa980bc1b487ae69ae27b35d1efe3ec671" prot="public">
          <name>Prop_LinkGeometry</name>
          <initializer>0x80|Prop_Links</initializer>
          <briefdescription>
<para>the geometry of the link changed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa9e6648eaadfe2e4b55dae772f95b461b" prot="public">
          <name>Prop_JointMimic</name>
          <initializer>0x100|Prop_Joints</initializer>
          <briefdescription>
<para>joint mimic equations </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa843c5aa5238d6b2bd4d437a579c3124f" prot="public">
          <name>Prop_JointAccelerationVelocityLimits</name>
          <initializer>0x200|Prop_Joints</initializer>
          <briefdescription>
<para>velocity + acceleration </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa457e7598a9b59f4b89fd8c85ecc8b912" prot="public">
          <name>Prop_LinkStatic</name>
          <initializer>0x400|Prop_Links</initializer>
          <briefdescription>
<para>static property of link changed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fad651ee47d87fae146c4cefa49b908c18" prot="public">
          <name>Prop_RobotManipulators</name>
          <initializer> 0x00010000</initializer>
          <briefdescription>
<para>[robot only] all properties of all manipulators </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa97d0d4401c3c93be199eb8992a729c30" prot="public">
          <name>Prop_Manipulators</name>
          <initializer> 0x00010000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238faac5baec80229e6eeae7c7ef46d6579a7" prot="public">
          <name>Prop_RobotSensors</name>
          <initializer> 0x00020000</initializer>
          <briefdescription>
<para>[robot only] all properties of all sensors </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238faad03c15c4528bbd25c25837ae6f82b31" prot="public">
          <name>Prop_Sensors</name>
          <initializer> 0x00020000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa666cc0b7129b93c1a57d55d91681e0f6" prot="public">
          <name>Prop_RobotSensorPlacement</name>
          <initializer> 0x00040000</initializer>
          <briefdescription>
<para>[robot only] relative sensor placement of sensors </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa3c8d7b53f7a81d3f96fd54bb35b8b2d8" prot="public">
          <name>Prop_SensorPlacement</name>
          <initializer> 0x00040000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa0952514ee1fd4ebb86990df968573e7a" prot="public">
          <name>Prop_RobotActiveDOFs</name>
          <initializer> 0x00080000</initializer>
          <briefdescription>
<para>[robot only] active dofs changed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa2792bbad36399a273b763b4539fdd497" prot="public">
          <name>Prop_RobotManipulatorTool</name>
          <initializer> 0x00100000</initializer>
          <briefdescription>
<para>[robot only] the tool coordinate system changed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>A set of properties for the kinbody. These properties are used to describe a set of variables used in <ref refid="classOpenRAVE_1_1KinBody" kindref="compound">KinBody</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="35" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="35" bodyend="56"/>
      </memberdef>
      <memberdef kind="enum" id="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388" prot="public" static="no">
        <name>SaveParameters</name>
        <enumvalue id="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388ab33f258d52d1a0adc2f8b75878e3ace2" prot="public">
          <name>Save_LinkTransformation</name>
          <initializer>0x00000001</initializer>
          <briefdescription>
<para>[default] save link transformations </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388a48bd135704be05e76e3a30e2d80209b7" prot="public">
          <name>Save_LinkEnable</name>
          <initializer>0x00000002</initializer>
          <briefdescription>
<para>[default] save link enable states </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388ac7cea6ccd82414804a32fef90681985e" prot="public">
          <name>Save_LinkVelocities</name>
          <initializer>0x00000004</initializer>
          <briefdescription>
<para>save the link velocities </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388a9e85e6d610af529b7587518caccccf4a" prot="public">
          <name>Save_ActiveDOF</name>
          <initializer>0x00010000</initializer>
          <briefdescription>
<para>[robot only], saves and restores the current active degrees of freedom </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388abfdea67aabc497c0ecd461a332cf17e1" prot="public">
          <name>Save_ActiveManipulator</name>
          <initializer>0x00020000</initializer>
          <briefdescription>
<para>[robot only], saves the active manipulator </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388aa8b99f22784feffbd182ad71f8eb8a6f" prot="public">
          <name>Save_GrabbedBodies</name>
          <initializer>0x00040000</initializer>
          <briefdescription>
<para>[robot only], saves the grabbed state of the bodies. This does not affect the configuraiton of those bodies. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Parameters passed into the state savers to control what information gets saved. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="823" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="822" bodyend="830"/>
      </memberdef>
      <memberdef kind="enum" id="classOpenRAVE_1_1KinBody_1ace43b2d7d920eeb2eb69299a4784b040" prot="public" static="no">
        <name>AdjacentOptions</name>
        <enumvalue id="classOpenRAVE_1_1KinBody_1ace43b2d7d920eeb2eb69299a4784b040a9d927f87563a4c4eb69c2391905bc015" prot="public">
          <name>AO_Enabled</name>
          <initializer> 1</initializer>
          <briefdescription>
<para>return only enabled link pairs </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenRAVE_1_1KinBody_1ace43b2d7d920eeb2eb69299a4784b040a471e53775c7eb63178de3a28ed33d64f" prot="public">
          <name>AO_ActiveDOFs</name>
          <initializer> 2</initializer>
          <briefdescription>
<para>return only link pairs that have an active in its path </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>specifies the type of adjacent link information to receive </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1209" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1208" bodyend="1212"/>
      </memberdef>
      <memberdef kind="typedef" id="classOpenRAVE_1_1KinBody_1a8dea7b02ac1900156e6776d795c476c3" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classOpenRAVE_1_1KinBody_1_1Link" kindref="compound">KinBody::Link</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;KinBody::Link&gt; LinkPtr</definition>
        <argsstring></argsstring>
        <name>LinkPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="382" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOpenRAVE_1_1KinBody_1a99c416f979a09dfc6ef42fd62bd4e77e" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classOpenRAVE_1_1KinBody_1_1Link" kindref="compound">KinBody::Link</ref> const  &gt;</type>
        <definition>typedef boost::shared_ptr&lt;KinBody::Link const&gt; LinkConstPtr</definition>
        <argsstring></argsstring>
        <name>LinkConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="383" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOpenRAVE_1_1KinBody_1a05ac08f3af6bf716a6f2991385c92467" prot="public" static="no">
        <type>boost::weak_ptr&lt; <ref refid="classOpenRAVE_1_1KinBody_1_1Link" kindref="compound">KinBody::Link</ref> &gt;</type>
        <definition>typedef boost::weak_ptr&lt;KinBody::Link&gt; LinkWeakPtr</definition>
        <argsstring></argsstring>
        <name>LinkWeakPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="384" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classOpenRAVE_1_1KinBody_1_1Joint" kindref="compound">KinBody::Joint</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;KinBody::Joint&gt; JointPtr</definition>
        <argsstring></argsstring>
        <name>JointPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="756" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="756" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOpenRAVE_1_1KinBody_1aeeaa44b125ab4ead7464f0e8991a3bb4" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classOpenRAVE_1_1KinBody_1_1Joint" kindref="compound">KinBody::Joint</ref> const  &gt;</type>
        <definition>typedef boost::shared_ptr&lt;KinBody::Joint const&gt; JointConstPtr</definition>
        <argsstring></argsstring>
        <name>JointConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="757" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="757" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOpenRAVE_1_1KinBody_1a9e018dfc30d395bd54f090348b4b0493" prot="public" static="no">
        <type>boost::weak_ptr&lt; <ref refid="classOpenRAVE_1_1KinBody_1_1Joint" kindref="compound">KinBody::Joint</ref> &gt;</type>
        <definition>typedef boost::weak_ptr&lt;KinBody::Joint&gt; JointWeakPtr</definition>
        <argsstring></argsstring>
        <name>JointWeakPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="758" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="758" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOpenRAVE_1_1KinBody_1a1cef71a70dbff9c6cdc971d76a3273c5" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classOpenRAVE_1_1KinBody_1_1BodyState" kindref="compound">KinBody::BodyState</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;KinBody::BodyState&gt; BodyStatePtr</definition>
        <argsstring></argsstring>
        <name>BodyStatePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="775" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="775" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOpenRAVE_1_1KinBody_1a97ac46543288dce3ad8a976f04bf2844" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classOpenRAVE_1_1KinBody_1_1BodyState" kindref="compound">KinBody::BodyState</ref> const  &gt;</type>
        <definition>typedef boost::shared_ptr&lt;KinBody::BodyState const&gt; BodyStateConstPtr</definition>
        <argsstring></argsstring>
        <name>BodyStateConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="776" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOpenRAVE_1_1KinBody_1a1ffc67e834b97ce4e1acc052180dce52" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classOpenRAVE_1_1KinBody_1_1ManageData" kindref="compound">KinBody::ManageData</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;KinBody::ManageData&gt; ManageDataPtr</definition>
        <argsstring></argsstring>
        <name>ManageDataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="818" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="818" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOpenRAVE_1_1KinBody_1ae1c689669d51508b456fbc41012988c0" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classOpenRAVE_1_1KinBody_1_1ManageData" kindref="compound">KinBody::ManageData</ref> const  &gt;</type>
        <definition>typedef boost::shared_ptr&lt;KinBody::ManageData const&gt; ManageDataConstPtr</definition>
        <argsstring></argsstring>
        <name>ManageDataConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="819" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="819" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1aaf2ed934b37cbbd236fdd1b01a5f5005" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string _name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
<para>name of body </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1357" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a8eb8f9943c05cd08afba576dba39871a" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" kindref="member">JointPtr</ref> &gt;</type>
        <definition>std::vector&lt;JointPtr&gt; _vecjoints</definition>
        <argsstring></argsstring>
        <name>_vecjoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1KinBody_1a01fcab06f416b2ac3bac1385e09ff9bf" kindref="member">GetJoints</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1358" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a57a836d771622beb63fd79d96445d7c3" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" kindref="member">JointPtr</ref> &gt;</type>
        <definition>std::vector&lt;JointPtr&gt; _vTopologicallySortedJoints</definition>
        <argsstring></argsstring>
        <name>_vTopologicallySortedJoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1KinBody_1a23704d633d23272f467ea0a2ca5a5223" kindref="member">GetDependencyOrderedJoints</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1359" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1ac4536665c649aeb43699f45c7774446f" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" kindref="member">JointPtr</ref> &gt;</type>
        <definition>std::vector&lt;JointPtr&gt; _vTopologicallySortedJointsAll</definition>
        <argsstring></argsstring>
        <name>_vTopologicallySortedJointsAll</name>
        <briefdescription>
<para>Similar to _vDependencyOrderedJoints except includes _vecjoints and _vPassiveJoints. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1360" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1aa731820a61e6c11c59a75e7dfffecd90" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; _vTopologicallySortedJointIndicesAll</definition>
        <argsstring></argsstring>
        <name>_vTopologicallySortedJointIndicesAll</name>
        <briefdescription>
<para>the joint indices of the joints in _vTopologicallySortedJointsAll. Passive joint indices have _vecjoints.size() added to them. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1361" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1ae7d1b91b54b1ab04baee502a4dc26567" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" kindref="member">JointPtr</ref> &gt;</type>
        <definition>std::vector&lt;JointPtr&gt; _vDOFOrderedJoints</definition>
        <argsstring></argsstring>
        <name>_vDOFOrderedJoints</name>
        <briefdescription>
<para>all joints of the body ordered on how they are arranged within the degrees of freedom </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1362" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a02bf557ce0bba8374b863ce9f20de255" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classOpenRAVE_1_1KinBody_1a8dea7b02ac1900156e6776d795c476c3" kindref="member">LinkPtr</ref> &gt;</type>
        <definition>std::vector&lt;LinkPtr&gt; _veclinks</definition>
        <argsstring></argsstring>
        <name>_veclinks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1KinBody_1a32ba11c03aabb873b3e503c8e5b93e53" kindref="member">GetLinks</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1363" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1ac520bd29ce01d4f20bc6a297630dbf10" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; _vDOFIndices</definition>
        <argsstring></argsstring>
        <name>_vDOFIndices</name>
        <briefdescription>
<para>cached start joint indices, indexed by dof indices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1364" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1ad4fcd86b85624e749100cd60c0a9fccf" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; int16_t, int16_t &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;int16_t,int16_t&gt; &gt; _vAllPairsShortestPaths</definition>
        <argsstring></argsstring>
        <name>_vAllPairsShortestPaths</name>
        <briefdescription>
<para>all-pairs shortest paths through the link hierarchy. The first value describes the parent link index, and the second value is an index into _vecjoints or _vPassiveJoints. If the second value is greater or equal to _vecjoints.size() then it indexes into _vPassiveJoints. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1365" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a5a4ac058401dd5f4ec5da0e7c1f719e2" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int8_t &gt;</type>
        <definition>std::vector&lt;int8_t&gt; _vJointsAffectingLinks</definition>
        <argsstring></argsstring>
        <name>_vJointsAffectingLinks</name>
        <briefdescription>
<para>joint x link: (jointindex*_veclinks.size()+linkindex). entry is non-zero if the joint affects the link in the forward kinematics. If negative, the partial derivative of ds/dtheta should be negated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1366" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a0c06bbb41fb3ba4098d486fd90699140" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::pair&lt; <ref refid="classOpenRAVE_1_1KinBody_1a8dea7b02ac1900156e6776d795c476c3" kindref="member">LinkPtr</ref>, <ref refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" kindref="member">JointPtr</ref> &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; std::pair&lt;LinkPtr,JointPtr&gt; &gt; &gt; _vClosedLoops</definition>
        <argsstring></argsstring>
        <name>_vClosedLoops</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1KinBody_1a6eb3b9da2ed2b9b8eec770f018bbeb19" kindref="member">GetClosedLoops</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1367" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a00df6713c1a66e68f273ae2b8aa0c5f4" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::pair&lt; int16_t, int16_t &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; std::pair&lt;int16_t,int16_t&gt; &gt; &gt; _vClosedLoopIndices</definition>
        <argsstring></argsstring>
        <name>_vClosedLoopIndices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1KinBody_1a6eb3b9da2ed2b9b8eec770f018bbeb19" kindref="member">GetClosedLoops</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1368" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1aa70fe0334abb18115dcb5437f5425430" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" kindref="member">JointPtr</ref> &gt;</type>
        <definition>std::vector&lt;JointPtr&gt; _vPassiveJoints</definition>
        <argsstring></argsstring>
        <name>_vPassiveJoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1KinBody_1ab7ece8b3b39a3c9dcc61899dc8dc783e" kindref="member">GetPassiveJoints()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1369" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1ad20d6407270731a61d3a2877745edd29" prot="protected" static="no" mutable="no">
        <type>std::set&lt; int &gt;</type>
        <definition>std::set&lt;int&gt; _setAdjacentLinks</definition>
        <argsstring></argsstring>
        <name>_setAdjacentLinks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>a set of which links are connected to which if link i and j are connected then i|(j&lt;&lt;16) will be in the set where i&lt;j. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1371" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1aa4e6b1729935f161cd886466ff81e820" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
        <definition>std::vector&lt; std::pair&lt;std::string, std::string&gt; &gt; _vForcedAdjacentLinks</definition>
        <argsstring></argsstring>
        <name>_vForcedAdjacentLinks</name>
        <briefdescription>
<para>internally stores forced adjacent links </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1372" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a7a467aa8c7f51627331d7f2dc8e71fd3" prot="protected" static="no" mutable="no">
        <type>std::list&lt; <ref refid="namespaceOpenRAVE_1af9b7d1a6c8cb513416c8e667f3c25418" kindref="member">KinBodyWeakPtr</ref> &gt;</type>
        <definition>std::list&lt;KinBodyWeakPtr&gt; _listAttachedBodies</definition>
        <argsstring></argsstring>
        <name>_listAttachedBodies</name>
        <briefdescription>
<para>list of bodies that are directly attached to this body (can have duplicates) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1373" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a6d824e60d7bac02b97a9643d6d555af9" prot="protected" static="no" mutable="no">
        <type>std::list&lt; <ref refid="namespaceOpenRAVE_1aae4d9d8b0adcdbb33c9ca59ea5794a3d" kindref="member">UserDataWeakPtr</ref> &gt;</type>
        <definition>std::list&lt;UserDataWeakPtr&gt; _listRegisteredCallbacks</definition>
        <argsstring></argsstring>
        <name>_listRegisteredCallbacks</name>
        <briefdescription>
<para>callbacks to call when particular properties of the body change. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1374" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a1e6a02a45812548a34f578af0c8a301e" prot="protected" static="no" mutable="yes">
        <type>boost::array&lt; std::set&lt; int &gt;, 4 &gt;</type>
        <definition>boost::array&lt;std::set&lt;int&gt;, 4&gt; _setNonAdjacentLinks</definition>
        <argsstring></argsstring>
        <name>_setNonAdjacentLinks</name>
        <briefdescription>
<para>contains cached versions of the non-adjacent links depending on values in AdjacentOptions. Declared as mutable since data is cached. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1376" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a5b371595d16c6e862f4f675f03dffba4" prot="protected" static="no" mutable="yes">
        <type>int</type>
        <definition>int _nNonAdjacentLinkCache</definition>
        <argsstring></argsstring>
        <name>_nNonAdjacentLinkCache</name>
        <briefdescription>
<para>specifies what information is currently valid in the AdjacentOptions. Declared as mutable since data is cached. If 0x80000000 (ie &lt; 0), then everything needs to be recomputed including _setNonAdjacentLinks[0]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1377" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a9945fd1c6a580218fe969ee3bf77097f" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1ad7d44b5a2b65bf3c814d2983528b2e85" kindref="member">Transform</ref> &gt;</type>
        <definition>std::vector&lt;Transform&gt; _vInitialLinkTransformations</definition>
        <argsstring></argsstring>
        <name>_vInitialLinkTransformations</name>
        <briefdescription>
<para>the initial transformations of each link specifying at least one pose where the robot is collision free </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1378" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1ac77a3b00fc5376337843fffef53ddec5" prot="protected" static="no" mutable="no">
        <type><ref refid="classOpenRAVE_1_1ConfigurationSpecification" kindref="compound">ConfigurationSpecification</ref></type>
        <definition>ConfigurationSpecification _spec</definition>
        <argsstring></argsstring>
        <name>_spec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1380" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a0386692fd7704da6e79775fa09a4b685" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int _environmentid</definition>
        <argsstring></argsstring>
        <name>_environmentid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1KinBody_1a51f880cf26774cd34ab9634bd518b955" kindref="member">GetEnvironmentId</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1382" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1abce08eaa134f87c6d13f4d23749a61b9" prot="protected" static="no" mutable="yes">
        <type>int</type>
        <definition>int _nUpdateStampId</definition>
        <argsstring></argsstring>
        <name>_nUpdateStampId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1KinBody_1aac16fee68aa354fa24e6de5b8f79b78d" kindref="member">GetUpdateStamp</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1383" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a7e9098feb28e312721a58a360989ec20" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int _nParametersChanged</definition>
        <argsstring></argsstring>
        <name>_nParametersChanged</name>
        <briefdescription>
<para>set of parameters that changed and need callbacks </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1384" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1aff45addfa1926549479a9786a92d6246" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1aa02b5cd826890fa31fb80f0d469312d9" kindref="member">UserDataPtr</ref></type>
        <definition>UserDataPtr _pViewerData</definition>
        <argsstring></argsstring>
        <name>_pViewerData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1KinBody_1aa8a85e0f120e9cbc588a8f3a555758cb" kindref="member">SetViewerData</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1385" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a3f8a2e40760cf2ee75f604c0f18b27ec" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1aa02b5cd826890fa31fb80f0d469312d9" kindref="member">UserDataPtr</ref></type>
        <definition>UserDataPtr _pPhysicsData</definition>
        <argsstring></argsstring>
        <name>_pPhysicsData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1KinBody_1aa282fd034535ec4b05f90f9cd32bd1c9" kindref="member">SetPhysicsData</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1386" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a0a17ef574c66277ef313e5e56d6b9bbc" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1aa02b5cd826890fa31fb80f0d469312d9" kindref="member">UserDataPtr</ref></type>
        <definition>UserDataPtr _pCollisionData</definition>
        <argsstring></argsstring>
        <name>_pCollisionData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1KinBody_1ad85bc7dc70d07b123c41b7bcad79ca34" kindref="member">SetCollisionData</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1387" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a5da7cbfc2028c1dff4992887fa5ed86e" prot="protected" static="no" mutable="no">
        <type><ref refid="classOpenRAVE_1_1KinBody_1a1ffc67e834b97ce4e1acc052180dce52" kindref="member">ManageDataPtr</ref></type>
        <definition>ManageDataPtr _pManageData</definition>
        <argsstring></argsstring>
        <name>_pManageData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1388" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1aca4c77d19ed947e26826284b9c8b5d56" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t _nHierarchyComputed</definition>
        <argsstring></argsstring>
        <name>_nHierarchyComputed</name>
        <briefdescription>
<para>true if the joint heirarchy and other cached information is computed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1389" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1ae339c94da801d91508c6d4dd4ed118c6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _bMakeJoinedLinksAdjacent</definition>
        <argsstring></argsstring>
        <name>_bMakeJoinedLinksAdjacent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1390" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1390" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a67858898601b8f9e51fbdebf2edf018a" prot="private" static="no" mutable="yes">
        <type>std::string</type>
        <definition>std::string __hashkinematics</definition>
        <argsstring></argsstring>
        <name>__hashkinematics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1392" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1KinBody_1a6a8d5c60151f67c4a11ad3b623bdf9c8" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt;</type>
        <definition>std::vector&lt;dReal&gt; _vTempJoints</definition>
        <argsstring></argsstring>
        <name>_vTempJoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1393" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1393" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classOpenRAVE_1_1KinBody_1a6072ea388aa24f90d2b94e222fd68f61" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class PhysicsEngineBase</definition>
        <argsstring></argsstring>
        <name>PhysicsEngineBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1414" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classOpenRAVE_1_1KinBody_1abb6a3a2acfa7ce6f199c8ff18af8f503" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class CollisionCheckerBase</definition>
        <argsstring></argsstring>
        <name>CollisionCheckerBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1415" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classOpenRAVE_1_1KinBody_1acdf13b16bf9e266344e9febf8c156bf8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ViewerBase</definition>
        <argsstring></argsstring>
        <name>ViewerBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1416" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classOpenRAVE_1_1KinBody_1aeed838dd3b07a597b0f6955b8fd164f4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SensorSystemBase</definition>
        <argsstring></argsstring>
        <name>SensorSystemBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1417" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classOpenRAVE_1_1KinBody_1a4575c375ffe3c6d6321e3efaf793e032" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class RaveDatabase</definition>
        <argsstring></argsstring>
        <name>RaveDatabase</name>
        <reimplements refid="classOpenRAVE_1_1InterfaceBase_1a4575c375ffe3c6d6321e3efaf793e032">RaveDatabase</reimplements>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1a4575c375ffe3c6d6321e3efaf793e032">RaveDatabase</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1418" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classOpenRAVE_1_1KinBody_1a4574499c626556f4a09566f135e575e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ChangeCallbackData</definition>
        <argsstring></argsstring>
        <name>ChangeCallbackData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1419" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1419" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a733fc2dfdef6968ace502ee6c6924f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~KinBody</definition>
        <argsstring>()</argsstring>
        <name>~KinBody</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="854"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a941c8e8d2c5aa963d76aef113f19d835" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1a941c8e8d2c5aa963d76aef113f19d835">Destroy</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="861"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ae67a1ee5e11749340bfbca5bd6749424" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool InitFromFile</definition>
        <argsstring>(const std::string &amp;filename, const AttributesList &amp;atts=AttributesList()) RAVE_DEPRECATED</argsstring>
        <name>InitFromFile</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1ae67a1ee5e11749340bfbca5bd6749424">InitFromFile</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1a7372895c7fd9541aa829987c3eb9aaf9" kindref="member">AttributesList</ref> &amp;</type>
          <declname>atts</declname>
          <defval><ref refid="namespaceOpenRAVE_1a7372895c7fd9541aa829987c3eb9aaf9" kindref="member">AttributesList</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000010"><xreftitle>非推奨</xreftitle><xrefdescription><para>(11/02/18) </para></xrefdescription></xrefsect><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1EnvironmentBase_1a047abcaeeef915017c37dd31d34866e8" kindref="member">EnvironmentBase::ReadKinBodyXMLFile</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="864"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a3f81f529c6959894555ad8841a134431" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool InitFromData</definition>
        <argsstring>(const std::string &amp;data, const AttributesList &amp;atts=AttributesList()) RAVE_DEPRECATED</argsstring>
        <name>InitFromData</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1a3f81f529c6959894555ad8841a134431">InitFromData</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1a7372895c7fd9541aa829987c3eb9aaf9" kindref="member">AttributesList</ref> &amp;</type>
          <declname>atts</declname>
          <defval><ref refid="namespaceOpenRAVE_1a7372895c7fd9541aa829987c3eb9aaf9" kindref="member">AttributesList</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000011"><xreftitle>非推奨</xreftitle><xrefdescription><para>(11/02/18) </para></xrefdescription></xrefsect><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1EnvironmentBase_1af8fde0c46dbd2c833936e7524ab54436" kindref="member">EnvironmentBase::ReadKinBodyXMLData</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="866"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a6ca8a1abee1479424de9c296da9cdd34" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool InitFromBoxes</definition>
        <argsstring>(const std::vector&lt; AABB &gt; &amp;boxes, bool draw)</argsstring>
        <name>InitFromBoxes</name>
        <param>
          <type>const std::vector&lt; <ref refid="classOpenRAVE_1_1geometry_1_1aabb" kindref="compound">AABB</ref> &gt; &amp;</type>
          <declname>boxes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>draw</declname>
        </param>
        <briefdescription>
<para>Create a kinbody with one link composed of an array of aligned bounding boxes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>boxes</parametername>
</parameternamelist>
<parameterdescription>
<para>the array of aligned bounding boxes that will comprise of the body </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>draw</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, the boxes will be rendered in the scene </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="872"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a904bbbd6da53247d7f8e3ce1c3bac5b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool InitFromBoxes</definition>
        <argsstring>(const std::vector&lt; OBB &gt; &amp;boxes, bool draw)</argsstring>
        <name>InitFromBoxes</name>
        <param>
          <type>const std::vector&lt; <ref refid="classOpenRAVE_1_1geometry_1_1obb" kindref="compound">OBB</ref> &gt; &amp;</type>
          <declname>boxes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>draw</declname>
        </param>
        <briefdescription>
<para>Create a kinbody with one link composed of an array of oriented bounding boxes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>boxes</parametername>
</parameternamelist>
<parameterdescription>
<para>the array of oriented bounding boxes that will comprise of the body </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>draw</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, the boxes will be rendered in the scene </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="878"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1afe077907e74b0a8c7bdb53abc6a67fb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool InitFromSpheres</definition>
        <argsstring>(const std::vector&lt; Vector &gt; &amp;spheres, bool draw)</argsstring>
        <name>InitFromSpheres</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &gt; &amp;</type>
          <declname>spheres</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>draw</declname>
        </param>
        <briefdescription>
<para>Create a kinbody with one link composed of an array of spheres. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spheres</parametername>
</parameternamelist>
<parameterdescription>
<para>the XYZ position of the spheres with the W coordinate representing the individual radius </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="883"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a9fbe9cf06cf411d8e93431552bdd4ebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool InitFromTrimesh</definition>
        <argsstring>(const Link::TRIMESH &amp;trimesh, bool draw)</argsstring>
        <name>InitFromTrimesh</name>
        <param>
          <type>const <ref refid="classOpenRAVE_1_1KinBody_1_1Link_1_1TRIMESH" kindref="compound">Link::TRIMESH</ref> &amp;</type>
          <declname>trimesh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>draw</declname>
        </param>
        <briefdescription>
<para>Create a kinbody with one link composed of a triangle mesh surface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trimesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangle mesh </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>draw</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, will be rendered in the scene </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="889"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ab0b57544b54f5b7d766a3fee473667a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool InitFromGeometries</definition>
        <argsstring>(std::list&lt; KinBody::Link::GEOMPROPERTIES &gt; &amp;geometries, bool draw)</argsstring>
        <name>InitFromGeometries</name>
        <param>
          <type>std::list&lt; <ref refid="classOpenRAVE_1_1KinBody_1_1Link_1_1GEOMPROPERTIES" kindref="compound">KinBody::Link::GEOMPROPERTIES</ref> &gt; &amp;</type>
          <declname>geometries</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>draw</declname>
        </param>
        <briefdescription>
<para>Create a kinbody with one link composed of a list of geometries. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometries</parametername>
</parameternamelist>
<parameterdescription>
<para>In order to save memory, the geometries in this list are transferred to the link. After function completes, the size should be 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>draw</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, will be rendered in the scene </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="895"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a3cc720dbc55fa8e07a0f85343d3bb136" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const std::string &amp;</type>
        <definition>virtual const std::string&amp; GetName</definition>
        <argsstring>() const </argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Unique name of the robot. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="898" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="898" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a847d2f81d14b0005954aeb0d817a2187" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetName</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>SetName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Set the name of the robot, notifies the environment and checks for uniqueness. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="903"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a7c60c9dfe8ef533913967e60f3d7db8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SubtractDOFValues</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;values1, const std::vector&lt; dReal &gt; &amp;values2) const </argsstring>
        <name>SubtractDOFValues</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>values1</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>values2</declname>
        </param>
        <briefdescription>
<para>Computes the configuration difference values1-values2 and stores it in values1. </para>        </briefdescription>
        <detaileddescription>
<para>Takes into account joint limits and wrapping of circular joints. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1015"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a4b35aa1ab1b6538d151f7f6cb254c5fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SubtractJointValues</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;q1, const std::vector&lt; dReal &gt; &amp;q2) const RAVE_DEPRECATED</argsstring>
        <name>SubtractJointValues</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>q2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000014"><xreftitle>非推奨</xreftitle><xrefdescription><para>(01/01/11) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1018" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1018" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a4057204a0e2c01a59ea9011fb5bba922" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetDOFTorques</definition>
        <argsstring>(const std::vector&lt; dReal &gt; &amp;torques, bool add)</argsstring>
        <name>SetDOFTorques</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>torques</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>add</declname>
        </param>
        <briefdescription>
<para>Adds a torque to every joint. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bAdd</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, adds to previous torques, otherwise resets the torques on all bodies and starts from 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1025"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1aba8aaffd5d9bb4c604eb29a0250bd525" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SetJointTorques</definition>
        <argsstring>(const std::vector&lt; dReal &gt; &amp;torques, bool add) RAVE_DEPRECATED</argsstring>
        <name>SetJointTorques</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>torques</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>add</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000015"><xreftitle>非推奨</xreftitle><xrefdescription><para>(11/06/17) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1028" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1028" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a32ba11c03aabb873b3e503c8e5b93e53" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const std::vector&lt; <ref refid="classOpenRAVE_1_1KinBody_1a8dea7b02ac1900156e6776d795c476c3" kindref="member">LinkPtr</ref> &gt; &amp;</type>
        <definition>virtual const std::vector&lt;LinkPtr&gt;&amp; GetLinks</definition>
        <argsstring>() const </argsstring>
        <name>GetLinks</name>
        <briefdescription>
<para>Returns all the rigid links of the body. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1033" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1033" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a9953fafff72cdb7abf421255bbe2fa12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classOpenRAVE_1_1KinBody_1a8dea7b02ac1900156e6776d795c476c3" kindref="member">LinkPtr</ref></type>
        <definition>virtual LinkPtr GetLink</definition>
        <argsstring>(const std::string &amp;name) const </argsstring>
        <name>GetLink</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>return a pointer to the link with the given name </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1038"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ab51d371d29d7947197b90d8e915de00f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SimulationStep</definition>
        <argsstring>(dReal fElapsedTime)</argsstring>
        <name>SimulationStep</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1ab51d371d29d7947197b90d8e915de00f">SimulationStep</reimplementedby>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
          <declname>fElapsedTime</declname>
        </param>
        <briefdescription>
<para>Updates the bounding box and any other parameters that could have changed by a simulation step. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1041"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ad8ee6440e3b5598037f585444639d341" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetLinkTransformations</definition>
        <argsstring>(std::vector&lt; Transform &gt; &amp;transforms) const </argsstring>
        <name>GetLinkTransformations</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1ad7d44b5a2b65bf3c814d2983528b2e85" kindref="member">Transform</ref> &gt; &amp;</type>
          <declname>transforms</declname>
        </param>
        <briefdescription>
<para>get the transformations of all the links at once </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1044"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a57e27364677e4ade3f7bf0865e7313df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void GetBodyTransformations</definition>
        <argsstring>(std::vector&lt; Transform &gt; &amp;transforms) const RAVE_DEPRECATED</argsstring>
        <name>GetBodyTransformations</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1ad7d44b5a2b65bf3c814d2983528b2e85" kindref="member">Transform</ref> &gt; &amp;</type>
          <declname>transforms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000016"><xreftitle>非推奨</xreftitle><xrefdescription><para>(11/05/26) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1047" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1047" bodyend="1049"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a2206c7317f62f083c3f57868ba82bfee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1ad7d44b5a2b65bf3c814d2983528b2e85" kindref="member">Transform</ref></type>
        <definition>virtual Transform GetTransform</definition>
        <argsstring>() const </argsstring>
        <name>GetTransform</name>
        <briefdescription>
<para>queries the transfromation of the first link of the body </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1052"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ac739ab6c3a2a0d486cc0d280bb2b74db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SetVelocity</definition>
        <argsstring>(const Vector &amp;linearvel, const Vector &amp;angularvel)</argsstring>
        <name>SetVelocity</name>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>linearvel</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>angularvel</declname>
        </param>
        <briefdescription>
<para>Set the velocity of the base link, rest of links are set to a consistent velocity so entire robot moves correctly. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>linearvel</parametername>
</parameternamelist>
<parameterdescription>
<para>linear velocity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angularvel</parametername>
</parameternamelist>
<parameterdescription>
<para>is the rotation axis * angular speed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1057"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1aff61afba85f45d8c7262c5391b271cb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetDOFVelocities</definition>
        <argsstring>(const std::vector&lt; dReal &gt; &amp;vDOFVelocities, const Vector &amp;linearvel, const Vector &amp;angularvel, bool checklimits=false)</argsstring>
        <name>SetDOFVelocities</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>vDOFVelocities</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>linearvel</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>angularvel</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checklimits</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sets the velocity of the base link and each of the joints. </para>        </briefdescription>
        <detaileddescription>
<para>Computes internally what the correponding velocities of each of the links should be in order to achieve consistent results with the joint velocities. Sends the velocities to the physics engine. Velocities correspond to the link&apos;s coordinate system origin. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">linearvel</parametername>
</parameternamelist>
<parameterdescription>
<para>linear velocity of base link </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">angularvel</parametername>
</parameternamelist>
<parameterdescription>
<para>angular velocity rotation_axis*theta_dot </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vDOFVelocities</parametername>
</parameternamelist>
<parameterdescription>
<para>- velocities of each of the degrees of freeom </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checklimits</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, will excplicitly check the joint velocity limits before setting the values. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1069"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a0718b6336d442f3e2320f7b17d84d516" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetDOFVelocities</definition>
        <argsstring>(const std::vector&lt; dReal &gt; &amp;vDOFVelocities, bool checklimits=false)</argsstring>
        <name>SetDOFVelocities</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>vDOFVelocities</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checklimits</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sets the velocity of the joints. </para>        </briefdescription>
        <detaileddescription>
<para>Copies the current velocity of the base link and calls SetDOFVelocities(linearvel,angularvel,vDOFVelocities) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vDOFVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>- velocities of each of the degrees of freeom  checklimits if true, will excplicitly check the joint velocity limits before setting the values. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1076"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ab3b39cad05596c9fd0bd37de058239f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetLinkVelocities</definition>
        <argsstring>(std::vector&lt; std::pair&lt; Vector, Vector &gt; &gt; &amp;velocities) const </argsstring>
        <name>GetLinkVelocities</name>
        <param>
          <type>std::vector&lt; std::pair&lt; <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref>, <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &gt; &gt; &amp;</type>
          <declname>velocities</declname>
        </param>
        <briefdescription>
<para>Returns the linear and angular velocities for each link. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1079"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a92abef33e0bc4eca1756178c31e18645" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetTransform</definition>
        <argsstring>(const Transform &amp;transform)</argsstring>
        <name>SetTransform</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1ad19fd054ec0bb506ca08d1a7deaa005d">SetTransform</reimplementedby>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ad7d44b5a2b65bf3c814d2983528b2e85" kindref="member">Transform</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
<para>胴体の絶対姿勢を設定、残りのリンクは運動学の構造に従って変換される． </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>変換行列 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1089"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a19007e9a11f60fac50720cd38a4d6ede" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classOpenRAVE_1_1geometry_1_1aabb" kindref="compound">AABB</ref></type>
        <definition>virtual AABB ComputeAABB</definition>
        <argsstring>() const </argsstring>
        <name>ComputeAABB</name>
        <briefdescription>
<para>Return an axis-aligned bounding box of the entire object in the world coordinate system. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1092"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1adfe385b3300ee3f399e9a71837409054" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>virtual Vector GetCenterOfMass</definition>
        <argsstring>() const </argsstring>
        <name>GetCenterOfMass</name>
        <briefdescription>
<para>Return the center of mass of entire robot in the world coordinate system. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1095"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a93204280b89842474930316675ce9f07" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Enable</definition>
        <argsstring>(bool enable)</argsstring>
        <name>Enable</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enables or disables the bodies. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1098"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1af0009d4f176dc8f0d02c5dd3b96226f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void EnableLink</definition>
        <argsstring>(LinkPtr plink, bool bEnable) RAVE_DEPRECATED</argsstring>
        <name>EnableLink</name>
        <param>
          <type><ref refid="classOpenRAVE_1_1KinBody_1a8dea7b02ac1900156e6776d795c476c3" kindref="member">LinkPtr</ref></type>
          <declname>plink</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bEnable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000017"><xreftitle>非推奨</xreftitle><xrefdescription><para>(10/09/08) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1101" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1101" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ab093c91e2859f12d929fe8665e67a8e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool IsEnabled</definition>
        <argsstring>() const </argsstring>
        <name>IsEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if any link of the <ref refid="classOpenRAVE_1_1KinBody" kindref="compound">KinBody</ref> is enabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1106"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a30ca49e63e7794762a374f53585d3b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetDOFValues</definition>
        <argsstring>(const std::vector&lt; dReal &gt; &amp;values, bool checklimits=false)</argsstring>
        <name>SetDOFValues</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1ab503f57fc0d435881e77670eccd73bd0">SetDOFValues</reimplementedby>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checklimits</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sets the joint values of the robot. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>the values to set the joint angles (ordered by the dof indices)  checklimits if true, will excplicitly check the joint limits before setting the values. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1112"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1aa0afe535a5cbb420c37523184a18860a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SetJointValues</definition>
        <argsstring>(const std::vector&lt; dReal &gt; &amp;values, bool checklimits=false)</argsstring>
        <name>SetJointValues</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checklimits</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1114" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1114" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ad75a7828a47c91e1c572c111a6779fcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetDOFValues</definition>
        <argsstring>(const std::vector&lt; dReal &gt; &amp;values, const Transform &amp;transform, bool checklimits=false)</argsstring>
        <name>SetDOFValues</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1a29fc1f1ba1cdb09f54eb8774bf010b08">SetDOFValues</reimplementedby>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ad7d44b5a2b65bf3c814d2983528b2e85" kindref="member">Transform</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checklimits</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sets the joint values and transformation of the body. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>the values to set the joint angles (ordered by the dof indices) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>represents the transformation of the first body.  checklimits if true, will excplicitly check the joint limits before setting the values. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1123"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a1bec378a3c11954bc849987e8048706f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SetJointValues</definition>
        <argsstring>(const std::vector&lt; dReal &gt; &amp;values, const Transform &amp;transform, bool checklimits=false)</argsstring>
        <name>SetJointValues</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ad7d44b5a2b65bf3c814d2983528b2e85" kindref="member">Transform</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checklimits</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1126" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1125" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ad005f2eda60cafaec07e183e9fbfe77d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetLinkTransformations</definition>
        <argsstring>(const std::vector&lt; Transform &gt; &amp;transforms)</argsstring>
        <name>SetLinkTransformations</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1a3c811c9f633c1c4347606fd13a4d4f02">SetLinkTransformations</reimplementedby>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1ad7d44b5a2b65bf3c814d2983528b2e85" kindref="member">Transform</ref> &gt; &amp;</type>
          <declname>transforms</declname>
        </param>
        <briefdescription>
<para>sets the transformations of all the links at once </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1131"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a0cbd54ab25b8c1f3466092b54180d266" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SetBodyTransformations</definition>
        <argsstring>(const std::vector&lt; Transform &gt; &amp;transforms) RAVE_DEPRECATED</argsstring>
        <name>SetBodyTransformations</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1ad7d44b5a2b65bf3c814d2983528b2e85" kindref="member">Transform</ref> &gt; &amp;</type>
          <declname>transforms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000018"><xreftitle>非推奨</xreftitle><xrefdescription><para>(11/05/26) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1134" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1134" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a6b7837855cf483cc6a87553a3dcc16ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetLinkVelocities</definition>
        <argsstring>(const std::vector&lt; std::pair&lt; Vector, Vector &gt; &gt; &amp;velocities)</argsstring>
        <name>SetLinkVelocities</name>
        <param>
          <type>const std::vector&lt; std::pair&lt; <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref>, <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &gt; &gt; &amp;</type>
          <declname>velocities</declname>
        </param>
        <briefdescription>
<para>sets the link velocities </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1139"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a7fd6178241c4b8c8bb8a9d9b5f92f8cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CalculateJacobian</definition>
        <argsstring>(int linkindex, const Vector &amp;offset, boost::multi_array&lt; dReal, 2 &gt; &amp;vjacobian) const </argsstring>
        <name>CalculateJacobian</name>
        <param>
          <type>int</type>
          <declname>linkindex</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>boost::multi_array&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref>, 2 &gt; &amp;</type>
          <declname>vjacobian</declname>
        </param>
        <briefdescription>
<para>Computes the translation jacobian with respect to a world position. </para>        </briefdescription>
        <detaileddescription>
<para>Gets the jacobian with respect to a link by computing the partial differentials for all joints that in the path from the root node to <ref refid="classOpenRAVE_1_1KinBody_1a32ba11c03aabb873b3e503c8e5b93e53" kindref="member">GetLinks()</ref>[index] (doesn&apos;t touch the rest of the values) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>linkindex</parametername>
</parameternamelist>
<parameterdescription>
<para>of the link that the rotation is attached to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>position in world space where to compute derivatives from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vjacobian</parametername>
</parameternamelist>
<parameterdescription>
<para>3xDOF matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1148"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1abbbaf69f430808c088bac988cd5fa9f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CalculateJacobian</definition>
        <argsstring>(int linkindex, const Vector &amp;offset, std::vector&lt; dReal &gt; &amp;pfJacobian) const </argsstring>
        <name>CalculateJacobian</name>
        <param>
          <type>int</type>
          <declname>linkindex</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>pfJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1149"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a4223d26feefc25a2d8b7e0abdb30e551" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CalculateRotationJacobian</definition>
        <argsstring>(int linkindex, const Vector &amp;quat, boost::multi_array&lt; dReal, 2 &gt; &amp;vjacobian) const </argsstring>
        <name>CalculateRotationJacobian</name>
        <param>
          <type>int</type>
          <declname>linkindex</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>quat</declname>
        </param>
        <param>
          <type>boost::multi_array&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref>, 2 &gt; &amp;</type>
          <declname>vjacobian</declname>
        </param>
        <briefdescription>
<para>Computes the rotational jacobian as a quaternion with respect to an initial rotation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>linkindex</parametername>
</parameternamelist>
<parameterdescription>
<para>of the link that the rotation is attached to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qInitialRot</parametername>
</parameternamelist>
<parameterdescription>
<para>the rotation in world space whose derivative to take from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vjacobian</parametername>
</parameternamelist>
<parameterdescription>
<para>4xDOF matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1156"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a5525c53b10f1bae40980148f18a9102f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CalculateRotationJacobian</definition>
        <argsstring>(int linkindex, const Vector &amp;quat, std::vector&lt; dReal &gt; &amp;pfJacobian) const </argsstring>
        <name>CalculateRotationJacobian</name>
        <param>
          <type>int</type>
          <declname>linkindex</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>quat</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>pfJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1157"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a48eef419ccc30bfcdd82febedd6f54b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CalculateAngularVelocityJacobian</definition>
        <argsstring>(int linkindex, boost::multi_array&lt; dReal, 2 &gt; &amp;vjacobian) const </argsstring>
        <name>CalculateAngularVelocityJacobian</name>
        <param>
          <type>int</type>
          <declname>linkindex</declname>
        </param>
        <param>
          <type>boost::multi_array&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref>, 2 &gt; &amp;</type>
          <declname>vjacobian</declname>
        </param>
        <briefdescription>
<para>Computes the angular velocity jacobian of a specified link about the axes of world coordinates. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>linkindex</parametername>
</parameternamelist>
<parameterdescription>
<para>of the link that the rotation is attached to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vjacobian</parametername>
</parameternamelist>
<parameterdescription>
<para>3xDOF matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1163"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ae99b5fa18c14649692fa39a0883d1448" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CalculateAngularVelocityJacobian</definition>
        <argsstring>(int linkindex, std::vector&lt; dReal &gt; &amp;pfJacobian) const </argsstring>
        <name>CalculateAngularVelocityJacobian</name>
        <param>
          <type>int</type>
          <declname>linkindex</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>pfJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1164"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a3d555222cf7b02d592a0a31cef5d479d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CheckSelfCollision</definition>
        <argsstring>(CollisionReportPtr report=CollisionReportPtr()) const </argsstring>
        <name>CheckSelfCollision</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1a3d555222cf7b02d592a0a31cef5d479d">CheckSelfCollision</reimplementedby>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ae3a01279d893036b26d4bb1b74d3ef0f" kindref="member">CollisionReportPtr</ref></type>
          <declname>report</declname>
          <defval><ref refid="namespaceOpenRAVE_1ae3a01279d893036b26d4bb1b74d3ef0f" kindref="member">CollisionReportPtr</ref>()</defval>
        </param>
        <briefdescription>
<para>Check if body is self colliding. Links that are joined together are ignored. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1167"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a1e6636e58d5b763c37a529f752c5012d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool IsAttached</definition>
        <argsstring>(KinBodyConstPtr body) const </argsstring>
        <name>IsAttached</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a7ad9b63f36f8be408ec6e70ebe8130f7" kindref="member">KinBodyConstPtr</ref></type>
          <declname>body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if two bodies should be considered as one during collision (ie one is grabbing the other) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1170"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a2f50259e5dc09090474e2099dbd81cac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetAttached</definition>
        <argsstring>(std::set&lt; KinBodyPtr &gt; &amp;setAttached) const </argsstring>
        <name>GetAttached</name>
        <param>
          <type>std::set&lt; <ref refid="namespaceOpenRAVE_1abdcbe7a0abc56f7fd090dbd298a5a44c" kindref="member">KinBodyPtr</ref> &gt; &amp;</type>
          <declname>setAttached</declname>
        </param>
        <briefdescription>
<para>Recursively get all attached bodies of this body, including this body. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>setAttached</parametername>
</parameternamelist>
<parameterdescription>
<para>fills with the attached bodies. If any bodies are already in setAttached, then ignores recursing on their attached bodies. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1175"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a38fa8d57d2eefc36568411a129c741d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool IsRobot</definition>
        <argsstring>() const </argsstring>
        <name>IsRobot</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1a38fa8d57d2eefc36568411a129c741d3">IsRobot</reimplementedby>
        <briefdescription>
<para>Return true if this body is derived from <ref refid="classOpenRAVE_1_1RobotBase" kindref="compound">RobotBase</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1178" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1178" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a51f880cf26774cd34ab9634bd518b955" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int GetEnvironmentId</definition>
        <argsstring>() const </argsstring>
        <name>GetEnvironmentId</name>
        <briefdescription>
<para>return a unique id of the body used in the environment. </para>        </briefdescription>
        <detaileddescription>
<para>If object is not added to the environment, this will return 0. So checking if <ref refid="classOpenRAVE_1_1KinBody_1a51f880cf26774cd34ab9634bd518b955" kindref="member">GetEnvironmentId()</ref> is 0 is a good way to check if object is present in the environment. This id will not be copied when cloning in order to respect another environment&apos;s ids. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1186"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ae63c68d8042f54cfb86ef6b52827cb69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int8_t</type>
        <definition>virtual int8_t DoesAffect</definition>
        <argsstring>(int jointindex, int linkindex) const </argsstring>
        <name>DoesAffect</name>
        <param>
          <type>int</type>
          <declname>jointindex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>linkindex</declname>
        </param>
        <briefdescription>
<para>Returns a nonzero value if the joint effects the link transformation. </para>        </briefdescription>
        <detaileddescription>
<para>In closed loops, all joints on all paths to the root link are counted as affecting the link. If a mimic joint affects the link, then all the joints used in the mimic joint&apos;s computation affect the link. If negative, the partial derivative of the Jacobian should be negated. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jointindex</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the joint </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linkindex</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the link </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1196"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1afb0f7064845ec4978785c8973be539ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1aa02b5cd826890fa31fb80f0d469312d9" kindref="member">UserDataPtr</ref></type>
        <definition>virtual UserDataPtr GetViewerData</definition>
        <argsstring>() const </argsstring>
        <name>GetViewerData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1KinBody_1aa8a85e0f120e9cbc588a8f3a555758cb" kindref="member">SetViewerData</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1199" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1199" bodyend="1201"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ab57d127f75d79fb8bb00524894de8453" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1aa02b5cd826890fa31fb80f0d469312d9" kindref="member">UserDataPtr</ref></type>
        <definition>virtual UserDataPtr GetGuiData</definition>
        <argsstring>() const RAVE_DEPRECATED</argsstring>
        <name>GetGuiData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000019"><xreftitle>非推奨</xreftitle><xrefdescription><para>(11/09/21) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1203" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1203" bodyend="1205"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a0dfdf7668c68c2860a27983804e90c8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::set&lt; int &gt; &amp;</type>
        <definition>virtual const std::set&lt;int&gt;&amp; GetNonAdjacentLinks</definition>
        <argsstring>(int adjacentoptions=0) const </argsstring>
        <name>GetNonAdjacentLinks</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1a0dfdf7668c68c2860a27983804e90c8b">GetNonAdjacentLinks</reimplementedby>
        <param>
          <type>int</type>
          <declname>adjacentoptions</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>return all possible link pairs that could get in collision. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adjacentoptions</parametername>
</parameternamelist>
<parameterdescription>
<para>a bitmask of <ref refid="classOpenRAVE_1_1KinBody_1ace43b2d7d920eeb2eb69299a4784b040" kindref="member">AdjacentOptions</ref> values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1216"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1afe1545b1bf9bfd1f76ce88e53e0914e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::set&lt; int &gt; &amp;</type>
        <definition>virtual const std::set&lt;int&gt;&amp; GetAdjacentLinks</definition>
        <argsstring>() const </argsstring>
        <name>GetAdjacentLinks</name>
        <briefdescription>
<para>return all possible link pairs whose collisions are ignored. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1219"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1abeee587581232f14ea57e9f05b740779" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1aa02b5cd826890fa31fb80f0d469312d9" kindref="member">UserDataPtr</ref></type>
        <definition>virtual UserDataPtr GetPhysicsData</definition>
        <argsstring>() const </argsstring>
        <name>GetPhysicsData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1KinBody_1aa282fd034535ec4b05f90f9cd32bd1c9" kindref="member">SetPhysicsData</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1222" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1222" bodyend="1224"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a4ae94c3cbd134d68a476d4362d2a250f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1aa02b5cd826890fa31fb80f0d469312d9" kindref="member">UserDataPtr</ref></type>
        <definition>virtual UserDataPtr GetCollisionData</definition>
        <argsstring>() const </argsstring>
        <name>GetCollisionData</name>
        <briefdescription>
<para>SetCollisionData. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1226" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1226" bodyend="1228"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a987c89c00e6a5cfc8e72f33845d14ee6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classOpenRAVE_1_1KinBody_1a1ffc67e834b97ce4e1acc052180dce52" kindref="member">ManageDataPtr</ref></type>
        <definition>virtual ManageDataPtr GetManageData</definition>
        <argsstring>() const </argsstring>
        <name>GetManageData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1229" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1229" bodyend="1231"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1aac16fee68aa354fa24e6de5b8f79b78d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int GetUpdateStamp</definition>
        <argsstring>() const </argsstring>
        <name>GetUpdateStamp</name>
        <briefdescription>
<para>Return a unique id for every transformation state change of any link. Used to check if robot state has changed. </para>        </briefdescription>
        <detaileddescription>
<para>The stamp is used by the collision checkers, physics engines, or any other item that needs to keep track of any changes of the <ref refid="classOpenRAVE_1_1KinBody" kindref="compound">KinBody</ref> as it moves. Currently stamps monotonically increment for every transformation/joint angle change. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1238" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1238" bodyend="1240"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1aadffdb83bc22dcdd5dd50c27d1bb5496" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Clone</definition>
        <argsstring>(InterfaceBaseConstPtr preference, int cloningoptions)</argsstring>
        <name>Clone</name>
        <reimplements refid="classOpenRAVE_1_1InterfaceBase_1aadffdb83bc22dcdd5dd50c27d1bb5496">Clone</reimplements>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1aadffdb83bc22dcdd5dd50c27d1bb5496">Clone</reimplementedby>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a98930a0f0fa346643e6694577adac990" kindref="member">InterfaceBaseConstPtr</ref></type>
          <declname>preference</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cloningoptions</declname>
        </param>
        <briefdescription>
<para>Clone the contents of an interface to the current interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>preference</parametername>
</parameternamelist>
<parameterdescription>
<para>the interface whose information to clone </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cloningoptions</parametername>
</parameternamelist>
<parameterdescription>
<para>mask of CloningOptions </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classOpenRAVE_1_1openrave__exception" kindref="compound">openrave_exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if command doesn&apos;t succeed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1242"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a4f3de0f5a2b97c622ae9e4ea774cf30d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1aa02b5cd826890fa31fb80f0d469312d9" kindref="member">UserDataPtr</ref></type>
        <definition>virtual UserDataPtr RegisterChangeCallback</definition>
        <argsstring>(int properties, const boost::function&lt; void()&gt; &amp;callback)</argsstring>
        <name>RegisterChangeCallback</name>
        <param>
          <type>int</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>const boost::function&lt; void()&gt; &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Register a callback with the interface. </para>        </briefdescription>
        <detaileddescription>
<para>Everytime a static property of the interface changes, all registered callbacks are called to update the users of the changes. Note that the callbacks will block the thread that made the parameter change. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>a mask of the <ref refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238f" kindref="member">KinBodyProperty</ref> values that the callback should be called for when they change </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1251"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ac3d3423a3fae6eb66bc8e0ff6fc23e3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void serialize</definition>
        <argsstring>(std::ostream &amp;o, int options) const </argsstring>
        <name>serialize</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1ac3d3423a3fae6eb66bc8e0ff6fc23e3e">serialize</reimplementedby>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1253"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a911ecdc66e68c59e2be7eeec162b238a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::string &amp;</type>
        <definition>virtual const std::string&amp; GetKinematicsGeometryHash</definition>
        <argsstring>() const </argsstring>
        <name>GetKinematicsGeometryHash</name>
        <briefdescription>
<para>A md5 hash unique to the particular kinematic and geometric structure of a <ref refid="classOpenRAVE_1_1KinBody" kindref="compound">KinBody</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This 32 byte string can be used to check if two bodies have the same kinematic structure and can be used to index into tables when looking for body-specific models. <ref refid="namespaceOpenRAVE" kindref="compound">OpenRAVE</ref> stores all such models in the OPENRAVE_HOME directory (usually ~/.openrave), indexed by the particular robot/body hashes. <simplesect kind="return"><para>md5 hash string of kinematics/geometry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1261"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ad1f632c1fc4e293b7fd1482c732dd7d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SetJointVelocities</definition>
        <argsstring>(const std::vector&lt; dReal &gt; &amp;pJointVelocities) RAVE_DEPRECATED</argsstring>
        <name>SetJointVelocities</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>pJointVelocities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000020"><xreftitle>非推奨</xreftitle><xrefdescription><para>(10/11/18) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1264" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1264" bodyend="1266"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a7685100461fe38707668dc3495e05a49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetVelocity</definition>
        <argsstring>(Vector &amp;linearvel, Vector &amp;angularvel) const RAVE_DEPRECATED</argsstring>
        <name>GetVelocity</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>linearvel</declname>
        </param>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>angularvel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000021"><xreftitle>非推奨</xreftitle><xrefdescription><para>(10/11/18) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1269"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a869f9a89146a89d8248f392c9610b7b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetZeroConfiguration</definition>
        <argsstring>()</argsstring>
        <name>SetZeroConfiguration</name>
        <briefdescription>
<para>Sets the joint offsets so that the current configuration becomes the new zero state of the robot. </para>        </briefdescription>
        <detaileddescription>
<para>When this function returns, the returned DOF values should be all zero for controllable joints. Mimic equations will use the new offsetted values when computing their joints. This is primarily used for calibrating a robot&apos;s zero position </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1276"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1affeafe65e7c4094f282d273dedbf069b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>InterfaceType</type>
        <definition>static InterfaceType GetInterfaceTypeStatic</definition>
        <argsstring>()</argsstring>
        <name>GetInterfaceTypeStatic</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1affeafe65e7c4094f282d273dedbf069b">GetInterfaceTypeStatic</reimplementedby>
        <briefdescription>
<para>return the static interface type this class points to (used for safe casting) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="857" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="857" bodyend="859"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a2f6882391018a6ec4f9a49b217703578" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KinBody</definition>
        <argsstring>(InterfaceType type, EnvironmentBasePtr penv)</argsstring>
        <name>KinBody</name>
        <param>
          <type>InterfaceType</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a652cd59d4cc9e3262d85e6776ec8ff9b" kindref="member">EnvironmentBasePtr</ref></type>
          <declname>penv</declname>
        </param>
        <briefdescription>
<para>constructors declared protected so that user always goes through environment to create bodies </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1302"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a2ef9f983dd9f2e3e06b4bc314fe7ba1d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceOpenRAVE_1abdcbe7a0abc56f7fd090dbd298a5a44c" kindref="member">KinBodyPtr</ref></type>
        <definition>KinBodyPtr shared_kinbody</definition>
        <argsstring>()</argsstring>
        <name>shared_kinbody</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1303" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1303" bodyend="1305"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a9e85323e68548d575608f1eb9caa90b4" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceOpenRAVE_1a7ad9b63f36f8be408ec6e70ebe8130f7" kindref="member">KinBodyConstPtr</ref></type>
        <definition>KinBodyConstPtr shared_kinbody_const</definition>
        <argsstring>() const </argsstring>
        <name>shared_kinbody_const</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1306" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1306" bodyend="1308"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1aa282fd034535ec4b05f90f9cd32bd1c9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SetPhysicsData</definition>
        <argsstring>(UserDataPtr pdata)</argsstring>
        <name>SetPhysicsData</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1aa02b5cd826890fa31fb80f0d469312d9" kindref="member">UserDataPtr</ref></type>
          <declname>pdata</declname>
        </param>
        <briefdescription>
<para>custom data managed by the current active physics engine, should be set only by <ref refid="classOpenRAVE_1_1PhysicsEngineBase" kindref="compound">PhysicsEngineBase</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1311" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1311" bodyend="1313"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ad85bc7dc70d07b123c41b7bcad79ca34" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SetCollisionData</definition>
        <argsstring>(UserDataPtr pdata)</argsstring>
        <name>SetCollisionData</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1aa02b5cd826890fa31fb80f0d469312d9" kindref="member">UserDataPtr</ref></type>
          <declname>pdata</declname>
        </param>
        <briefdescription>
<para>custom data managed by the current active collision checker, should be set only by <ref refid="classOpenRAVE_1_1CollisionCheckerBase" kindref="compound">CollisionCheckerBase</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1315" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1315" bodyend="1317"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1aa8a85e0f120e9cbc588a8f3a555758cb" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SetViewerData</definition>
        <argsstring>(UserDataPtr pdata)</argsstring>
        <name>SetViewerData</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1aa02b5cd826890fa31fb80f0d469312d9" kindref="member">UserDataPtr</ref></type>
          <declname>pdata</declname>
        </param>
        <briefdescription>
<para>custom data managed by the current active viewer, should be set only by <ref refid="classOpenRAVE_1_1ViewerBase" kindref="compound">ViewerBase</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1319" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1319" bodyend="1321"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1aeda22b9e132eb476f6b45b48d02670ea" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SetManageData</definition>
        <argsstring>(ManageDataPtr pdata)</argsstring>
        <name>SetManageData</name>
        <param>
          <type><ref refid="classOpenRAVE_1_1KinBody_1a1ffc67e834b97ce4e1acc052180dce52" kindref="member">ManageDataPtr</ref></type>
          <declname>pdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1322" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1322" bodyend="1324"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a3a10edb8cb573ac97bfed0e05dc2a29a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void _ComputeInternalInformation</definition>
        <argsstring>()</argsstring>
        <name>_ComputeInternalInformation</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1a3a10edb8cb573ac97bfed0e05dc2a29a">_ComputeInternalInformation</reimplementedby>
        <briefdescription>
<para>Final post-processing stage before a kinematics body can be used. </para>        </briefdescription>
        <detaileddescription>
<para>This method is called after the body is finished being initialized with data and before being added to the environment. Also builds the hashes. Builds the internal hierarchy and kinematic body hash.</para><para>Avoids making specific calls on the collision checker (like CheckCollision) or physics engine (like simulating velocities/torques) since this information can change depending on the attached plugin. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1332"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a218a09068212db7bb35c7d4ce792e309" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void _ParametersChanged</definition>
        <argsstring>(int parameters)</argsstring>
        <name>_ParametersChanged</name>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1a218a09068212db7bb35c7d4ce792e309">_ParametersChanged</reimplementedby>
        <param>
          <type>int</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Called to notify the body that certain groups of parameters have been changed. </para>        </briefdescription>
        <detaileddescription>
<para>This function in calls every registers calledback that is tracking the changes. It also recomputes the hashes if geometry changed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1338"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ad9ec7f6d7732afcf3696924265ea1a8b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool _IsAttached</definition>
        <argsstring>(KinBodyConstPtr body, std::set&lt; KinBodyConstPtr &gt; &amp;setChecked) const </argsstring>
        <name>_IsAttached</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a7ad9b63f36f8be408ec6e70ebe8130f7" kindref="member">KinBodyConstPtr</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type>std::set&lt; <ref refid="namespaceOpenRAVE_1a7ad9b63f36f8be408ec6e70ebe8130f7" kindref="member">KinBodyConstPtr</ref> &gt; &amp;</type>
          <declname>setChecked</declname>
        </param>
        <briefdescription>
<para>Return true if two bodies should be considered as one during collision (ie one is grabbing the other). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1341"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a1a340c6aa418a10fcf9847474376b1ba" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void _AttachBody</definition>
        <argsstring>(KinBodyPtr body)</argsstring>
        <name>_AttachBody</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1abdcbe7a0abc56f7fd090dbd298a5a44c" kindref="member">KinBodyPtr</ref></type>
          <declname>body</declname>
        </param>
        <briefdescription>
<para>adds an attached body </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1344"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1a718b569da1eb4373e83434f09b839705" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool _RemoveAttachedBody</definition>
        <argsstring>(KinBodyPtr body)</argsstring>
        <name>_RemoveAttachedBody</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1abdcbe7a0abc56f7fd090dbd298a5a44c" kindref="member">KinBodyPtr</ref></type>
          <declname>body</declname>
        </param>
        <briefdescription>
<para>removes an attached body </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if body was successfully found and removed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1349"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ad9a295abdbcfb51c7b9edee54eb805a3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void _ResetInternalCollisionCache</definition>
        <argsstring>()</argsstring>
        <name>_ResetInternalCollisionCache</name>
        <briefdescription>
<para>resets cached information dependent on the collision checker (usually called when the collision checker is switched or some big mode is set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1352"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1ac739f547d1fd8fc0d58d98b8dfb22083" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>boost::shared_ptr&lt; FunctionParserBase&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &gt;</type>
        <definition>virtual boost::shared_ptr&lt;FunctionParserBase&lt;dReal&gt; &gt; _CreateFunctionParser</definition>
        <argsstring>()</argsstring>
        <name>_CreateFunctionParser</name>
        <briefdescription>
<para>creates the function parser connected to this body&apos;s joint values </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1355"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classOpenRAVE_1_1KinBody_1af386ad7515f485242895df543029d333" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* GetHash</definition>
        <argsstring>() const </argsstring>
        <name>GetHash</name>
        <reimplements refid="classOpenRAVE_1_1InterfaceBase_1abfb0be978f0f9899582785d67c4b3d40">GetHash</reimplements>
        <reimplementedby refid="classOpenRAVE_1_1RobotBase_1af386ad7515f485242895df543029d333">GetHash</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="1394" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="1394" bodyend="1396"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><bold>[interface]</bold> A kinematic body of links and joints. <bold>If not specified, method is not multi-thread safe.</bold> See <ref refid="arch__kinbody" kindref="compound">Kinematics Body Concepts</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1374">
        <label>KinBody</label>
        <link refid="classOpenRAVE_1_1KinBody"/>
        <childnode refid="1375" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1376">
        <label>RobotBase</label>
        <link refid="classOpenRAVE_1_1RobotBase"/>
        <childnode refid="1374" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1375">
        <label>InterfaceBase</label>
        <link refid="classOpenRAVE_1_1InterfaceBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1377">
        <label>KinBody</label>
        <link refid="classOpenRAVE_1_1KinBody"/>
        <childnode refid="1378" relation="public-inheritance">
        </childnode>
        <childnode refid="1383" relation="usage">
          <edgelabel>_vTopologicallySortedJointsAll</edgelabel>
          <edgelabel>_vTopologicallySortedJoints</edgelabel>
          <edgelabel>_vPassiveJoints</edgelabel>
          <edgelabel>_vDOFOrderedJoints</edgelabel>
          <edgelabel>_vecjoints</edgelabel>
        </childnode>
        <childnode refid="1384" relation="usage">
          <edgelabel>_vTempJoints</edgelabel>
        </childnode>
        <childnode refid="1385" relation="usage">
          <edgelabel>_spec</edgelabel>
        </childnode>
        <childnode refid="1388" relation="usage">
          <edgelabel>_listAttachedBodies</edgelabel>
        </childnode>
        <childnode refid="1389" relation="usage">
          <edgelabel>_vAllPairsShortestPaths</edgelabel>
        </childnode>
        <childnode refid="1390" relation="usage">
          <edgelabel>_setAdjacentLinks</edgelabel>
        </childnode>
        <childnode refid="1391" relation="usage">
          <edgelabel>_vClosedLoopIndices</edgelabel>
        </childnode>
        <childnode refid="1392" relation="usage">
          <edgelabel>_vInitialLinkTransformations</edgelabel>
        </childnode>
        <childnode refid="1379" relation="usage">
          <edgelabel>__hashkinematics</edgelabel>
          <edgelabel>_name</edgelabel>
        </childnode>
        <childnode refid="1394" relation="usage">
          <edgelabel>_vJointsAffectingLinks</edgelabel>
        </childnode>
        <childnode refid="1395" relation="usage">
          <edgelabel>_vTopologicallySortedJointIndicesAll</edgelabel>
          <edgelabel>_vDOFIndices</edgelabel>
        </childnode>
        <childnode refid="1396" relation="usage">
          <edgelabel>_listRegisteredCallbacks</edgelabel>
        </childnode>
        <childnode refid="1397" relation="usage">
          <edgelabel>_veclinks</edgelabel>
        </childnode>
        <childnode refid="1398" relation="usage">
          <edgelabel>_vForcedAdjacentLinks</edgelabel>
        </childnode>
        <childnode refid="1399" relation="usage">
          <edgelabel>_vClosedLoops</edgelabel>
        </childnode>
      </node>
      <node id="1389">
        <label>vector&lt; std::pair&lt; int16_t, int16_t &gt; &gt;</label>
      </node>
      <node id="1390">
        <label>set&lt; int &gt;</label>
      </node>
      <node id="1385">
        <label>ConfigurationSpecification</label>
        <link refid="classOpenRAVE_1_1ConfigurationSpecification"/>
        <childnode refid="1386" relation="usage">
          <edgelabel>_vgroups</edgelabel>
        </childnode>
      </node>
      <node id="1386">
        <label>vector&lt; Group &gt;</label>
        <childnode refid="1387" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1398">
        <label>vector&lt; std::pair&lt; std::string, std::string &gt; &gt;</label>
      </node>
      <node id="1379">
        <label>string</label>
        <childnode refid="1380" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1388">
        <label>list&lt; KinBodyWeakPtr &gt;</label>
      </node>
      <node id="1384">
        <label>vector&lt; dReal &gt;</label>
      </node>
      <node id="1381">
        <label>map&lt; std::string, boost::shared_ptr&lt; InterfaceCommand &gt;, CaseInsensitiveCompare &gt;</label>
        <childnode refid="1379" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="1387">
        <label>Group</label>
        <link refid="classOpenRAVE_1_1ConfigurationSpecification_1_1Group"/>
        <childnode refid="1379" relation="usage">
          <edgelabel>interpolation</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="1393">
        <label>RaveTransform</label>
      </node>
      <node id="1380">
        <label>basic_string&lt; char &gt;</label>
      </node>
      <node id="1394">
        <label>vector&lt; int8_t &gt;</label>
      </node>
      <node id="1391">
        <label>vector&lt; std::vector&lt; std::pair&lt; int16_t, int16_t &gt; &gt; &gt;</label>
        <childnode refid="1389" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1383">
        <label>vector&lt; JointPtr &gt;</label>
      </node>
      <node id="1396">
        <label>list&lt; UserDataWeakPtr &gt;</label>
      </node>
      <node id="1395">
        <label>vector&lt; int &gt;</label>
      </node>
      <node id="1392">
        <label>vector&lt; Transform &gt;</label>
        <childnode refid="1393" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1382">
        <label>map&lt; std::string, XMLReadablePtr, CaseInsensitiveCompare &gt;</label>
        <childnode refid="1379" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="1378">
        <label>InterfaceBase</label>
        <link refid="classOpenRAVE_1_1InterfaceBase"/>
        <childnode refid="1379" relation="usage">
          <edgelabel>__strpluginname</edgelabel>
          <edgelabel>__struri</edgelabel>
          <edgelabel>__strxmlid</edgelabel>
          <edgelabel>__description</edgelabel>
        </childnode>
        <childnode refid="1381" relation="usage">
          <edgelabel>__mapCommands</edgelabel>
        </childnode>
        <childnode refid="1382" relation="usage">
          <edgelabel>__mapReadableInterfaces</edgelabel>
        </childnode>
      </node>
      <node id="1397">
        <label>vector&lt; LinkPtr &gt;</label>
      </node>
      <node id="1399">
        <label>vector&lt; std::vector&lt; std::pair&lt; LinkPtr, JointPtr &gt; &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/pra3cob/openrave/include/openrave/kinbody.h" line="32" bodyfile="/home/pra3cob/openrave/include/openrave/kinbody.h" bodystart="31" bodyend="1420"/>
    <listofallmembers>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a22f4da10ed5f1c80a18f2bcd96776c1a" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>__description</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a67858898601b8f9e51fbdebf2edf018a" prot="private" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>__hashkinematics</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a1a340c6aa418a10fcf9847474376b1ba" prot="protected" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>_AttachBody</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ae339c94da801d91508c6d4dd4ed118c6" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_bMakeJoinedLinksAdjacent</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a3a10edb8cb573ac97bfed0e05dc2a29a" prot="protected" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>_ComputeInternalInformation</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac739f547d1fd8fc0d58d98b8dfb22083" prot="protected" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>_CreateFunctionParser</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a0386692fd7704da6e79775fa09a4b685" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_environmentid</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad9ec7f6d7732afcf3696924265ea1a8b" prot="protected" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>_IsAttached</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a7a467aa8c7f51627331d7f2dc8e71fd3" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_listAttachedBodies</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a6d824e60d7bac02b97a9643d6d555af9" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_listRegisteredCallbacks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aaf2ed934b37cbbd236fdd1b01a5f5005" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_name</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aca4c77d19ed947e26826284b9c8b5d56" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_nHierarchyComputed</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a5b371595d16c6e862f4f675f03dffba4" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_nNonAdjacentLinkCache</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a7e9098feb28e312721a58a360989ec20" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_nParametersChanged</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1abce08eaa134f87c6d13f4d23749a61b9" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_nUpdateStampId</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a218a09068212db7bb35c7d4ce792e309" prot="protected" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>_ParametersChanged</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a0a17ef574c66277ef313e5e56d6b9bbc" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_pCollisionData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a5da7cbfc2028c1dff4992887fa5ed86e" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_pManageData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a3f8a2e40760cf2ee75f604c0f18b27ec" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_pPhysicsData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aff45addfa1926549479a9786a92d6246" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_pViewerData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a718b569da1eb4373e83434f09b839705" prot="protected" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>_RemoveAttachedBody</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad9a295abdbcfb51c7b9edee54eb805a3" prot="protected" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>_ResetInternalCollisionCache</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad20d6407270731a61d3a2877745edd29" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_setAdjacentLinks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a1e6a02a45812548a34f578af0c8a301e" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_setNonAdjacentLinks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac77a3b00fc5376337843fffef53ddec5" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_spec</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad4fcd86b85624e749100cd60c0a9fccf" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_vAllPairsShortestPaths</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a00df6713c1a66e68f273ae2b8aa0c5f4" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_vClosedLoopIndices</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a0c06bbb41fb3ba4098d486fd90699140" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_vClosedLoops</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac520bd29ce01d4f20bc6a297630dbf10" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_vDOFIndices</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ae7d1b91b54b1ab04baee502a4dc26567" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_vDOFOrderedJoints</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a8eb8f9943c05cd08afba576dba39871a" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_vecjoints</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a02bf557ce0bba8374b863ce9f20de255" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_veclinks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aa4e6b1729935f161cd886466ff81e820" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_vForcedAdjacentLinks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a9945fd1c6a580218fe969ee3bf77097f" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_vInitialLinkTransformations</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a5a4ac058401dd5f4ec5da0e7c1f719e2" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_vJointsAffectingLinks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aa70fe0334abb18115dcb5437f5425430" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_vPassiveJoints</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a6a8d5c60151f67c4a11ad3b623bdf9c8" prot="private" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_vTempJoints</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aa731820a61e6c11c59a75e7dfffecd90" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_vTopologicallySortedJointIndicesAll</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a57a836d771622beb63fd79d96445d7c3" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_vTopologicallySortedJoints</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac4536665c649aeb43699f45c7774446f" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>_vTopologicallySortedJointsAll</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ace43b2d7d920eeb2eb69299a4784b040" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>AdjacentOptions</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ace43b2d7d920eeb2eb69299a4784b040a471e53775c7eb63178de3a28ed33d64f" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>AO_ActiveDOFs</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ace43b2d7d920eeb2eb69299a4784b040a9d927f87563a4c4eb69c2391905bc015" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>AO_Enabled</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a97ac46543288dce3ad8a976f04bf2844" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>BodyStateConstPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a1cef71a70dbff9c6cdc971d76a3273c5" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>BodyStatePtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a48eef419ccc30bfcdd82febedd6f54b7" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>CalculateAngularVelocityJacobian</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ae99b5fa18c14649692fa39a0883d1448" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>CalculateAngularVelocityJacobian</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a7fd6178241c4b8c8bb8a9d9b5f92f8cc" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>CalculateJacobian</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1abbbaf69f430808c088bac988cd5fa9f8" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>CalculateJacobian</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a4223d26feefc25a2d8b7e0abdb30e551" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>CalculateRotationJacobian</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a5525c53b10f1bae40980148f18a9102f" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>CalculateRotationJacobian</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a3d555222cf7b02d592a0a31cef5d479d" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>CheckSelfCollision</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aadffdb83bc22dcdd5dd50c27d1bb5496" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>Clone</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a19007e9a11f60fac50720cd38a4d6ede" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>ComputeAABB</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a941c8e8d2c5aa963d76aef113f19d835" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>Destroy</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ae63c68d8042f54cfb86ef6b52827cb69" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>DoesAffect</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a93204280b89842474930316675ce9f07" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>Enable</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1af0009d4f176dc8f0d02c5dd3b96226f1" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>EnableLink</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1afe1545b1bf9bfd1f76ce88e53e0914e7" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetAdjacentLinks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a2f50259e5dc09090474e2099dbd81cac" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetAttached</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a57e27364677e4ade3f7bf0865e7313df" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetBodyTransformations</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1adfe385b3300ee3f399e9a71837409054" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetCenterOfMass</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a81d58139430e2200f75c1bbba99c6a74" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetChain</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac6b65af9a7369ff0141880abf1576c33" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetChain</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a6eb3b9da2ed2b9b8eec770f018bbeb19" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetClosedLoops</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a4ae94c3cbd134d68a476d4362d2a250f" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetCollisionData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a4e917473a7d475324af43320f83796fc" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetConfigurationSpecification</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1af7fef3f4f3e970937d82cac5b2e25dc6" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetConfigurationSpecificationIndices</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a9d2332ddf65fc655aa7ebaa39223ee66" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetConfigurationValues</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a23704d633d23272f467ea0a2ca5a5223" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetDependencyOrderedJoints</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a1b571821be060055bf6f2474e12fa5a3" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetDescription</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a44fbec2fd26a45cada889c5c0f0751c8" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetDOF</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad463b766576c1691d2937c43d53ec61b" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetDOFAccelerationLimits</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a3eb84ab4c44c1589ca8ff5ffaf14ddc3" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetDOFLimits</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a6fe001f451547229641f352a57cac7c0" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetDOFMaxAccel</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a30e259c711d606c9d38591da2c169ca8" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetDOFMaxTorque</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a1e9ec62d458f7c3b1ea298fa0499b25e" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetDOFMaxVel</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a8179efee098a3632e86cd3e278e89781" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetDOFResolutions</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aa07f040a19a9fe7b80254915b1cce26b" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetDOFValues</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1af77a7f1b7f83bbd441c8e488c2f57e94" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetDOFVelocities</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a62447722990a87e074023da86ce5bb74" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetDOFVelocityLimits</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a235492faf314ece039e652cb7493ef32" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetDOFVelocityLimits</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a6568e67c28b56bea234bcbdf78172ee6" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetDOFWeights</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a847c7f827694fd3db16f20b5669e1743" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>GetEnv</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a51f880cf26774cd34ab9634bd518b955" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetEnvironmentId</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ab57d127f75d79fb8bb00524894de8453" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetGuiData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1af386ad7515f485242895df543029d333" prot="private" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetHash</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1ab6da1a274144d2dae86c4414fdc00c8a" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>GetInterfaceType</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1affeafe65e7c4094f282d273dedbf069b" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>GetInterfaceTypeStatic</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ae299b01185a923df10e1fc9fe0fc58be" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetJoint</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ab386b6dd306aca447113b8892c0fc265" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetJointFromDOFIndex</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a65ecee02fe64e7adf7609aa5375f0bcd" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetJointIndex</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a01fcab06f416b2ac3bac1385e09ff9bf" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>GetJoints</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a911ecdc66e68c59e2be7eeec162b238a" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetKinematicsGeometryHash</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a9953fafff72cdb7abf421255bbe2fa12" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetLink</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a32ba11c03aabb873b3e503c8e5b93e53" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetLinks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad8ee6440e3b5598037f585444639d341" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetLinkTransformations</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ab3b39cad05596c9fd0bd37de058239f4" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetLinkVelocities</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a987c89c00e6a5cfc8e72f33845d14ee6" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetManageData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a3cc720dbc55fa8e07a0f85343d3bb136" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetName</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a0dfdf7668c68c2860a27983804e90c8b" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetNonAdjacentLinks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ab7ece8b3b39a3c9dcc61899dc8dc783e" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>GetPassiveJoints</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1abeee587581232f14ea57e9f05b740779" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetPhysicsData</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a909d5f1a5ae6d3fbb73b69c26b3e6bb4" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>GetPluginName</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a948f97af111d83fad6ff054f88aaa214" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>GetReadableInterface</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a843c0a1f79a31b230bb85f265f97be6c" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>GetReadableInterfaces</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a2fc883be19068452aa218bf252c244b1" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetRigidlyAttachedLinks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a2206c7317f62f083c3f57868ba82bfee" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetTransform</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aac16fee68aa354fa24e6de5b8f79b78d" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetUpdateStamp</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a155ad446997ca5823937f9c171c17021" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetURI</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a975ebca32c743c8530807758e7c46618" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetUserData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a7685100461fe38707668dc3495e05a49" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetVelocity</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1afb0f7064845ec4978785c8973be539ee" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetViewerData</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1adebf2ecc7ec47f5d27229457e84cab87" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>GetXMLFilename</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a23e085422cc13cf058b9f9558a7d9de6" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>GetXMLId</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a6ca8a1abee1479424de9c296da9cdd34" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>InitFromBoxes</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a904bbbd6da53247d7f8e3ce1c3bac5b8" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>InitFromBoxes</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a3f81f529c6959894555ad8841a134431" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>InitFromData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ae67a1ee5e11749340bfbca5bd6749424" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>InitFromFile</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ab0b57544b54f5b7d766a3fee473667a5" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>InitFromGeometries</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1afe077907e74b0a8c7bdb53abc6a67fb1" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>InitFromSpheres</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a9fbe9cf06cf411d8e93431552bdd4ebf" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>InitFromTrimesh</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a1505a042027909cb3c715713812d554f" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>InterfaceBase</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1af078e9e99c82cbd71d0bfa325438514e" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>InterfaceCommandFn</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a1e6636e58d5b763c37a529f752c5012d" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>IsAttached</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a0367d00b79b29dae5c647b169432b2a9" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>IsDOFInChain</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ab093c91e2859f12d929fe8665e67a8e8" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>IsEnabled</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a38fa8d57d2eefc36568411a129c741d3" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>IsRobot</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aeeaa44b125ab4ead7464f0e8991a3bb4" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>JointConstPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>JointPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a9e018dfc30d395bd54f090348b4b0493" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>JointWeakPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a2f6882391018a6ec4f9a49b217703578" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>KinBody</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238f" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>KinBodyProperty</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a99c416f979a09dfc6ef42fd62bd4e77e" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>LinkConstPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a8dea7b02ac1900156e6776d795c476c3" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>LinkPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a05ac08f3af6bf716a6f2991385c92467" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>LinkWeakPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ae1c689669d51508b456fbc41012988c0" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>ManageDataConstPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a1ffc67e834b97ce4e1acc052180dce52" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>ManageDataPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa843c5aa5238d6b2bd4d437a579c3124f" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_JointAccelerationVelocityLimits</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa4814d65685cdcf1a1acd4b0c8379e9a0" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_JointLimits</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa9e6648eaadfe2e4b55dae772f95b461b" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_JointMimic</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa7ee92fba472282a56c66883f947dd997" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_JointOffset</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fac45ebedd04034c45de4da8c2786fad9e" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_JointProperties</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa785fd1ee72bf56f00622d147f18ba985" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_Joints</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fabe5d066e02460667e0f9b81dfe55dca3" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_LinkDraw</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa980bc1b487ae69ae27b35d1efe3ec671" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_LinkGeometry</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa98f236c1d5da89a2ed36445af493324e" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_Links</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa457e7598a9b59f4b89fd8c85ecc8b912" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_LinkStatic</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa97d0d4401c3c93be199eb8992a729c30" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_Manipulators</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa47f8210384e3bcc38a5c2c8d3f295c46" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_Name</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa0952514ee1fd4ebb86990df968573e7a" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_RobotActiveDOFs</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fad651ee47d87fae146c4cefa49b908c18" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_RobotManipulators</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa2792bbad36399a273b763b4539fdd497" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_RobotManipulatorTool</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa666cc0b7129b93c1a57d55d91681e0f6" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_RobotSensorPlacement</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238faac5baec80229e6eeae7c7ef46d6579a7" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_RobotSensors</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa3c8d7b53f7a81d3f96fd54bb35b8b2d8" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_SensorPlacement</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238faad03c15c4528bbd25c25837ae6f82b31" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Prop_Sensors</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a14a2c1d323f2f411a9b9eb1e14b99aca" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>READERSMAP</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a4f3de0f5a2b97c622ae9e4ea774cf30d" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>RegisterChangeCallback</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a840776899a1d3677582fc6ef87be6ef2" prot="protected" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>RegisterCommand</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388a9e85e6d610af529b7587518caccccf4a" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Save_ActiveDOF</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388abfdea67aabc497c0ecd461a332cf17e1" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Save_ActiveManipulator</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388aa8b99f22784feffbd182ad71f8eb8a6f" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Save_GrabbedBodies</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388a48bd135704be05e76e3a30e2d80209b7" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Save_LinkEnable</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388ab33f258d52d1a0adc2f8b75878e3ace2" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Save_LinkTransformation</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388ac7cea6ccd82414804a32fef90681985e" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>Save_LinkVelocities</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388" prot="public" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>SaveParameters</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a1293cda647f18fe751e66b910af52407" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SendCommand</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac3d3423a3fae6eb66bc8e0ff6fc23e3e" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>serialize</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a0cbd54ab25b8c1f3466092b54180d266" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetBodyTransformations</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad85bc7dc70d07b123c41b7bcad79ca34" prot="protected" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetCollisionData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad5dc4cc6b247465c2522c31a9169cfd0" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetConfigurationValues</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a9d548988a71fd50f890acdec255bdc17" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetDescription</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a4057204a0e2c01a59ea9011fb5bba922" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetDOFTorques</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a30ca49e63e7794762a374f53585d3b8e" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetDOFValues</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad75a7828a47c91e1c572c111a6779fcd" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetDOFValues</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aff61afba85f45d8c7262c5391b271cb1" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetDOFVelocities</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a0718b6336d442f3e2320f7b17d84d516" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetDOFVelocities</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aba8aaffd5d9bb4c604eb29a0250bd525" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetJointTorques</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aa0afe535a5cbb420c37523184a18860a" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetJointValues</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a1bec378a3c11954bc849987e8048706f" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetJointValues</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad1f632c1fc4e293b7fd1482c732dd7d2" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetJointVelocities</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad005f2eda60cafaec07e183e9fbfe77d" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetLinkTransformations</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a6b7837855cf483cc6a87553a3dcc16ec" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetLinkVelocities</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aeda22b9e132eb476f6b45b48d02670ea" prot="protected" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetManageData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a847d2f81d14b0005954aeb0d817a2187" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetName</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aa282fd034535ec4b05f90f9cd32bd1c9" prot="protected" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetPhysicsData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a92abef33e0bc4eca1756178c31e18645" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetTransform</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1ab3a2d5e41d756988959d9f5cdccfe284" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetUserData</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1aba2de87983f5e6ad881df19cc6198018" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetUserData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac739ab6c3a2a0d486cc0d280bb2b74db" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetVelocity</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aa8a85e0f120e9cbc588a8f3a555758cb" prot="protected" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetViewerData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a869f9a89146a89d8248f392c9610b7b7" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SetZeroConfiguration</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a2ef9f983dd9f2e3e06b4bc314fe7ba1d" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>shared_kinbody</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a9e85323e68548d575608f1eb9caa90b4" prot="protected" virt="non-virtual"><scope>OpenRAVE::KinBody</scope><name>shared_kinbody_const</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ab51d371d29d7947197b90d8e915de00f" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SimulationStep</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a7c60c9dfe8ef533913967e60f3d7db8f" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SubtractDOFValues</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a4b35aa1ab1b6538d151f7f6cb254c5fe" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>SubtractJointValues</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a1a70446e03a29c6c9a5650886027cd2e" prot="protected" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>UnregisterCommand</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a90ab55ffa15c68875747d2ac2458b8e1" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>~InterfaceBase</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a733fc2dfdef6968ace502ee6c6924f7f" prot="public" virt="virtual"><scope>OpenRAVE::KinBody</scope><name>~KinBody</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
