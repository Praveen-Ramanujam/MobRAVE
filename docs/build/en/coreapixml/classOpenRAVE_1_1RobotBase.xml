<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="classOpenRAVE_1_1RobotBase" kind="class" prot="public">
    <compoundname>OpenRAVE::RobotBase</compoundname>
    <basecompoundref refid="classOpenRAVE_1_1KinBody" prot="public" virt="non-virtual">KinBody</basecompoundref>
    <includes refid="robot_8h" local="no">robot.h</includes>
    <innerclass refid="classOpenRAVE_1_1RobotBase_1_1AttachedSensor" prot="public">OpenRAVE::RobotBase::AttachedSensor</innerclass>
    <innerclass refid="classOpenRAVE_1_1RobotBase_1_1Grabbed" prot="public">OpenRAVE::RobotBase::Grabbed</innerclass>
    <innerclass refid="classOpenRAVE_1_1RobotBase_1_1Manipulator" prot="public">OpenRAVE::RobotBase::Manipulator</innerclass>
    <innerclass refid="classOpenRAVE_1_1RobotBase_1_1RobotStateSaver" prot="public">OpenRAVE::RobotBase::RobotStateSaver</innerclass>
      <sectiondef kind="user-defined">
      <header>Affine DOFs</header>
      <description><para><anchor id="_1amgrp62be18eed7c72d5f553733a12f3e3602"/> Methods using the active degrees of freedoms of the robot. Active DOFs are a way for the user to specify degrees of freedom of interest for a current execution block. All planners by default use the robot&apos;s active DOF and active manipultor. For every Get* method, there is a corresponding GetActive* method rather than the methods when setting joints. The active DOFs also include affine transfomrations of the robot&apos;s base. Affine transformation DOFs can be found after the joint DOFs in this order: X, Y, Z, Rotation where rotation can be around a specified axis a full 3D rotation. Usually the affine transforamtion is with respect to the first link in the body </para></description>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1ad7131b2e388f7f953e9cc14f7336c8e2" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespaceOpenRAVE_1a3016e2185103f3c1bdc5e4482893ca98" kindref="member">DOFAffine</ref> DOF_NoTransform</type>
        <definition>const DOFAffine DOF_NoTransform RAVE_DEPRECATED</definition>
        <argsstring></argsstring>
        <name>RAVE_DEPRECATED</name>
        <initializer> OpenRAVE::DOF_NoTransform</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000042"><xreftitle>Deprecated</xreftitle><xrefdescription><para>(11/10/04), use <ref refid="namespaceOpenRAVE" kindref="compound">OpenRAVE</ref>:: global variables </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="394" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a17eb2c02db0e448f7305cbb2cd174525" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespaceOpenRAVE_1a3016e2185103f3c1bdc5e4482893ca98" kindref="member">DOFAffine</ref> DOF_X</type>
        <definition>const DOFAffine DOF_X RAVE_DEPRECATED</definition>
        <argsstring></argsstring>
        <name>RAVE_DEPRECATED</name>
        <initializer> OpenRAVE::DOF_X</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="395" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a064c19af74ffccc473774e53497df767" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespaceOpenRAVE_1a3016e2185103f3c1bdc5e4482893ca98" kindref="member">DOFAffine</ref> DOF_Y</type>
        <definition>const DOFAffine DOF_Y RAVE_DEPRECATED</definition>
        <argsstring></argsstring>
        <name>RAVE_DEPRECATED</name>
        <initializer> OpenRAVE::DOF_Y</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="396" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1af920cbd372e9736b45b8582a0f4a3e6a" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespaceOpenRAVE_1a3016e2185103f3c1bdc5e4482893ca98" kindref="member">DOFAffine</ref> DOF_Z</type>
        <definition>const DOFAffine DOF_Z RAVE_DEPRECATED</definition>
        <argsstring></argsstring>
        <name>RAVE_DEPRECATED</name>
        <initializer> OpenRAVE::DOF_Z</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="397" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a2d3278e7bbdd94bad80e4fdbb3b41f3c" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespaceOpenRAVE_1a3016e2185103f3c1bdc5e4482893ca98" kindref="member">DOFAffine</ref> DOF_RotationAxis</type>
        <definition>const DOFAffine DOF_RotationAxis RAVE_DEPRECATED</definition>
        <argsstring></argsstring>
        <name>RAVE_DEPRECATED</name>
        <initializer> OpenRAVE::DOF_RotationAxis</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="398" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a69f9adfb1b7b3c44f848101a6d3264ec" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespaceOpenRAVE_1a3016e2185103f3c1bdc5e4482893ca98" kindref="member">DOFAffine</ref> DOF_Rotation3D</type>
        <definition>const DOFAffine DOF_Rotation3D RAVE_DEPRECATED</definition>
        <argsstring></argsstring>
        <name>RAVE_DEPRECATED</name>
        <initializer> OpenRAVE::DOF_Rotation3D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="399" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a9831d84c5bfb91758c158748834737d5" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespaceOpenRAVE_1a3016e2185103f3c1bdc5e4482893ca98" kindref="member">DOFAffine</ref> DOF_RotationQuat</type>
        <definition>const DOFAffine DOF_RotationQuat RAVE_DEPRECATED</definition>
        <argsstring></argsstring>
        <name>RAVE_DEPRECATED</name>
        <initializer> OpenRAVE::DOF_RotationQuat</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="400" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a36a3474433e5ec3ab832a28f8fe8651b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetActiveDOFs</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;dofindices, int affine=OpenRAVE::DOF_NoTransform)</argsstring>
        <name>SetActiveDOFs</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>dofindices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>affine</declname>
          <defval>OpenRAVE::DOF_NoTransform</defval>
        </param>
        <briefdescription>
<para>Set the joint indices and affine transformation dofs that the planner should use. If <ref refid="namespaceOpenRAVE_1a3016e2185103f3c1bdc5e4482893ca98a5ee6baa8acb92c310cbc1ece082640d0" kindref="member">DOF_RotationAxis</ref> is specified, the previously set axis is used. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dofindices</parametername>
</parameternamelist>
<parameterdescription>
<para>the indices of the original degrees of freedom to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>affine</parametername>
</parameternamelist>
<parameterdescription>
<para>A bitmask of <ref refid="namespaceOpenRAVE_1a3016e2185103f3c1bdc5e4482893ca98" kindref="member">DOFAffine</ref> values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="407"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a1320f8a27bf8e2431f2d876ab74b5375" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetActiveDOFs</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;dofindices, int affine, const Vector &amp;rotationaxis)</argsstring>
        <name>SetActiveDOFs</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>dofindices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>affine</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>rotationaxis</declname>
        </param>
        <briefdescription>
<para>Set the joint indices and affine transformation dofs that the planner should use. If <ref refid="namespaceOpenRAVE_1a3016e2185103f3c1bdc5e4482893ca98a5ee6baa8acb92c310cbc1ece082640d0" kindref="member">DOF_RotationAxis</ref> is specified, then rotationaxis is set as the new axis. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dofindices</parametername>
</parameternamelist>
<parameterdescription>
<para>the indices of the original degrees of freedom to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>affine</parametername>
</parameternamelist>
<parameterdescription>
<para>A bitmask of <ref refid="namespaceOpenRAVE_1a3016e2185103f3c1bdc5e4482893ca98" kindref="member">DOFAffine</ref> values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotationaxis</parametername>
</parameternamelist>
<parameterdescription>
<para>if <ref refid="namespaceOpenRAVE_1a3016e2185103f3c1bdc5e4482893ca98a5ee6baa8acb92c310cbc1ece082640d0" kindref="member">DOF_RotationAxis</ref> is specified, pRotationAxis is used as the new axis </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="415"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a2fc26db3a3c302bfa1df5d972485e39c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int GetActiveDOF</definition>
        <argsstring>() const </argsstring>
        <name>GetActiveDOF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="416" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="416" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a84fb801be236fc623a1d0d14de7dd6f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int GetAffineDOF</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineDOF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="419" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="419" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a7cfd3a308f74598a3a33a5010137c632" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int GetAffineDOFIndex</definition>
        <argsstring>(DOFAffine dof) const </argsstring>
        <name>GetAffineDOFIndex</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a3016e2185103f3c1bdc5e4482893ca98" kindref="member">DOFAffine</ref></type>
          <declname>dof</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000043"><xreftitle>Deprecated</xreftitle><xrefdescription><para>(11/10/07) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="424" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="424" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1aacdc590ce4cd7f988710a1f684d2d425" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classOpenRAVE_1_1ConfigurationSpecification" kindref="compound">ConfigurationSpecification</ref> &amp;</type>
        <definition>virtual const ConfigurationSpecification&amp; GetActiveConfigurationSpecification</definition>
        <argsstring>() const </argsstring>
        <name>GetActiveConfigurationSpecification</name>
        <briefdescription>
<para>return the configuration specification of the active dofs </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="429"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ab0cb7626edf9be09a3b713366439a2c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>virtual const std::vector&lt;int&gt;&amp; GetActiveDOFIndices</definition>
        <argsstring>() const </argsstring>
        <name>GetActiveDOFIndices</name>
        <briefdescription>
<para>Return the set of active dof indices of the joints. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="432"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1aab0d7f45072809314846897b948e02af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>virtual Vector GetAffineRotationAxis</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineRotationAxis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="434" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="434" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1add14e0337082d480614feaae1e213a68" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineTranslationLimits</definition>
        <argsstring>(const Vector &amp;lower, const Vector &amp;upper)</argsstring>
        <name>SetAffineTranslationLimits</name>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="437"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1aef35115a5319c141ba26fa4c7db5d10d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineRotationAxisLimits</definition>
        <argsstring>(const Vector &amp;lower, const Vector &amp;upper)</argsstring>
        <name>SetAffineRotationAxisLimits</name>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="438"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a73d18528595acfccfb5dac1b917c931d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineRotation3DLimits</definition>
        <argsstring>(const Vector &amp;lower, const Vector &amp;upper)</argsstring>
        <name>SetAffineRotation3DLimits</name>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="439"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a5b49831e704d28f7228dbc317add6efc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineRotationQuatLimits</definition>
        <argsstring>(const Vector &amp;quatangle)</argsstring>
        <name>SetAffineRotationQuatLimits</name>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>quatangle</declname>
        </param>
        <briefdescription>
<para>sets the quaternion limits using a starting rotation and the max angle deviation from it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>quatangle</parametername>
</parameternamelist>
<parameterdescription>
<para>quaternion_start * max_angle. acos(q dot quaternion_start) &lt;= max_angle. If max_angle is 0, then will take the current transform of the robot </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="445"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a6c09d769ec334623646521b39565d95e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineTranslationMaxVels</definition>
        <argsstring>(const Vector &amp;vels)</argsstring>
        <name>SetAffineTranslationMaxVels</name>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>vels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="446"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a9540e66fefbfbb2c4cbe3fb0614be6fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineRotationAxisMaxVels</definition>
        <argsstring>(const Vector &amp;vels)</argsstring>
        <name>SetAffineRotationAxisMaxVels</name>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>vels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="447"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1aca639b7d618f16865b23db95c94e78e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineRotation3DMaxVels</definition>
        <argsstring>(const Vector &amp;vels)</argsstring>
        <name>SetAffineRotation3DMaxVels</name>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>vels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="448"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ab7a68cd681ffee1ae12c186539971a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineRotationQuatMaxVels</definition>
        <argsstring>(dReal vels)</argsstring>
        <name>SetAffineRotationQuatMaxVels</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
          <declname>vels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="449"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a8c9f1eb0dddfebee4c61f1919f01d377" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineTranslationResolution</definition>
        <argsstring>(const Vector &amp;resolution)</argsstring>
        <name>SetAffineTranslationResolution</name>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="450"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ab1ab13a4085dec73ce772f138c1f299f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineRotationAxisResolution</definition>
        <argsstring>(const Vector &amp;resolution)</argsstring>
        <name>SetAffineRotationAxisResolution</name>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="451"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ad6392e792d3f470609ef7c30f1bcf21a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineRotation3DResolution</definition>
        <argsstring>(const Vector &amp;resolution)</argsstring>
        <name>SetAffineRotation3DResolution</name>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="452"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a8622f54ae85efd7c567931e1d38e3528" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineRotationQuatResolution</definition>
        <argsstring>(dReal resolution)</argsstring>
        <name>SetAffineRotationQuatResolution</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="453"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1af0424e83f813d7a0ee9f81f0681850ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineTranslationWeights</definition>
        <argsstring>(const Vector &amp;weights)</argsstring>
        <name>SetAffineTranslationWeights</name>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="454"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a423aba3715d11bb70958bf2ee4bec667" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineRotationAxisWeights</definition>
        <argsstring>(const Vector &amp;weights)</argsstring>
        <name>SetAffineRotationAxisWeights</name>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="455"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a44c44a092857697901d3398fae0a4662" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineRotation3DWeights</definition>
        <argsstring>(const Vector &amp;weights)</argsstring>
        <name>SetAffineRotation3DWeights</name>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="456"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a215b8d8f4ee61d9928e8f6526e09961f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetAffineRotationQuatWeights</definition>
        <argsstring>(dReal weights)</argsstring>
        <name>SetAffineRotationQuatWeights</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="457"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ac09ced409b9d1f3d8f02001b7872b67d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetAffineTranslationLimits</definition>
        <argsstring>(Vector &amp;lower, Vector &amp;upper) const </argsstring>
        <name>GetAffineTranslationLimits</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="459"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ac115b354d225eca0e1709514df2c0b84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetAffineRotationAxisLimits</definition>
        <argsstring>(Vector &amp;lower, Vector &amp;upper) const </argsstring>
        <name>GetAffineRotationAxisLimits</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="460"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a9a7744d25dfee40289c3627c92600164" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetAffineRotation3DLimits</definition>
        <argsstring>(Vector &amp;lower, Vector &amp;upper) const </argsstring>
        <name>GetAffineRotation3DLimits</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="461"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ab4bb2e38267520019e902a1a5d4abbd3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>virtual Vector GetAffineRotationQuatLimits</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineRotationQuatLimits</name>
        <briefdescription>
<para>gets the quaternion limits </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>quatangle</parametername>
</parameternamelist>
<parameterdescription>
<para>quaternion_start * max_angle. acos(q dot quaternion_start) &lt;= max_angle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="466" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="466" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a7e786845d8bf9466a6e247aebd5c5b0a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>virtual Vector GetAffineTranslationMaxVels</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineTranslationMaxVels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="469" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="469" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1abf108494f261bedf28da4c47dd1d1b67" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>virtual Vector GetAffineRotationAxisMaxVels</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineRotationAxisMaxVels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="472" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="472" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a65da250f4afc4bc8bf1a806a7ec3770e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>virtual Vector GetAffineRotation3DMaxVels</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineRotation3DMaxVels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="475" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="475" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a0ee99bcf088bc54fa0c603bac5b382f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
        <definition>virtual dReal GetAffineRotationQuatMaxVels</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineRotationQuatMaxVels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="478" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="478" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ae6354aaf3bdd8bc1e74b41406fa57bdc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>virtual Vector GetAffineTranslationResolution</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineTranslationResolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="481" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="481" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a66601f4bb3a81034eae0c679f82ed617" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>virtual Vector GetAffineRotationAxisResolution</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineRotationAxisResolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="484" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="484" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a6025846422a2a51036074376dc82c041" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>virtual Vector GetAffineRotation3DResolution</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineRotation3DResolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="487" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="487" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ac2662710c28c1572b162274e2f11960c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
        <definition>virtual dReal GetAffineRotationQuatResolution</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineRotationQuatResolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="490" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="490" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a5f4ceb6a03fd622bc1a6c91129ab3d18" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>virtual Vector GetAffineTranslationWeights</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineTranslationWeights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="493" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="493" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1af9be1867b964acf453eb90ff928984b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>virtual Vector GetAffineRotationAxisWeights</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineRotationAxisWeights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="496" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="496" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ac778428d71865bf655e99a9bd4bb8f10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>virtual Vector GetAffineRotation3DWeights</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineRotation3DWeights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="499" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="499" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1aaa97c9f414114e097817403bebc69a65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
        <definition>virtual dReal GetAffineRotationQuatWeights</definition>
        <argsstring>() const </argsstring>
        <name>GetAffineRotationQuatWeights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="502" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="502" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a61b3cab18397704d70fb5ffa52f0b6b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetActiveDOFValues</definition>
        <argsstring>(const std::vector&lt; dReal &gt; &amp;values, bool bCheckLimits=false)</argsstring>
        <name>SetActiveDOFValues</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bCheckLimits</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="506"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a4ff9c8d01c002b80c3a28d131b0542ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetActiveDOFValues</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const </argsstring>
        <name>GetActiveDOFValues</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="507"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a970f78a67cf4d831562471e688a10e2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetActiveDOFVelocities</definition>
        <argsstring>(const std::vector&lt; dReal &gt; &amp;velocities, bool bCheckLimits=false)</argsstring>
        <name>SetActiveDOFVelocities</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>velocities</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bCheckLimits</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="508"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a15eab9433976f9b667512c8d8fab379f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetActiveDOFVelocities</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;velocities) const </argsstring>
        <name>GetActiveDOFVelocities</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>velocities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="509"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ad1720281ce1b90117f2ea608994cd0c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetActiveDOFLimits</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;lower, std::vector&lt; dReal &gt; &amp;upper) const </argsstring>
        <name>GetActiveDOFLimits</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="510"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a79d75124b60a2e5c5896824036b83c39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetActiveDOFResolutions</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const </argsstring>
        <name>GetActiveDOFResolutions</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="511"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ad4d3771c5eb2f888d99c56e9a56cf2fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetActiveDOFWeights</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const </argsstring>
        <name>GetActiveDOFWeights</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="512"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a8af7cfd13ee38f54b023141ecc09f598" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetActiveDOFVelocityLimits</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const </argsstring>
        <name>GetActiveDOFVelocityLimits</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="513"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a430512c9498310ee59516bad6735d300" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetActiveDOFAccelerationLimits</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const </argsstring>
        <name>GetActiveDOFAccelerationLimits</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="514"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a0f6e2659ed68f68330cfae433ea46f11" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void GetActiveDOFMaxVel</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const </argsstring>
        <name>GetActiveDOFMaxVel</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="515" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="515" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ad9283ddebe5ce968918aeeb513248382" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void GetActiveDOFMaxAccel</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;v) const </argsstring>
        <name>GetActiveDOFMaxAccel</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="518" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="518" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a13c032494357fa0f2333e73d47322020" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SubtractActiveDOFValues</definition>
        <argsstring>(std::vector&lt; dReal &gt; &amp;q1, const std::vector&lt; dReal &gt; &amp;q2) const </argsstring>
        <name>SubtractActiveDOFValues</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>q2</declname>
        </param>
        <briefdescription>
<para>computes the configuration difference q1-q2 and stores it in q1. Takes into account joint limits and circular joints </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="523"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1aff994b4316d3a31304ee13227e72322b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetActiveManipulator</definition>
        <argsstring>(int index)</argsstring>
        <name>SetActiveManipulator</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets the active manipulator of the robot <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>manipulator index </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="527"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a479c1b360a34fdc516369e1c3dbb3dc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetActiveManipulator</definition>
        <argsstring>(const std::string &amp;manipname)</argsstring>
        <name>SetActiveManipulator</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>manipname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets the active manipulator of the robot <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>manipname</parametername>
</parameternamelist>
<parameterdescription>
<para>manipulator name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="530"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1af5782c8413c068ddc9f471a8e4f48a3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classOpenRAVE_1_1RobotBase_1ab276a11f11a647b5b79ea316fd23651d" kindref="member">ManipulatorPtr</ref></type>
        <definition>virtual ManipulatorPtr GetActiveManipulator</definition>
        <argsstring>()</argsstring>
        <name>GetActiveManipulator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="531"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ad1f13a31373ebba2b4853f73f5125d96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classOpenRAVE_1_1RobotBase_1acd0ffcc71189ba5106c0481f70ae94e0" kindref="member">ManipulatorConstPtr</ref></type>
        <definition>virtual ManipulatorConstPtr GetActiveManipulator</definition>
        <argsstring>() const </argsstring>
        <name>GetActiveManipulator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="532"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a1b663dc6bca08704a562fdc74e25dfd0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int GetActiveManipulatorIndex</definition>
        <argsstring>() const </argsstring>
        <name>GetActiveManipulatorIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>index of the current active manipulator </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="534" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="534" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a53f7fcf5ff3f270a12fd9714d760bc58" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SetMotion</definition>
        <argsstring>(TrajectoryBaseConstPtr ptraj) RAVE_DEPRECATED</argsstring>
        <name>SetMotion</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ae4a194e7d8dcb23b1acad4ff9f84ad49" kindref="member">TrajectoryBaseConstPtr</ref></type>
          <declname>ptraj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000044"><xreftitle>Deprecated</xreftitle><xrefdescription><para>(11/10/04) send directly through controller </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="539"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a4dfa799940ac67f7c409053aeda11346" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SetActiveMotion</definition>
        <argsstring>(TrajectoryBaseConstPtr ptraj) RAVE_DEPRECATED</argsstring>
        <name>SetActiveMotion</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ae4a194e7d8dcb23b1acad4ff9f84ad49" kindref="member">TrajectoryBaseConstPtr</ref></type>
          <declname>ptraj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000045"><xreftitle>Deprecated</xreftitle><xrefdescription><para>(11/10/04) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="542"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1afae0e0c1c67c2b5295255e684197bb0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SetActiveMotion</definition>
        <argsstring>(TrajectoryBaseConstPtr ptraj, dReal fSpeed) RAVE_DEPRECATED</argsstring>
        <name>SetActiveMotion</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ae4a194e7d8dcb23b1acad4ff9f84ad49" kindref="member">TrajectoryBaseConstPtr</ref></type>
          <declname>ptraj</declname>
        </param>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
          <declname>fSpeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000046"><xreftitle>Deprecated</xreftitle><xrefdescription><para>(11/10/04) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="545"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a93636f2303581a0614c9520d3351afc2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CalculateActiveJacobian</definition>
        <argsstring>(int index, const Vector &amp;offset, boost::multi_array&lt; dReal, 2 &gt; &amp;mjacobian) const </argsstring>
        <name>CalculateActiveJacobian</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>boost::multi_array&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref>, 2 &gt; &amp;</type>
          <declname>mjacobian</declname>
        </param>
        <briefdescription>
<para>Calculates the translation jacobian with respect to a link. </para>        </briefdescription>
        <detaileddescription>
<para>Calculates the partial differentials for the active degrees of freedom that in the path from the root node to _veclinks[index] (doesn&apos;t touch the rest of the values). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mjacobian</parametername>
</parameternamelist>
<parameterdescription>
<para>a 3 x ActiveDOF matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="554"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1aac4c333a2aaf16a25405efa53c84ead8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CalculateActiveJacobian</definition>
        <argsstring>(int index, const Vector &amp;offset, std::vector&lt; dReal &gt; &amp;pfJacobian) const </argsstring>
        <name>CalculateActiveJacobian</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>pfJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="555"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1adbcd635f193bc643498b99eab2ba0357" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CalculateActiveRotationJacobian</definition>
        <argsstring>(int index, const Vector &amp;qInitialRot, boost::multi_array&lt; dReal, 2 &gt; &amp;vjacobian) const </argsstring>
        <name>CalculateActiveRotationJacobian</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>qInitialRot</declname>
        </param>
        <param>
          <type>boost::multi_array&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref>, 2 &gt; &amp;</type>
          <declname>vjacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="557"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a06b2f47ecf6fd9d395cf16f24cd102f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CalculateActiveRotationJacobian</definition>
        <argsstring>(int index, const Vector &amp;qInitialRot, std::vector&lt; dReal &gt; &amp;pfJacobian) const </argsstring>
        <name>CalculateActiveRotationJacobian</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref> &amp;</type>
          <declname>qInitialRot</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>pfJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="558"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a86ad4866d727f58a05ffd898ff411ee0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CalculateActiveAngularVelocityJacobian</definition>
        <argsstring>(int index, boost::multi_array&lt; dReal, 2 &gt; &amp;mjacobian) const </argsstring>
        <name>CalculateActiveAngularVelocityJacobian</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>boost::multi_array&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref>, 2 &gt; &amp;</type>
          <declname>mjacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the angular velocity jacobian of a specified link about the axes of world coordinates.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>of the link that the rotation is attached to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mjacobian</parametername>
</parameternamelist>
<parameterdescription>
<para>3x(num ACTIVE DOF) matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="565"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a2d4889bd0db8c8aad99c992b13cc2db7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void CalculateActiveAngularVelocityJacobian</definition>
        <argsstring>(int index, std::vector&lt; dReal &gt; &amp;pfJacobian) const </argsstring>
        <name>CalculateActiveAngularVelocityJacobian</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>pfJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="566"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a0dfdf7668c68c2860a27983804e90c8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::set&lt; int &gt; &amp;</type>
        <definition>virtual const std::set&lt;int&gt;&amp; GetNonAdjacentLinks</definition>
        <argsstring>(int adjacentoptions=0) const </argsstring>
        <name>GetNonAdjacentLinks</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1a0dfdf7668c68c2860a27983804e90c8b">GetNonAdjacentLinks</reimplements>
        <param>
          <type>int</type>
          <declname>adjacentoptions</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>return all possible link pairs that could get in collision. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adjacentoptions</parametername>
</parameternamelist>
<parameterdescription>
<para>a bitmask of <ref refid="classOpenRAVE_1_1KinBody_1ace43b2d7d920eeb2eb69299a4784b040" kindref="member">AdjacentOptions</ref> values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="568"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Grabbing Bodies</header>
      <description><para><anchor id="_1amgrpd50fc6ccc37aa4de8c2f9c816753d58c"/> A grabbed body becomes part of the robot and its relative pose with respect to a robot&apos;s link will be fixed. <ref refid="classOpenRAVE_1_1KinBody_1a1a340c6aa418a10fcf9847474376b1ba" kindref="member">KinBody::_AttachBody</ref> is called for every grabbed body in order to make the grabbed body a part of the robot. Once grabbed, the inter-collisions between the robot and the body are regarded as self-collisions; any outside collisions of the body and the environment are regarded as environment collisions with the robot. </para></description>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1abd0375cf84ce804abe302d3e6faddf76" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Grab</definition>
        <argsstring>(KinBodyPtr body, LinkPtr pRobotLinkToGrabWith, const std::set&lt; int &gt; &amp;setRobotLinksToIgnore)</argsstring>
        <name>Grab</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1abdcbe7a0abc56f7fd090dbd298a5a44c" kindref="member">KinBodyPtr</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="classOpenRAVE_1_1KinBody_1a8dea7b02ac1900156e6776d795c476c3" kindref="member">LinkPtr</ref></type>
          <declname>pRobotLinkToGrabWith</declname>
        </param>
        <param>
          <type>const std::set&lt; int &gt; &amp;</type>
          <declname>setRobotLinksToIgnore</declname>
        </param>
        <briefdescription>
<para>Grab the body with the specified link. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">body</parametername>
</parameternamelist>
<parameterdescription>
<para>the body to be grabbed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pRobotLinkToGrabWith</parametername>
</parameternamelist>
<parameterdescription>
<para>the link of this robot that will perform the grab </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">setRobotLinksToIgnore</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional robot link indices that collision checker ignore when checking collisions between the grabbed body and the robot. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful and body is grabbed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="589"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a52c7267f79b4d09c583fce816a8a31df" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Grab</definition>
        <argsstring>(KinBodyPtr body, LinkPtr pRobotLinkToGrabWith)</argsstring>
        <name>Grab</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1abdcbe7a0abc56f7fd090dbd298a5a44c" kindref="member">KinBodyPtr</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="classOpenRAVE_1_1KinBody_1a8dea7b02ac1900156e6776d795c476c3" kindref="member">LinkPtr</ref></type>
          <declname>pRobotLinkToGrabWith</declname>
        </param>
        <briefdescription>
<para>Grab a body with the specified link. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">body</parametername>
</parameternamelist>
<parameterdescription>
<para>the body to be grabbed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pRobotLinkToGrabWith</parametername>
</parameternamelist>
<parameterdescription>
<para>the link of this robot that will perform the grab </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful and body is grabbed/ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="597"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a922b8a6c3e70c59f28eb327b3c7f71f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Grab</definition>
        <argsstring>(KinBodyPtr body, const std::set&lt; int &gt; &amp;setRobotLinksToIgnore)</argsstring>
        <name>Grab</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1abdcbe7a0abc56f7fd090dbd298a5a44c" kindref="member">KinBodyPtr</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type>const std::set&lt; int &gt; &amp;</type>
          <declname>setRobotLinksToIgnore</declname>
        </param>
        <briefdescription>
<para>Grabs the body with the active manipulator&apos;s end effector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">body</parametername>
</parameternamelist>
<parameterdescription>
<para>the body to be grabbed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">setRobotLinksToIgnore</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional robot link indices that collision checker ignore when checking collisions between the grabbed body and the robot. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful and body is grabbed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="606"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a233feb0353ba90cb2e60fea75043f364" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Grab</definition>
        <argsstring>(KinBodyPtr body)</argsstring>
        <name>Grab</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1abdcbe7a0abc56f7fd090dbd298a5a44c" kindref="member">KinBodyPtr</ref></type>
          <declname>body</declname>
        </param>
        <briefdescription>
<para>Grabs the body with the active manipulator&apos;s end effector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">body</parametername>
</parameternamelist>
<parameterdescription>
<para>the body to be grabbed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful and body is grabbed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="613"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ada9b12e106deb259af6c3f9f2d8589c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Release</definition>
        <argsstring>(KinBodyPtr body)</argsstring>
        <name>Release</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1abdcbe7a0abc56f7fd090dbd298a5a44c" kindref="member">KinBodyPtr</ref></type>
          <declname>body</declname>
        </param>
        <briefdescription>
<para>Release the body if grabbed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>body to release </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="619"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a786014c730e245029cf6d944eb65ee2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void ReleaseAllGrabbed</definition>
        <argsstring>()</argsstring>
        <name>ReleaseAllGrabbed</name>
        <briefdescription>
<para>Release all grabbed bodies. </para>        </briefdescription>
        <detaileddescription>
<para>release all bodies </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="622"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ac96a4eead413884c18f29cbf299ede3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void RegrabAll</definition>
        <argsstring>()</argsstring>
        <name>RegrabAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Releases and grabs all bodies, has the effect of recalculating all the initial collision with the bodies.</para><para>This has the effect of resetting the current collisions any grabbed body makes with the robot into an ignore list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="628"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a10ff30e0c1c04abfcbf5ce480a82330f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classOpenRAVE_1_1KinBody_1a8dea7b02ac1900156e6776d795c476c3" kindref="member">LinkPtr</ref></type>
        <definition>virtual LinkPtr IsGrabbing</definition>
        <argsstring>(KinBodyConstPtr body) const </argsstring>
        <name>IsGrabbing</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a7ad9b63f36f8be408ec6e70ebe8130f7" kindref="member">KinBodyConstPtr</ref></type>
          <declname>body</declname>
        </param>
        <briefdescription>
<para>return the robot link that is currently grabbing the body. If the body is not grabbed, will return an empty pointer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">body</parametername>
</parameternamelist>
<parameterdescription>
<para>the body to check </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="634"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a39f91578d76bc2c4f2182aeb6c49a2ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetGrabbed</definition>
        <argsstring>(std::vector&lt; KinBodyPtr &gt; &amp;vbodies) const </argsstring>
        <name>GetGrabbed</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1abdcbe7a0abc56f7fd090dbd298a5a44c" kindref="member">KinBodyPtr</ref> &gt; &amp;</type>
          <declname>vbodies</declname>
        </param>
        <briefdescription>
<para>gets all grabbed bodies of the robot </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">vbodies</parametername>
</parameternamelist>
<parameterdescription>
<para>filled with the grabbed bodies </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="640"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classOpenRAVE_1_1RobotBase_1ab276a11f11a647b5b79ea316fd23651d" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classOpenRAVE_1_1RobotBase_1_1Manipulator" kindref="compound">RobotBase::Manipulator</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;RobotBase::Manipulator&gt; ManipulatorPtr</definition>
        <argsstring></argsstring>
        <name>ManipulatorPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="258" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOpenRAVE_1_1RobotBase_1acd0ffcc71189ba5106c0481f70ae94e0" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classOpenRAVE_1_1RobotBase_1_1Manipulator" kindref="compound">RobotBase::Manipulator</ref> const  &gt;</type>
        <definition>typedef boost::shared_ptr&lt;RobotBase::Manipulator const&gt; ManipulatorConstPtr</definition>
        <argsstring></argsstring>
        <name>ManipulatorConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="259" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOpenRAVE_1_1RobotBase_1a91826a3d2c08d5ce91ba838cdf5409d0" prot="public" static="no">
        <type>boost::weak_ptr&lt; <ref refid="classOpenRAVE_1_1RobotBase_1_1Manipulator" kindref="compound">RobotBase::Manipulator</ref> &gt;</type>
        <definition>typedef boost::weak_ptr&lt;RobotBase::Manipulator&gt; ManipulatorWeakPtr</definition>
        <argsstring></argsstring>
        <name>ManipulatorWeakPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="260" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOpenRAVE_1_1RobotBase_1a4e55f7af7b88c8ceef77a83751e3ced8" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classOpenRAVE_1_1RobotBase_1_1AttachedSensor" kindref="compound">RobotBase::AttachedSensor</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;RobotBase::AttachedSensor&gt; AttachedSensorPtr</definition>
        <argsstring></argsstring>
        <name>AttachedSensorPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="319" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOpenRAVE_1_1RobotBase_1a3cacadf1d673d6ab3678d768ccbaa8e3" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classOpenRAVE_1_1RobotBase_1_1AttachedSensor" kindref="compound">RobotBase::AttachedSensor</ref> const  &gt;</type>
        <definition>typedef boost::shared_ptr&lt;RobotBase::AttachedSensor const&gt; AttachedSensorConstPtr</definition>
        <argsstring></argsstring>
        <name>AttachedSensorConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="320" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a05dfd2aea199106122f1491d7cbd70eb" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classOpenRAVE_1_1RobotBase_1_1Grabbed" kindref="compound">Grabbed</ref> &gt;</type>
        <definition>std::vector&lt;Grabbed&gt; _vGrabbedBodies</definition>
        <argsstring></argsstring>
        <name>_vGrabbedBodies</name>
        <briefdescription>
<para>vector of grabbed bodies </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="717" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1affad71c6cc8ac660314a5e10e4caae34" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classOpenRAVE_1_1RobotBase_1ab276a11f11a647b5b79ea316fd23651d" kindref="member">ManipulatorPtr</ref> &gt;</type>
        <definition>std::vector&lt;ManipulatorPtr&gt; _vecManipulators</definition>
        <argsstring></argsstring>
        <name>_vecManipulators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1RobotBase_1a93fa4dbd84cc30d4dae78ee20d816ce3" kindref="member">GetManipulators</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="720" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1aa111f44aea6f2b407af5ed096cd48edb" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int _nActiveManip</definition>
        <argsstring></argsstring>
        <name>_nActiveManip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1RobotBase_1a1b663dc6bca08704a562fdc74e25dfd0" kindref="member">GetActiveManipulatorIndex</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="721" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="721" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1aac98310b73ec888db282a3ca58db245a" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classOpenRAVE_1_1RobotBase_1a4e55f7af7b88c8ceef77a83751e3ced8" kindref="member">AttachedSensorPtr</ref> &gt;</type>
        <definition>std::vector&lt;AttachedSensorPtr&gt; _vecSensors</definition>
        <argsstring></argsstring>
        <name>_vecSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1RobotBase_1a12b17e5a27c796d6c877cc41a97af6f1" kindref="member">GetAttachedSensors</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="723" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="723" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a5ca41ccc29e1263372aa5b2a1aad5a1a" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; _vActiveDOFIndices</definition>
        <argsstring></argsstring>
        <name>_vActiveDOFIndices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="725" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1aa62afc985699a04cd80556dff9f3a1ee" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; _vAllDOFIndices</definition>
        <argsstring></argsstring>
        <name>_vAllDOFIndices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="725" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1ac63bdd45696479f91bdf99a3d876226f" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector vActvAffineRotationAxis</definition>
        <argsstring></argsstring>
        <name>vActvAffineRotationAxis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="726" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a56f7252f6901d68bd1d637800120ea24" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int _nActiveDOF</definition>
        <argsstring></argsstring>
        <name>_nActiveDOF</name>
        <briefdescription>
<para>Active degrees of freedom; if -1, use robot dofs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="727" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="727" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a335c90fceb6b2b3efd23f357b9071ff2" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int _nAffineDOFs</definition>
        <argsstring></argsstring>
        <name>_nAffineDOFs</name>
        <briefdescription>
<para>dofs describe what affine transformations are allowed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="728" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="728" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a85b79c22e259d861cabb3458e667ecd1" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vTranslationLowerLimits</definition>
        <argsstring></argsstring>
        <name>_vTranslationLowerLimits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="730" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a2d5508231809659fbcd6222734b64f39" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vTranslationUpperLimits</definition>
        <argsstring></argsstring>
        <name>_vTranslationUpperLimits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="730" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a22a36063212761b819040690bdee0114" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vTranslationMaxVels</definition>
        <argsstring></argsstring>
        <name>_vTranslationMaxVels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="730" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1ab2071adef8118c1187d1695411ae2be3" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vTranslationResolutions</definition>
        <argsstring></argsstring>
        <name>_vTranslationResolutions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="730" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a8e665d30ea757c958f5c4343d53fb841" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vTranslationWeights</definition>
        <argsstring></argsstring>
        <name>_vTranslationWeights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="730" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1aa2c84fbfca1619fcd03a3085432c7489" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vRotationAxisLowerLimits</definition>
        <argsstring></argsstring>
        <name>_vRotationAxisLowerLimits</name>
        <briefdescription>
<para>the xyz components are used if the rotation axis is solely about X,Y,or Z; otherwise the W component is used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="732" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="732" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1aa4e94393cf6452cc1a4a1ec45ebca988" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vRotationAxisUpperLimits</definition>
        <argsstring></argsstring>
        <name>_vRotationAxisUpperLimits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="732" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="732" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a9706ee5191c77dccdc5bfd0851b91efb" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vRotationAxisMaxVels</definition>
        <argsstring></argsstring>
        <name>_vRotationAxisMaxVels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="732" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="732" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a127ef8ede922d0d590b40ab721c8f9f6" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vRotationAxisResolutions</definition>
        <argsstring></argsstring>
        <name>_vRotationAxisResolutions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="732" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="732" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a4d719c1e75e118116f4a7170c89912cb" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vRotationAxisWeights</definition>
        <argsstring></argsstring>
        <name>_vRotationAxisWeights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="732" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="732" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a1fe8c40c3cc35c7ba90de8529498f875" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vRotation3DLowerLimits</definition>
        <argsstring></argsstring>
        <name>_vRotation3DLowerLimits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="733" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a9911b4b5098a06edd96afb722c888d25" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vRotation3DUpperLimits</definition>
        <argsstring></argsstring>
        <name>_vRotation3DUpperLimits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="733" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1ab2272d50eeaf820a84f9fbd3a7089ee6" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vRotation3DMaxVels</definition>
        <argsstring></argsstring>
        <name>_vRotation3DMaxVels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="733" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1ae4a0dfaaac86b5b369705f12398e25bf" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vRotation3DResolutions</definition>
        <argsstring></argsstring>
        <name>_vRotation3DResolutions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="733" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1acae05c77af91519008748a69fa0eb65d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vRotation3DWeights</definition>
        <argsstring></argsstring>
        <name>_vRotation3DWeights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="733" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1ae9af75dff30b196d4281a03b3a623027" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref></type>
        <definition>Vector _vRotationQuatLimitStart</definition>
        <argsstring></argsstring>
        <name>_vRotationQuatLimitStart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="734" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="734" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a6d609e3285f66ef12a6fe4e564b434ac" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
        <definition>dReal _fQuatLimitMaxAngle</definition>
        <argsstring></argsstring>
        <name>_fQuatLimitMaxAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="735" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="735" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1afbecdc66fb354842fc0e0aba30fdd575" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
        <definition>dReal _fQuatMaxAngleVelocity</definition>
        <argsstring></argsstring>
        <name>_fQuatMaxAngleVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="735" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="735" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a04d4e50096860d448e3ab08bbe4e1d8f" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
        <definition>dReal _fQuatAngleResolution</definition>
        <argsstring></argsstring>
        <name>_fQuatAngleResolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="735" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="735" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a9ad5ce53f284a3aec9d3004d0950fd39" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
        <definition>dReal _fQuatAngleWeight</definition>
        <argsstring></argsstring>
        <name>_fQuatAngleWeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="735" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="735" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a32694b3450e609ea9b2dae741f3d407d" prot="protected" static="no" mutable="no">
        <type><ref refid="classOpenRAVE_1_1ConfigurationSpecification" kindref="compound">ConfigurationSpecification</ref></type>
        <definition>ConfigurationSpecification _activespec</definition>
        <argsstring></argsstring>
        <name>_activespec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="737" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="737" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1a73df209d41bd817f794e33c92070e904" prot="private" static="no" mutable="yes">
        <type>std::string</type>
        <definition>std::string __hashrobotstructure</definition>
        <argsstring></argsstring>
        <name>__hashrobotstructure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="745" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="745" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenRAVE_1_1RobotBase_1ade94794d66d05a03b9f702a64c9a5e5a" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt;</type>
        <definition>std::vector&lt;dReal&gt; _vTempRobotJoints</definition>
        <argsstring></argsstring>
        <name>_vTempRobotJoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="746" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="746" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classOpenRAVE_1_1RobotBase_1a4575c375ffe3c6d6321e3efaf793e032" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class RaveDatabase</definition>
        <argsstring></argsstring>
        <name>RaveDatabase</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1a4575c375ffe3c6d6321e3efaf793e032">RaveDatabase</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="765" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="765" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1af58cfe00e477519413c05a623be383d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~RobotBase</definition>
        <argsstring>()</argsstring>
        <name>~RobotBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="350"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a941c8e8d2c5aa963d76aef113f19d835" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1a941c8e8d2c5aa963d76aef113f19d835">Destroy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="357"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ae67a1ee5e11749340bfbca5bd6749424" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool InitFromFile</definition>
        <argsstring>(const std::string &amp;filename, const AttributesList &amp;atts=AttributesList()) RAVE_DEPRECATED</argsstring>
        <name>InitFromFile</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1ae67a1ee5e11749340bfbca5bd6749424">InitFromFile</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1a7372895c7fd9541aa829987c3eb9aaf9" kindref="member">AttributesList</ref> &amp;</type>
          <declname>atts</declname>
          <defval><ref refid="namespaceOpenRAVE_1a7372895c7fd9541aa829987c3eb9aaf9" kindref="member">AttributesList</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000040"><xreftitle>Deprecated</xreftitle><xrefdescription><para>(11/02/18) </para></xrefdescription></xrefsect><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1EnvironmentBase_1a93df9cb2035fd4489282e9fbe0f96b93" kindref="member">EnvironmentBase::ReadRobotXMLFile</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="360"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a3f81f529c6959894555ad8841a134431" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool InitFromData</definition>
        <argsstring>(const std::string &amp;data, const AttributesList &amp;atts=AttributesList()) RAVE_DEPRECATED</argsstring>
        <name>InitFromData</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1a3f81f529c6959894555ad8841a134431">InitFromData</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1a7372895c7fd9541aa829987c3eb9aaf9" kindref="member">AttributesList</ref> &amp;</type>
          <declname>atts</declname>
          <defval><ref refid="namespaceOpenRAVE_1a7372895c7fd9541aa829987c3eb9aaf9" kindref="member">AttributesList</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000041"><xreftitle>Deprecated</xreftitle><xrefdescription><para>(11/02/18) </para></xrefdescription></xrefsect><simplesect kind="see"><para><ref refid="classOpenRAVE_1_1EnvironmentBase_1ab4facbc2ca164d0ffc5842fd898e682c" kindref="member">EnvironmentBase::ReadRobotXMLData</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="362"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a93fa4dbd84cc30d4dae78ee20d816ce3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="classOpenRAVE_1_1RobotBase_1ab276a11f11a647b5b79ea316fd23651d" kindref="member">ManipulatorPtr</ref> &gt; &amp;</type>
        <definition>virtual std::vector&lt;ManipulatorPtr&gt;&amp; GetManipulators</definition>
        <argsstring>()</argsstring>
        <name>GetManipulators</name>
        <briefdescription>
<para>Returns the manipulators of the robot. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="365" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="365" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a12b17e5a27c796d6c877cc41a97af6f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="classOpenRAVE_1_1RobotBase_1a4e55f7af7b88c8ceef77a83751e3ced8" kindref="member">AttachedSensorPtr</ref> &gt; &amp;</type>
        <definition>virtual std::vector&lt;AttachedSensorPtr&gt;&amp; GetAttachedSensors</definition>
        <argsstring>()</argsstring>
        <name>GetAttachedSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="369" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="369" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ab503f57fc0d435881e77670eccd73bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetDOFValues</definition>
        <argsstring>(const std::vector&lt; dReal &gt; &amp;vJointValues, bool bCheckLimits=false)</argsstring>
        <name>SetDOFValues</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1a30ca49e63e7794762a374f53585d3b8e">SetDOFValues</reimplements>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checklimits</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sets the joint values of the robot. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>the values to set the joint angles (ordered by the dof indices)  checklimits if true, will excplicitly check the joint limits before setting the values. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="373"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a29fc1f1ba1cdb09f54eb8774bf010b08" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetDOFValues</definition>
        <argsstring>(const std::vector&lt; dReal &gt; &amp;vJointValues, const Transform &amp;transbase, bool bCheckLimits=false)</argsstring>
        <name>SetDOFValues</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1ad75a7828a47c91e1c572c111a6779fcd">SetDOFValues</reimplements>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref> &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ad7d44b5a2b65bf3c814d2983528b2e85" kindref="member">Transform</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checklimits</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sets the joint values and transformation of the body. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>the values to set the joint angles (ordered by the dof indices) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>represents the transformation of the first body.  checklimits if true, will excplicitly check the joint limits before setting the values. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="374"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a3c811c9f633c1c4347606fd13a4d4f02" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetLinkTransformations</definition>
        <argsstring>(const std::vector&lt; Transform &gt; &amp;vbodies)</argsstring>
        <name>SetLinkTransformations</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1ad005f2eda60cafaec07e183e9fbfe77d">SetLinkTransformations</reimplements>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceOpenRAVE_1ad7d44b5a2b65bf3c814d2983528b2e85" kindref="member">Transform</ref> &gt; &amp;</type>
          <declname>transforms</declname>
        </param>
        <briefdescription>
<para>sets the transformations of all the links at once </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="376"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ad19fd054ec0bb506ca08d1a7deaa005d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SetTransform</definition>
        <argsstring>(const Transform &amp;trans)</argsstring>
        <name>SetTransform</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1a92abef33e0bc4eca1756178c31e18645">SetTransform</reimplements>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ad7d44b5a2b65bf3c814d2983528b2e85" kindref="member">Transform</ref> &amp;</type>
          <declname>trans</declname>
        </param>
        <briefdescription>
<para>Transforms the robot and updates the attached sensors and grabbed bodies. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="379"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ab51d371d29d7947197b90d8e915de00f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SimulationStep</definition>
        <argsstring>(dReal fElapsedTime)</argsstring>
        <name>SimulationStep</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1ab51d371d29d7947197b90d8e915de00f">SimulationStep</reimplements>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref></type>
          <declname>fElapsedTime</declname>
        </param>
        <briefdescription>
<para>Simulate the robot and update the grabbed bodies and attached sensors. </para>        </briefdescription>
        <detaileddescription>
<para>Do not call SimulationStep for the attached sensors in this function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="647"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a3d555222cf7b02d592a0a31cef5d479d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CheckSelfCollision</definition>
        <argsstring>(CollisionReportPtr report=CollisionReportPtr()) const </argsstring>
        <name>CheckSelfCollision</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1a3d555222cf7b02d592a0a31cef5d479d">CheckSelfCollision</reimplements>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ae3a01279d893036b26d4bb1b74d3ef0f" kindref="member">CollisionReportPtr</ref></type>
          <declname>report</declname>
          <defval><ref refid="namespaceOpenRAVE_1ae3a01279d893036b26d4bb1b74d3ef0f" kindref="member">CollisionReportPtr</ref>()</defval>
        </param>
        <briefdescription>
<para>Check if body is self colliding. Links that are joined together are ignored. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>report</parametername>
</parameternamelist>
<parameterdescription>
<para>[optional] collision report </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="653"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ac0f7aeb30af9069736ec789db0bf75d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CheckLinkCollision</definition>
        <argsstring>(int ilinkindex, const Transform &amp;tlinktrans, CollisionReportPtr report=CollisionReportPtr())</argsstring>
        <name>CheckLinkCollision</name>
        <param>
          <type>int</type>
          <declname>ilinkindex</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceOpenRAVE_1ad7d44b5a2b65bf3c814d2983528b2e85" kindref="member">Transform</ref> &amp;</type>
          <declname>tlinktrans</declname>
        </param>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ae3a01279d893036b26d4bb1b74d3ef0f" kindref="member">CollisionReportPtr</ref></type>
          <declname>report</declname>
          <defval><ref refid="namespaceOpenRAVE_1ae3a01279d893036b26d4bb1b74d3ef0f" kindref="member">CollisionReportPtr</ref>()</defval>
        </param>
        <briefdescription>
<para>checks collision of a robot link with the surrounding environment. Attached/Grabbed bodies to this link are also checked for collision. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ilinkindex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the link to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tlinktrans</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform of the link to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">report</parametername>
</parameternamelist>
<parameterdescription>
<para>[optional] collision report </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="661"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1aadffdb83bc22dcdd5dd50c27d1bb5496" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Clone</definition>
        <argsstring>(InterfaceBaseConstPtr preference, int cloningoptions)</argsstring>
        <name>Clone</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1aadffdb83bc22dcdd5dd50c27d1bb5496">Clone</reimplements>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a98930a0f0fa346643e6694577adac990" kindref="member">InterfaceBaseConstPtr</ref></type>
          <declname>preference</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cloningoptions</declname>
        </param>
        <briefdescription>
<para>does not clone the grabbed bodies since it requires pointers from other bodies (that might not be initialized yet) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="664"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a38fa8d57d2eefc36568411a129c741d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool IsRobot</definition>
        <argsstring>() const </argsstring>
        <name>IsRobot</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1a38fa8d57d2eefc36568411a129c741d3">IsRobot</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if this body is derived from <ref refid="classOpenRAVE_1_1RobotBase" kindref="compound">RobotBase</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="667" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="667" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1ac3d3423a3fae6eb66bc8e0ff6fc23e3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void serialize</definition>
        <argsstring>(std::ostream &amp;o, int options) const </argsstring>
        <name>serialize</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1ac3d3423a3fae6eb66bc8e0ff6fc23e3e">serialize</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="671"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1afe87e86a10bb78f6653dcd1a4558f07a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::string &amp;</type>
        <definition>virtual const std::string&amp; GetRobotStructureHash</definition>
        <argsstring>() const </argsstring>
        <name>GetRobotStructureHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A md5 hash unique to the particular robot structure that involves manipulation and sensing components The serialization for the attached sensors will not involve any sensor specific properties (since they can change through calibration) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="675"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a52ee62fc6defb50ff79a59e41d141566" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceOpenRAVE_1a93f3c54acfadfefe33b745f7df0c81cf" kindref="member">ControllerBasePtr</ref></type>
        <definition>virtual ControllerBasePtr GetController</definition>
        <argsstring>() const </argsstring>
        <name>GetController</name>
        <briefdescription>
<para>gets the robot controller </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="678" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="678" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a8384a87dcfccbd3b27006c1769219c28" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SetController</definition>
        <argsstring>(ControllerBasePtr controller, const std::vector&lt; int &gt; &amp;dofindices, int nControlTransformation)</argsstring>
        <name>SetController</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a93f3c54acfadfefe33b745f7df0c81cf" kindref="member">ControllerBasePtr</ref></type>
          <declname>controller</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>dofindices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nControlTransformation</declname>
        </param>
        <briefdescription>
<para>set a controller for a robot </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pController</parametername>
</parameternamelist>
<parameterdescription>
<para>- if NULL, sets the controller of this robot to NULL. otherwise attemps to set the controller to this robot. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>- the argument list to pass when initializing the controller </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="685"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a4d4d9910820087bb1a0d916ca1bb0e5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SetController</definition>
        <argsstring>(ControllerBasePtr controller, const std::string &amp;args) RAVE_DEPRECATED</argsstring>
        <name>SetController</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a93f3c54acfadfefe33b745f7df0c81cf" kindref="member">ControllerBasePtr</ref></type>
          <declname>controller</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000047"><xreftitle>Deprecated</xreftitle><xrefdescription><para>(10/11/16) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="688" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="688" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a84070a927466aa5da331649c94b5e854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetFullTrajectoryFromActive</definition>
        <argsstring>(TrajectoryBasePtr pfulltraj, TrajectoryBaseConstPtr pActiveTraj, bool bOverwriteTransforms=true) RAVE_DEPRECATED</argsstring>
        <name>GetFullTrajectoryFromActive</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1aa3c159b394f2e4ec46ac49416a2acf17" kindref="member">TrajectoryBasePtr</ref></type>
          <declname>pfulltraj</declname>
        </param>
        <param>
          <type><ref refid="namespaceOpenRAVE_1ae4a194e7d8dcb23b1acad4ff9f84ad49" kindref="member">TrajectoryBaseConstPtr</ref></type>
          <declname>pActiveTraj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bOverwriteTransforms</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000048"><xreftitle>Deprecated</xreftitle><xrefdescription><para>(11/10/04) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="697"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1affeafe65e7c4094f282d273dedbf069b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>InterfaceType</type>
        <definition>static InterfaceType GetInterfaceTypeStatic</definition>
        <argsstring>()</argsstring>
        <name>GetInterfaceTypeStatic</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1affeafe65e7c4094f282d273dedbf069b">GetInterfaceTypeStatic</reimplements>
        <briefdescription>
<para>Return the static interface type this class points to (used for safe casting). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="353" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="353" bodyend="355"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a5e4d3cbc54d32ecf0c1485a7e84c17e2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RobotBase</definition>
        <argsstring>(EnvironmentBasePtr penv)</argsstring>
        <name>RobotBase</name>
        <param>
          <type><ref refid="namespaceOpenRAVE_1a652cd59d4cc9e3262d85e6776ec8ff9b" kindref="member">EnvironmentBasePtr</ref></type>
          <declname>penv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="700"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a7fe22e509f464393ca75f077e7a4178f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceOpenRAVE_1a5a9955dc6058f09c4462952478dfcf58" kindref="member">RobotBasePtr</ref></type>
        <definition>RobotBasePtr shared_robot</definition>
        <argsstring>()</argsstring>
        <name>shared_robot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="702" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="702" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a330667fffa952a49df84158db891dcb6" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceOpenRAVE_1ae14278c03739b5661d2542c17ca5db8e" kindref="member">RobotBaseConstPtr</ref></type>
        <definition>RobotBaseConstPtr shared_robot_const</definition>
        <argsstring>() const </argsstring>
        <name>shared_robot_const</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="705" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="705" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a3a10edb8cb573ac97bfed0e05dc2a29a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void _ComputeInternalInformation</definition>
        <argsstring>()</argsstring>
        <name>_ComputeInternalInformation</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1a3a10edb8cb573ac97bfed0e05dc2a29a">_ComputeInternalInformation</reimplements>
        <briefdescription>
<para>Proprocess the manipulators and sensors and build the specific robot hashes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="710"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a218a09068212db7bb35c7d4ce792e309" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void _ParametersChanged</definition>
        <argsstring>(int parameters)</argsstring>
        <name>_ParametersChanged</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1a218a09068212db7bb35c7d4ce792e309">_ParametersChanged</reimplements>
        <param>
          <type>int</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Called to notify the body that certain groups of parameters have been changed. </para>        </briefdescription>
        <detaileddescription>
<para>This function in calls every registers calledback that is tracking the changes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="715"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a8cb263e743125a89064bffacf7776bc5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void _UpdateGrabbedBodies</definition>
        <argsstring>()</argsstring>
        <name>_UpdateGrabbedBodies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="718"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a41869817d317b2f5d91d91d1213c668f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void _UpdateAttachedSensors</definition>
        <argsstring>()</argsstring>
        <name>_UpdateAttachedSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="719"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1af386ad7515f485242895df543029d333" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* GetHash</definition>
        <argsstring>() const </argsstring>
        <name>GetHash</name>
        <reimplements refid="classOpenRAVE_1_1KinBody_1af386ad7515f485242895df543029d333">GetHash</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="739" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="739" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="classOpenRAVE_1_1RobotBase_1a27ee132703f96edd3a71a8b3e6120447" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* GetKinBodyHash</definition>
        <argsstring>() const </argsstring>
        <name>GetKinBodyHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="742" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="742" bodyend="744"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><bold>[interface]</bold> A robot is a kinematic body that has attached manipulators, sensors, and controllers. <bold>If not specified, method is not multi-thread safe.</bold> See <ref refid="arch__robot" kindref="compound">Robot Concepts</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1749">
        <label>KinBody</label>
        <link refid="classOpenRAVE_1_1KinBody"/>
        <childnode refid="1750" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1748">
        <label>RobotBase</label>
        <link refid="classOpenRAVE_1_1RobotBase"/>
        <childnode refid="1749" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1750">
        <label>InterfaceBase</label>
        <link refid="classOpenRAVE_1_1InterfaceBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1778">
        <label>vector&lt; Grabbed &gt;</label>
        <childnode refid="1779" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1752">
        <label>KinBody</label>
        <link refid="classOpenRAVE_1_1KinBody"/>
        <childnode refid="1753" relation="public-inheritance">
        </childnode>
        <childnode refid="1758" relation="usage">
          <edgelabel>_vTopologicallySortedJointsAll</edgelabel>
          <edgelabel>_vTopologicallySortedJoints</edgelabel>
          <edgelabel>_vPassiveJoints</edgelabel>
          <edgelabel>_vDOFOrderedJoints</edgelabel>
          <edgelabel>_vecjoints</edgelabel>
        </childnode>
        <childnode refid="1759" relation="usage">
          <edgelabel>_vTempJoints</edgelabel>
        </childnode>
        <childnode refid="1760" relation="usage">
          <edgelabel>_spec</edgelabel>
        </childnode>
        <childnode refid="1763" relation="usage">
          <edgelabel>_listAttachedBodies</edgelabel>
        </childnode>
        <childnode refid="1764" relation="usage">
          <edgelabel>_vAllPairsShortestPaths</edgelabel>
        </childnode>
        <childnode refid="1765" relation="usage">
          <edgelabel>_setAdjacentLinks</edgelabel>
        </childnode>
        <childnode refid="1766" relation="usage">
          <edgelabel>_vClosedLoopIndices</edgelabel>
        </childnode>
        <childnode refid="1767" relation="usage">
          <edgelabel>_vInitialLinkTransformations</edgelabel>
        </childnode>
        <childnode refid="1754" relation="usage">
          <edgelabel>__hashkinematics</edgelabel>
          <edgelabel>_name</edgelabel>
        </childnode>
        <childnode refid="1769" relation="usage">
          <edgelabel>_vJointsAffectingLinks</edgelabel>
        </childnode>
        <childnode refid="1770" relation="usage">
          <edgelabel>_vTopologicallySortedJointIndicesAll</edgelabel>
          <edgelabel>_vDOFIndices</edgelabel>
        </childnode>
        <childnode refid="1771" relation="usage">
          <edgelabel>_listRegisteredCallbacks</edgelabel>
        </childnode>
        <childnode refid="1772" relation="usage">
          <edgelabel>_veclinks</edgelabel>
        </childnode>
        <childnode refid="1773" relation="usage">
          <edgelabel>_vForcedAdjacentLinks</edgelabel>
        </childnode>
        <childnode refid="1774" relation="usage">
          <edgelabel>_vClosedLoops</edgelabel>
        </childnode>
      </node>
      <node id="1764">
        <label>vector&lt; std::pair&lt; int16_t, int16_t &gt; &gt;</label>
      </node>
      <node id="1779">
        <label>Grabbed</label>
        <link refid="classOpenRAVE_1_1RobotBase_1_1Grabbed"/>
        <childnode refid="1780" relation="usage">
          <edgelabel>troot</edgelabel>
        </childnode>
        <childnode refid="1781" relation="usage">
          <edgelabel>vCollidingLinks</edgelabel>
          <edgelabel>vNonCollidingLinks</edgelabel>
        </childnode>
      </node>
      <node id="1765">
        <label>set&lt; int &gt;</label>
      </node>
      <node id="1760">
        <label>ConfigurationSpecification</label>
        <link refid="classOpenRAVE_1_1ConfigurationSpecification"/>
        <childnode refid="1761" relation="usage">
          <edgelabel>_vgroups</edgelabel>
        </childnode>
      </node>
      <node id="1761">
        <label>vector&lt; Group &gt;</label>
        <childnode refid="1762" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1780">
        <label>RaveTransform&lt; dReal &gt;</label>
      </node>
      <node id="1781">
        <label>vector&lt; LinkConstPtr &gt;</label>
      </node>
      <node id="1773">
        <label>vector&lt; std::pair&lt; std::string, std::string &gt; &gt;</label>
      </node>
      <node id="1754">
        <label>string</label>
        <childnode refid="1755" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1763">
        <label>list&lt; KinBodyWeakPtr &gt;</label>
      </node>
      <node id="1751">
        <label>RobotBase</label>
        <link refid="classOpenRAVE_1_1RobotBase"/>
        <childnode refid="1752" relation="public-inheritance">
        </childnode>
        <childnode refid="1775" relation="usage">
          <edgelabel>_vecManipulators</edgelabel>
        </childnode>
        <childnode refid="1759" relation="usage">
          <edgelabel>_vTempRobotJoints</edgelabel>
        </childnode>
        <childnode refid="1760" relation="usage">
          <edgelabel>_activespec</edgelabel>
        </childnode>
        <childnode refid="1776" relation="usage">
          <edgelabel>_vRotationAxisResolutions</edgelabel>
          <edgelabel>_vRotation3DUpperLimits</edgelabel>
          <edgelabel>_vRotationAxisWeights</edgelabel>
          <edgelabel>_vRotationQuatLimitStart</edgelabel>
          <edgelabel>_vTranslationLowerLimits</edgelabel>
          <edgelabel>_vRotation3DWeights</edgelabel>
          <edgelabel>_vTranslationMaxVels</edgelabel>
          <edgelabel>_vRotation3DResolutions</edgelabel>
          <edgelabel>_vRotation3DLowerLimits</edgelabel>
          <edgelabel>_vRotationAxisUpperLimits</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="1754" relation="usage">
          <edgelabel>__hashrobotstructure</edgelabel>
        </childnode>
        <childnode refid="1770" relation="usage">
          <edgelabel>_vActiveDOFIndices</edgelabel>
          <edgelabel>_vAllDOFIndices</edgelabel>
        </childnode>
        <childnode refid="1777" relation="usage">
          <edgelabel>_vecSensors</edgelabel>
        </childnode>
        <childnode refid="1778" relation="usage">
          <edgelabel>_vGrabbedBodies</edgelabel>
        </childnode>
      </node>
      <node id="1759">
        <label>vector&lt; dReal &gt;</label>
      </node>
      <node id="1756">
        <label>map&lt; std::string, boost::shared_ptr&lt; InterfaceCommand &gt;, CaseInsensitiveCompare &gt;</label>
        <childnode refid="1754" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="1776">
        <label>RaveVector&lt; dReal &gt;</label>
      </node>
      <node id="1762">
        <label>Group</label>
        <link refid="classOpenRAVE_1_1ConfigurationSpecification_1_1Group"/>
        <childnode refid="1754" relation="usage">
          <edgelabel>interpolation</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="1768">
        <label>RaveTransform</label>
      </node>
      <node id="1777">
        <label>vector&lt; AttachedSensorPtr &gt;</label>
      </node>
      <node id="1755">
        <label>basic_string&lt; char &gt;</label>
      </node>
      <node id="1769">
        <label>vector&lt; int8_t &gt;</label>
      </node>
      <node id="1766">
        <label>vector&lt; std::vector&lt; std::pair&lt; int16_t, int16_t &gt; &gt; &gt;</label>
        <childnode refid="1764" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1758">
        <label>vector&lt; JointPtr &gt;</label>
      </node>
      <node id="1771">
        <label>list&lt; UserDataWeakPtr &gt;</label>
      </node>
      <node id="1770">
        <label>vector&lt; int &gt;</label>
      </node>
      <node id="1767">
        <label>vector&lt; Transform &gt;</label>
        <childnode refid="1768" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1757">
        <label>map&lt; std::string, XMLReadablePtr, CaseInsensitiveCompare &gt;</label>
        <childnode refid="1754" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="1753">
        <label>InterfaceBase</label>
        <link refid="classOpenRAVE_1_1InterfaceBase"/>
        <childnode refid="1754" relation="usage">
          <edgelabel>__strpluginname</edgelabel>
          <edgelabel>__struri</edgelabel>
          <edgelabel>__strxmlid</edgelabel>
          <edgelabel>__description</edgelabel>
        </childnode>
        <childnode refid="1756" relation="usage">
          <edgelabel>__mapCommands</edgelabel>
        </childnode>
        <childnode refid="1757" relation="usage">
          <edgelabel>__mapReadableInterfaces</edgelabel>
        </childnode>
      </node>
      <node id="1772">
        <label>vector&lt; LinkPtr &gt;</label>
      </node>
      <node id="1775">
        <label>vector&lt; ManipulatorPtr &gt;</label>
      </node>
      <node id="1774">
        <label>vector&lt; std::vector&lt; std::pair&lt; LinkPtr, JointPtr &gt; &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/pra3cob/openrave/include/openrave/robot.h" line="29" bodyfile="/home/pra3cob/openrave/include/openrave/robot.h" bodystart="28" bodyend="766"/>
    <listofallmembers>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a22f4da10ed5f1c80a18f2bcd96776c1a" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>__description</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a73df209d41bd817f794e33c92070e904" prot="private" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>__hashrobotstructure</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a32694b3450e609ea9b2dae741f3d407d" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_activespec</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a1a340c6aa418a10fcf9847474376b1ba" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>_AttachBody</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ae339c94da801d91508c6d4dd4ed118c6" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_bMakeJoinedLinksAdjacent</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a3a10edb8cb573ac97bfed0e05dc2a29a" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>_ComputeInternalInformation</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac739f547d1fd8fc0d58d98b8dfb22083" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>_CreateFunctionParser</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a0386692fd7704da6e79775fa09a4b685" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_environmentid</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a04d4e50096860d448e3ab08bbe4e1d8f" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_fQuatAngleResolution</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a9ad5ce53f284a3aec9d3004d0950fd39" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_fQuatAngleWeight</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a6d609e3285f66ef12a6fe4e564b434ac" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_fQuatLimitMaxAngle</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1afbecdc66fb354842fc0e0aba30fdd575" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_fQuatMaxAngleVelocity</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad9ec7f6d7732afcf3696924265ea1a8b" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>_IsAttached</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a7a467aa8c7f51627331d7f2dc8e71fd3" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_listAttachedBodies</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a6d824e60d7bac02b97a9643d6d555af9" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_listRegisteredCallbacks</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a56f7252f6901d68bd1d637800120ea24" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_nActiveDOF</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1aa111f44aea6f2b407af5ed096cd48edb" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_nActiveManip</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a335c90fceb6b2b3efd23f357b9071ff2" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_nAffineDOFs</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aaf2ed934b37cbbd236fdd1b01a5f5005" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_name</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aca4c77d19ed947e26826284b9c8b5d56" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_nHierarchyComputed</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a5b371595d16c6e862f4f675f03dffba4" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_nNonAdjacentLinkCache</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a7e9098feb28e312721a58a360989ec20" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_nParametersChanged</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1abce08eaa134f87c6d13f4d23749a61b9" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_nUpdateStampId</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a218a09068212db7bb35c7d4ce792e309" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>_ParametersChanged</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a0a17ef574c66277ef313e5e56d6b9bbc" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_pCollisionData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a5da7cbfc2028c1dff4992887fa5ed86e" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_pManageData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a3f8a2e40760cf2ee75f604c0f18b27ec" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_pPhysicsData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aff45addfa1926549479a9786a92d6246" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_pViewerData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a718b569da1eb4373e83434f09b839705" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>_RemoveAttachedBody</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad9a295abdbcfb51c7b9edee54eb805a3" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>_ResetInternalCollisionCache</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad20d6407270731a61d3a2877745edd29" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_setAdjacentLinks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a1e6a02a45812548a34f578af0c8a301e" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_setNonAdjacentLinks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac77a3b00fc5376337843fffef53ddec5" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_spec</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a41869817d317b2f5d91d91d1213c668f" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>_UpdateAttachedSensors</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a8cb263e743125a89064bffacf7776bc5" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>_UpdateGrabbedBodies</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a5ca41ccc29e1263372aa5b2a1aad5a1a" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vActiveDOFIndices</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1aa62afc985699a04cd80556dff9f3a1ee" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vAllDOFIndices</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad4fcd86b85624e749100cd60c0a9fccf" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vAllPairsShortestPaths</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a00df6713c1a66e68f273ae2b8aa0c5f4" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vClosedLoopIndices</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a0c06bbb41fb3ba4098d486fd90699140" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vClosedLoops</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac520bd29ce01d4f20bc6a297630dbf10" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vDOFIndices</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ae7d1b91b54b1ab04baee502a4dc26567" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vDOFOrderedJoints</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a8eb8f9943c05cd08afba576dba39871a" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vecjoints</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a02bf557ce0bba8374b863ce9f20de255" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_veclinks</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1affad71c6cc8ac660314a5e10e4caae34" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vecManipulators</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1aac98310b73ec888db282a3ca58db245a" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vecSensors</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aa4e6b1729935f161cd886466ff81e820" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vForcedAdjacentLinks</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a05dfd2aea199106122f1491d7cbd70eb" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vGrabbedBodies</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a9945fd1c6a580218fe969ee3bf77097f" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vInitialLinkTransformations</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a5a4ac058401dd5f4ec5da0e7c1f719e2" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vJointsAffectingLinks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aa70fe0334abb18115dcb5437f5425430" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vPassiveJoints</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a1fe8c40c3cc35c7ba90de8529498f875" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vRotation3DLowerLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ab2272d50eeaf820a84f9fbd3a7089ee6" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vRotation3DMaxVels</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ae4a0dfaaac86b5b369705f12398e25bf" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vRotation3DResolutions</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a9911b4b5098a06edd96afb722c888d25" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vRotation3DUpperLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1acae05c77af91519008748a69fa0eb65d" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vRotation3DWeights</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1aa2c84fbfca1619fcd03a3085432c7489" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vRotationAxisLowerLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a9706ee5191c77dccdc5bfd0851b91efb" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vRotationAxisMaxVels</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a127ef8ede922d0d590b40ab721c8f9f6" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vRotationAxisResolutions</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1aa4e94393cf6452cc1a4a1ec45ebca988" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vRotationAxisUpperLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a4d719c1e75e118116f4a7170c89912cb" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vRotationAxisWeights</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ae9af75dff30b196d4281a03b3a623027" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vRotationQuatLimitStart</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ade94794d66d05a03b9f702a64c9a5e5a" prot="private" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vTempRobotJoints</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aa731820a61e6c11c59a75e7dfffecd90" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vTopologicallySortedJointIndicesAll</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a57a836d771622beb63fd79d96445d7c3" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vTopologicallySortedJoints</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac4536665c649aeb43699f45c7774446f" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vTopologicallySortedJointsAll</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a85b79c22e259d861cabb3458e667ecd1" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vTranslationLowerLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a22a36063212761b819040690bdee0114" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vTranslationMaxVels</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ab2071adef8118c1187d1695411ae2be3" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vTranslationResolutions</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a2d5508231809659fbcd6222734b64f39" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vTranslationUpperLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a8e665d30ea757c958f5c4343d53fb841" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>_vTranslationWeights</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ace43b2d7d920eeb2eb69299a4784b040" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>AdjacentOptions</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ace43b2d7d920eeb2eb69299a4784b040a471e53775c7eb63178de3a28ed33d64f" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>AO_ActiveDOFs</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ace43b2d7d920eeb2eb69299a4784b040a9d927f87563a4c4eb69c2391905bc015" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>AO_Enabled</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a3cacadf1d673d6ab3678d768ccbaa8e3" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>AttachedSensorConstPtr</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a4e55f7af7b88c8ceef77a83751e3ced8" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>AttachedSensorPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a97ac46543288dce3ad8a976f04bf2844" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>BodyStateConstPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a1cef71a70dbff9c6cdc971d76a3273c5" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>BodyStatePtr</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a86ad4866d727f58a05ffd898ff411ee0" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>CalculateActiveAngularVelocityJacobian</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a2d4889bd0db8c8aad99c992b13cc2db7" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>CalculateActiveAngularVelocityJacobian</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a93636f2303581a0614c9520d3351afc2" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>CalculateActiveJacobian</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1aac4c333a2aaf16a25405efa53c84ead8" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>CalculateActiveJacobian</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1adbcd635f193bc643498b99eab2ba0357" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>CalculateActiveRotationJacobian</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a06b2f47ecf6fd9d395cf16f24cd102f0" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>CalculateActiveRotationJacobian</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a48eef419ccc30bfcdd82febedd6f54b7" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>CalculateAngularVelocityJacobian</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ae99b5fa18c14649692fa39a0883d1448" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>CalculateAngularVelocityJacobian</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a7fd6178241c4b8c8bb8a9d9b5f92f8cc" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>CalculateJacobian</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1abbbaf69f430808c088bac988cd5fa9f8" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>CalculateJacobian</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a4223d26feefc25a2d8b7e0abdb30e551" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>CalculateRotationJacobian</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a5525c53b10f1bae40980148f18a9102f" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>CalculateRotationJacobian</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ac0f7aeb30af9069736ec789db0bf75d8" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>CheckLinkCollision</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a3d555222cf7b02d592a0a31cef5d479d" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>CheckSelfCollision</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1aadffdb83bc22dcdd5dd50c27d1bb5496" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>Clone</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a19007e9a11f60fac50720cd38a4d6ede" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>ComputeAABB</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a941c8e8d2c5aa963d76aef113f19d835" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>Destroy</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ae63c68d8042f54cfb86ef6b52827cb69" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>DoesAffect</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a93204280b89842474930316675ce9f07" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>Enable</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1af0009d4f176dc8f0d02c5dd3b96226f1" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>EnableLink</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1aacdc590ce4cd7f988710a1f684d2d425" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveConfigurationSpecification</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a2fc26db3a3c302bfa1df5d972485e39c" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveDOF</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a430512c9498310ee59516bad6735d300" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveDOFAccelerationLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ab0cb7626edf9be09a3b713366439a2c9" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveDOFIndices</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ad1720281ce1b90117f2ea608994cd0c8" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveDOFLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ad9283ddebe5ce968918aeeb513248382" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveDOFMaxAccel</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a0f6e2659ed68f68330cfae433ea46f11" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveDOFMaxVel</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a79d75124b60a2e5c5896824036b83c39" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveDOFResolutions</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a4ff9c8d01c002b80c3a28d131b0542ba" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveDOFValues</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a15eab9433976f9b667512c8d8fab379f" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveDOFVelocities</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a8af7cfd13ee38f54b023141ecc09f598" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveDOFVelocityLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ad4d3771c5eb2f888d99c56e9a56cf2fe" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveDOFWeights</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1af5782c8413c068ddc9f471a8e4f48a3c" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveManipulator</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ad1f13a31373ebba2b4853f73f5125d96" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveManipulator</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a1b663dc6bca08704a562fdc74e25dfd0" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetActiveManipulatorIndex</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1afe1545b1bf9bfd1f76ce88e53e0914e7" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAdjacentLinks</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a84fb801be236fc623a1d0d14de7dd6f9" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineDOF</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a7cfd3a308f74598a3a33a5010137c632" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineDOFIndex</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a9a7744d25dfee40289c3627c92600164" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineRotation3DLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a65da250f4afc4bc8bf1a806a7ec3770e" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineRotation3DMaxVels</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a6025846422a2a51036074376dc82c041" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineRotation3DResolution</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ac778428d71865bf655e99a9bd4bb8f10" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineRotation3DWeights</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1aab0d7f45072809314846897b948e02af" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineRotationAxis</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ac115b354d225eca0e1709514df2c0b84" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineRotationAxisLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1abf108494f261bedf28da4c47dd1d1b67" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineRotationAxisMaxVels</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a66601f4bb3a81034eae0c679f82ed617" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineRotationAxisResolution</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1af9be1867b964acf453eb90ff928984b7" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineRotationAxisWeights</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ab4bb2e38267520019e902a1a5d4abbd3" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineRotationQuatLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a0ee99bcf088bc54fa0c603bac5b382f6" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineRotationQuatMaxVels</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ac2662710c28c1572b162274e2f11960c" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineRotationQuatResolution</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1aaa97c9f414114e097817403bebc69a65" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineRotationQuatWeights</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ac09ced409b9d1f3d8f02001b7872b67d" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineTranslationLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a7e786845d8bf9466a6e247aebd5c5b0a" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineTranslationMaxVels</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ae6354aaf3bdd8bc1e74b41406fa57bdc" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineTranslationResolution</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a5f4ceb6a03fd622bc1a6c91129ab3d18" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAffineTranslationWeights</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a2f50259e5dc09090474e2099dbd81cac" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAttached</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a12b17e5a27c796d6c877cc41a97af6f1" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetAttachedSensors</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a57e27364677e4ade3f7bf0865e7313df" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetBodyTransformations</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1adfe385b3300ee3f399e9a71837409054" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetCenterOfMass</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a81d58139430e2200f75c1bbba99c6a74" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetChain</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac6b65af9a7369ff0141880abf1576c33" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetChain</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a6eb3b9da2ed2b9b8eec770f018bbeb19" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetClosedLoops</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a4ae94c3cbd134d68a476d4362d2a250f" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetCollisionData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a4e917473a7d475324af43320f83796fc" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetConfigurationSpecification</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1af7fef3f4f3e970937d82cac5b2e25dc6" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetConfigurationSpecificationIndices</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a9d2332ddf65fc655aa7ebaa39223ee66" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetConfigurationValues</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a52ee62fc6defb50ff79a59e41d141566" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetController</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a23704d633d23272f467ea0a2ca5a5223" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetDependencyOrderedJoints</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a1b571821be060055bf6f2474e12fa5a3" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetDescription</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a44fbec2fd26a45cada889c5c0f0751c8" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetDOF</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad463b766576c1691d2937c43d53ec61b" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetDOFAccelerationLimits</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a3eb84ab4c44c1589ca8ff5ffaf14ddc3" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetDOFLimits</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a6fe001f451547229641f352a57cac7c0" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetDOFMaxAccel</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a30e259c711d606c9d38591da2c169ca8" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetDOFMaxTorque</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a1e9ec62d458f7c3b1ea298fa0499b25e" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetDOFMaxVel</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a8179efee098a3632e86cd3e278e89781" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetDOFResolutions</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aa07f040a19a9fe7b80254915b1cce26b" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetDOFValues</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1af77a7f1b7f83bbd441c8e488c2f57e94" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetDOFVelocities</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a62447722990a87e074023da86ce5bb74" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetDOFVelocityLimits</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a235492faf314ece039e652cb7493ef32" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetDOFVelocityLimits</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a6568e67c28b56bea234bcbdf78172ee6" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetDOFWeights</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a847c7f827694fd3db16f20b5669e1743" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>GetEnv</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a51f880cf26774cd34ab9634bd518b955" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetEnvironmentId</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a84070a927466aa5da331649c94b5e854" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>GetFullTrajectoryFromActive</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a39f91578d76bc2c4f2182aeb6c49a2ef" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetGrabbed</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ab57d127f75d79fb8bb00524894de8453" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetGuiData</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1af386ad7515f485242895df543029d333" prot="private" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetHash</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1ab6da1a274144d2dae86c4414fdc00c8a" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>GetInterfaceType</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1affeafe65e7c4094f282d273dedbf069b" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>GetInterfaceTypeStatic</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ae299b01185a923df10e1fc9fe0fc58be" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetJoint</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ab386b6dd306aca447113b8892c0fc265" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetJointFromDOFIndex</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a65ecee02fe64e7adf7609aa5375f0bcd" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetJointIndex</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a01fcab06f416b2ac3bac1385e09ff9bf" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>GetJoints</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a27ee132703f96edd3a71a8b3e6120447" prot="private" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetKinBodyHash</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a911ecdc66e68c59e2be7eeec162b238a" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetKinematicsGeometryHash</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a9953fafff72cdb7abf421255bbe2fa12" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetLink</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a32ba11c03aabb873b3e503c8e5b93e53" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetLinks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad8ee6440e3b5598037f585444639d341" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetLinkTransformations</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ab3b39cad05596c9fd0bd37de058239f4" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetLinkVelocities</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a987c89c00e6a5cfc8e72f33845d14ee6" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetManageData</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a93fa4dbd84cc30d4dae78ee20d816ce3" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetManipulators</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a3cc720dbc55fa8e07a0f85343d3bb136" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetName</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a0dfdf7668c68c2860a27983804e90c8b" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetNonAdjacentLinks</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ab7ece8b3b39a3c9dcc61899dc8dc783e" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>GetPassiveJoints</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1abeee587581232f14ea57e9f05b740779" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetPhysicsData</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a909d5f1a5ae6d3fbb73b69c26b3e6bb4" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>GetPluginName</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a948f97af111d83fad6ff054f88aaa214" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>GetReadableInterface</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a843c0a1f79a31b230bb85f265f97be6c" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>GetReadableInterfaces</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a2fc883be19068452aa218bf252c244b1" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetRigidlyAttachedLinks</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1afe87e86a10bb78f6653dcd1a4558f07a" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetRobotStructureHash</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a2206c7317f62f083c3f57868ba82bfee" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetTransform</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aac16fee68aa354fa24e6de5b8f79b78d" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetUpdateStamp</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a155ad446997ca5823937f9c171c17021" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetURI</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a975ebca32c743c8530807758e7c46618" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetUserData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a7685100461fe38707668dc3495e05a49" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetVelocity</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1afb0f7064845ec4978785c8973be539ee" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetViewerData</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1adebf2ecc7ec47f5d27229457e84cab87" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>GetXMLFilename</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a23e085422cc13cf058b9f9558a7d9de6" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>GetXMLId</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1abd0375cf84ce804abe302d3e6faddf76" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>Grab</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a52c7267f79b4d09c583fce816a8a31df" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>Grab</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a922b8a6c3e70c59f28eb327b3c7f71f8" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>Grab</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a233feb0353ba90cb2e60fea75043f364" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>Grab</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a6ca8a1abee1479424de9c296da9cdd34" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>InitFromBoxes</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a904bbbd6da53247d7f8e3ce1c3bac5b8" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>InitFromBoxes</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a3f81f529c6959894555ad8841a134431" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>InitFromData</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ae67a1ee5e11749340bfbca5bd6749424" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>InitFromFile</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ab0b57544b54f5b7d766a3fee473667a5" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>InitFromGeometries</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1afe077907e74b0a8c7bdb53abc6a67fb1" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>InitFromSpheres</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a9fbe9cf06cf411d8e93431552bdd4ebf" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>InitFromTrimesh</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a1505a042027909cb3c715713812d554f" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>InterfaceBase</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1af078e9e99c82cbd71d0bfa325438514e" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>InterfaceCommandFn</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a1e6636e58d5b763c37a529f752c5012d" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>IsAttached</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a0367d00b79b29dae5c647b169432b2a9" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>IsDOFInChain</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ab093c91e2859f12d929fe8665e67a8e8" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>IsEnabled</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a10ff30e0c1c04abfcbf5ce480a82330f" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>IsGrabbing</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a38fa8d57d2eefc36568411a129c741d3" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>IsRobot</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aeeaa44b125ab4ead7464f0e8991a3bb4" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>JointConstPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad3fc7b64912fd0b7343faaefbc96b3ef" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>JointPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a9e018dfc30d395bd54f090348b4b0493" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>JointWeakPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a2f6882391018a6ec4f9a49b217703578" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>KinBody</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238f" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>KinBodyProperty</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a99c416f979a09dfc6ef42fd62bd4e77e" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>LinkConstPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a8dea7b02ac1900156e6776d795c476c3" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>LinkPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a05ac08f3af6bf716a6f2991385c92467" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>LinkWeakPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ae1c689669d51508b456fbc41012988c0" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>ManageDataConstPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a1ffc67e834b97ce4e1acc052180dce52" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>ManageDataPtr</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1acd0ffcc71189ba5106c0481f70ae94e0" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>ManipulatorConstPtr</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ab276a11f11a647b5b79ea316fd23651d" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>ManipulatorPtr</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a91826a3d2c08d5ce91ba838cdf5409d0" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>ManipulatorWeakPtr</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa843c5aa5238d6b2bd4d437a579c3124f" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_JointAccelerationVelocityLimits</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa4814d65685cdcf1a1acd4b0c8379e9a0" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_JointLimits</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa9e6648eaadfe2e4b55dae772f95b461b" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_JointMimic</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa7ee92fba472282a56c66883f947dd997" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_JointOffset</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fac45ebedd04034c45de4da8c2786fad9e" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_JointProperties</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa785fd1ee72bf56f00622d147f18ba985" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_Joints</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fabe5d066e02460667e0f9b81dfe55dca3" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_LinkDraw</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa980bc1b487ae69ae27b35d1efe3ec671" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_LinkGeometry</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa98f236c1d5da89a2ed36445af493324e" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_Links</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa457e7598a9b59f4b89fd8c85ecc8b912" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_LinkStatic</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa97d0d4401c3c93be199eb8992a729c30" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_Manipulators</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa47f8210384e3bcc38a5c2c8d3f295c46" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_Name</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa0952514ee1fd4ebb86990df968573e7a" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_RobotActiveDOFs</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fad651ee47d87fae146c4cefa49b908c18" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_RobotManipulators</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa2792bbad36399a273b763b4539fdd497" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_RobotManipulatorTool</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa666cc0b7129b93c1a57d55d91681e0f6" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_RobotSensorPlacement</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238faac5baec80229e6eeae7c7ef46d6579a7" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_RobotSensors</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238fa3c8d7b53f7a81d3f96fd54bb35b8b2d8" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_SensorPlacement</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a973dd96959f97246c92245c42bce238faad03c15c4528bbd25c25837ae6f82b31" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Prop_Sensors</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ad7131b2e388f7f953e9cc14f7336c8e2" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>RAVE_DEPRECATED</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a17eb2c02db0e448f7305cbb2cd174525" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>RAVE_DEPRECATED</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a064c19af74ffccc473774e53497df767" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>RAVE_DEPRECATED</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1af920cbd372e9736b45b8582a0f4a3e6a" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>RAVE_DEPRECATED</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a2d3278e7bbdd94bad80e4fdbb3b41f3c" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>RAVE_DEPRECATED</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a69f9adfb1b7b3c44f848101a6d3264ec" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>RAVE_DEPRECATED</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a9831d84c5bfb91758c158748834737d5" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>RAVE_DEPRECATED</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a14a2c1d323f2f411a9b9eb1e14b99aca" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>READERSMAP</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a4f3de0f5a2b97c622ae9e4ea774cf30d" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>RegisterChangeCallback</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a840776899a1d3677582fc6ef87be6ef2" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>RegisterCommand</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ac96a4eead413884c18f29cbf299ede3a" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>RegrabAll</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ada9b12e106deb259af6c3f9f2d8589c1" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>Release</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a786014c730e245029cf6d944eb65ee2d" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>ReleaseAllGrabbed</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a5e4d3cbc54d32ecf0c1485a7e84c17e2" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>RobotBase</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388a9e85e6d610af529b7587518caccccf4a" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Save_ActiveDOF</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388abfdea67aabc497c0ecd461a332cf17e1" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Save_ActiveManipulator</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388aa8b99f22784feffbd182ad71f8eb8a6f" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Save_GrabbedBodies</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388a48bd135704be05e76e3a30e2d80209b7" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Save_LinkEnable</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388ab33f258d52d1a0adc2f8b75878e3ace2" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Save_LinkTransformation</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388ac7cea6ccd82414804a32fef90681985e" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>Save_LinkVelocities</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac26237c033a41ea5d14733a01e1dd388" prot="public" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>SaveParameters</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a1293cda647f18fe751e66b910af52407" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SendCommand</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ac3d3423a3fae6eb66bc8e0ff6fc23e3e" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>serialize</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a36a3474433e5ec3ab832a28f8fe8651b" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetActiveDOFs</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a1320f8a27bf8e2431f2d876ab74b5375" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetActiveDOFs</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a61b3cab18397704d70fb5ffa52f0b6b8" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetActiveDOFValues</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a970f78a67cf4d831562471e688a10e2c" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetActiveDOFVelocities</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1aff994b4316d3a31304ee13227e72322b" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetActiveManipulator</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a479c1b360a34fdc516369e1c3dbb3dc5" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetActiveManipulator</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a4dfa799940ac67f7c409053aeda11346" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetActiveMotion</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1afae0e0c1c67c2b5295255e684197bb0d" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetActiveMotion</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a73d18528595acfccfb5dac1b917c931d" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineRotation3DLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1aca639b7d618f16865b23db95c94e78e6" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineRotation3DMaxVels</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ad6392e792d3f470609ef7c30f1bcf21a" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineRotation3DResolution</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a44c44a092857697901d3398fae0a4662" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineRotation3DWeights</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1aef35115a5319c141ba26fa4c7db5d10d" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineRotationAxisLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a9540e66fefbfbb2c4cbe3fb0614be6fe" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineRotationAxisMaxVels</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ab1ab13a4085dec73ce772f138c1f299f" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineRotationAxisResolution</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a423aba3715d11bb70958bf2ee4bec667" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineRotationAxisWeights</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a5b49831e704d28f7228dbc317add6efc" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineRotationQuatLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ab7a68cd681ffee1ae12c186539971a19" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineRotationQuatMaxVels</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a8622f54ae85efd7c567931e1d38e3528" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineRotationQuatResolution</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a215b8d8f4ee61d9928e8f6526e09961f" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineRotationQuatWeights</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1add14e0337082d480614feaae1e213a68" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineTranslationLimits</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a6c09d769ec334623646521b39565d95e" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineTranslationMaxVels</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a8c9f1eb0dddfebee4c61f1919f01d377" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineTranslationResolution</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1af0424e83f813d7a0ee9f81f0681850ad" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetAffineTranslationWeights</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a0cbd54ab25b8c1f3466092b54180d266" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetBodyTransformations</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad85bc7dc70d07b123c41b7bcad79ca34" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetCollisionData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad5dc4cc6b247465c2522c31a9169cfd0" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetConfigurationValues</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a8384a87dcfccbd3b27006c1769219c28" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetController</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a4d4d9910820087bb1a0d916ca1bb0e5c" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetController</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a9d548988a71fd50f890acdec255bdc17" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetDescription</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a4057204a0e2c01a59ea9011fb5bba922" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetDOFTorques</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ab503f57fc0d435881e77670eccd73bd0" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetDOFValues</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a29fc1f1ba1cdb09f54eb8774bf010b08" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetDOFValues</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aff61afba85f45d8c7262c5391b271cb1" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetDOFVelocities</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a0718b6336d442f3e2320f7b17d84d516" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetDOFVelocities</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aba8aaffd5d9bb4c604eb29a0250bd525" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetJointTorques</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aa0afe535a5cbb420c37523184a18860a" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetJointValues</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a1bec378a3c11954bc849987e8048706f" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetJointValues</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ad1f632c1fc4e293b7fd1482c732dd7d2" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetJointVelocities</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a3c811c9f633c1c4347606fd13a4d4f02" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetLinkTransformations</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a6b7837855cf483cc6a87553a3dcc16ec" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetLinkVelocities</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aeda22b9e132eb476f6b45b48d02670ea" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetManageData</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a53f7fcf5ff3f270a12fd9714d760bc58" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetMotion</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a847d2f81d14b0005954aeb0d817a2187" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetName</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aa282fd034535ec4b05f90f9cd32bd1c9" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetPhysicsData</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ad19fd054ec0bb506ca08d1a7deaa005d" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetTransform</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1ab3a2d5e41d756988959d9f5cdccfe284" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetUserData</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1aba2de87983f5e6ad881df19cc6198018" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetUserData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1ac739ab6c3a2a0d486cc0d280bb2b74db" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetVelocity</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1aa8a85e0f120e9cbc588a8f3a555758cb" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetViewerData</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a869f9a89146a89d8248f392c9610b7b7" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SetZeroConfiguration</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a2ef9f983dd9f2e3e06b4bc314fe7ba1d" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>shared_kinbody</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a9e85323e68548d575608f1eb9caa90b4" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>shared_kinbody_const</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a7fe22e509f464393ca75f077e7a4178f" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>shared_robot</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a330667fffa952a49df84158db891dcb6" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>shared_robot_const</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ab51d371d29d7947197b90d8e915de00f" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SimulationStep</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1a13c032494357fa0f2333e73d47322020" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SubtractActiveDOFValues</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a7c60c9dfe8ef533913967e60f3d7db8f" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SubtractDOFValues</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a4b35aa1ab1b6538d151f7f6cb254c5fe" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>SubtractJointValues</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a1a70446e03a29c6c9a5650886027cd2e" prot="protected" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>UnregisterCommand</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1ac63bdd45696479f91bdf99a3d876226f" prot="protected" virt="non-virtual"><scope>OpenRAVE::RobotBase</scope><name>vActvAffineRotationAxis</name></member>
      <member refid="classOpenRAVE_1_1InterfaceBase_1a90ab55ffa15c68875747d2ac2458b8e1" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>~InterfaceBase</name></member>
      <member refid="classOpenRAVE_1_1KinBody_1a733fc2dfdef6968ace502ee6c6924f7f" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>~KinBody</name></member>
      <member refid="classOpenRAVE_1_1RobotBase_1af58cfe00e477519413c05a623be383d7" prot="public" virt="virtual"><scope>OpenRAVE::RobotBase</scope><name>~RobotBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
