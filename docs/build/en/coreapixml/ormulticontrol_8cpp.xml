<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="ormulticontrol_8cpp" kind="file">
    <compoundname>ormulticontrol.cpp</compoundname>
    <includes refid="openrave-core_8h" local="no">openrave-core.h</includes>
    <includes refid="planningutils_8h" local="no">openrave/planningutils.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">cstring</includes>
    <includes local="no">sstream</includes>
    <includes local="no">boost/thread/thread.hpp</includes>
    <includes local="no">boost/bind.hpp</includes>
    <incdepgraph>
      <node id="2835">
        <label>list</label>
      </node>
      <node id="2847">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="2872">
        <label>openrave/robot.h</label>
        <link refid="robot_8h"/>
      </node>
      <node id="2829">
        <label>stdarg.h</label>
      </node>
      <node id="2879">
        <label>openrave/environment.h</label>
        <link refid="environment_8h"/>
      </node>
      <node id="2864">
        <label>openrave/plugininfo.h</label>
        <link refid="plugininfo_8h"/>
      </node>
      <node id="2866">
        <label>openrave/spacesampler.h</label>
        <link refid="spacesampler_8h"/>
      </node>
      <node id="2839">
        <label>iomanip</label>
      </node>
      <node id="2843">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="2859">
        <label>limits</label>
      </node>
      <node id="2862">
        <label>openrave/mathextra.h</label>
        <link refid="mathextra_8h"/>
        <childnode refid="2861" relation="include">
        </childnode>
        <childnode refid="2857" relation="include">
        </childnode>
        <childnode refid="2863" relation="include">
        </childnode>
      </node>
      <node id="2845">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="2849">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="2854">
        <label>openrave/config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="2832">
        <label>stdint.h</label>
      </node>
      <node id="2826">
        <label>openrave-core.h</label>
        <link refid="openrave-core_8h"/>
        <childnode refid="2827" relation="include">
        </childnode>
      </node>
      <node id="2851">
        <label>boost/format.hpp</label>
      </node>
      <node id="2855">
        <label>openrave/interfacehashes.h</label>
        <link refid="interfacehashes_8h"/>
      </node>
      <node id="2857">
        <label>cmath</label>
      </node>
      <node id="2861">
        <label>cassert</label>
      </node>
      <node id="2850">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="2848">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="2833">
        <label>string</label>
      </node>
      <node id="2844">
        <label>boost/weak_ptr.hpp</label>
      </node>
      <node id="2836">
        <label>map</label>
      </node>
      <node id="2838">
        <label>exception</label>
      </node>
      <node id="2840">
        <label>fstream</label>
      </node>
      <node id="2870">
        <label>openrave/collisionchecker.h</label>
        <link refid="collisionchecker_8h"/>
      </node>
      <node id="2842">
        <label>boost/function.hpp</label>
      </node>
      <node id="2875">
        <label>openrave/controller.h</label>
        <link refid="controller_8h"/>
      </node>
      <node id="2874">
        <label>openrave/planner.h</label>
        <link refid="planner_8h"/>
      </node>
      <node id="2827">
        <label>openrave/openrave.h</label>
        <link refid="openrave_8h"/>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2829" relation="include">
        </childnode>
        <childnode refid="2830" relation="include">
        </childnode>
        <childnode refid="2831" relation="include">
        </childnode>
        <childnode refid="2832" relation="include">
        </childnode>
        <childnode refid="2833" relation="include">
        </childnode>
        <childnode refid="2834" relation="include">
        </childnode>
        <childnode refid="2835" relation="include">
        </childnode>
        <childnode refid="2836" relation="include">
        </childnode>
        <childnode refid="2837" relation="include">
        </childnode>
        <childnode refid="2838" relation="include">
        </childnode>
        <childnode refid="2839" relation="include">
        </childnode>
        <childnode refid="2840" relation="include">
        </childnode>
        <childnode refid="2841" relation="include">
        </childnode>
        <childnode refid="2842" relation="include">
        </childnode>
        <childnode refid="2843" relation="include">
        </childnode>
        <childnode refid="2844" relation="include">
        </childnode>
        <childnode refid="2845" relation="include">
        </childnode>
        <childnode refid="2846" relation="include">
        </childnode>
        <childnode refid="2847" relation="include">
        </childnode>
        <childnode refid="2848" relation="include">
        </childnode>
        <childnode refid="2849" relation="include">
        </childnode>
        <childnode refid="2850" relation="include">
        </childnode>
        <childnode refid="2851" relation="include">
        </childnode>
        <childnode refid="2852" relation="include">
        </childnode>
        <childnode refid="2853" relation="include">
        </childnode>
        <childnode refid="2854" relation="include">
        </childnode>
        <childnode refid="2855" relation="include">
        </childnode>
        <childnode refid="2856" relation="include">
        </childnode>
        <childnode refid="2862" relation="include">
        </childnode>
        <childnode refid="2864" relation="include">
        </childnode>
        <childnode refid="2865" relation="include">
        </childnode>
        <childnode refid="2866" relation="include">
        </childnode>
        <childnode refid="2867" relation="include">
        </childnode>
        <childnode refid="2868" relation="include">
        </childnode>
        <childnode refid="2869" relation="include">
        </childnode>
        <childnode refid="2870" relation="include">
        </childnode>
        <childnode refid="2871" relation="include">
        </childnode>
        <childnode refid="2872" relation="include">
        </childnode>
        <childnode refid="2873" relation="include">
        </childnode>
        <childnode refid="2874" relation="include">
        </childnode>
        <childnode refid="2875" relation="include">
        </childnode>
        <childnode refid="2876" relation="include">
        </childnode>
        <childnode refid="2877" relation="include">
        </childnode>
        <childnode refid="2878" relation="include">
        </childnode>
        <childnode refid="2879" relation="include">
        </childnode>
      </node>
      <node id="2825">
        <label>src/cppexamples/ormulticontrol.cpp</label>
        <link refid="ormulticontrol.cpp"/>
        <childnode refid="2826" relation="include">
        </childnode>
        <childnode refid="2880" relation="include">
        </childnode>
        <childnode refid="2834" relation="include">
        </childnode>
        <childnode refid="2830" relation="include">
        </childnode>
        <childnode refid="2841" relation="include">
        </childnode>
        <childnode refid="2848" relation="include">
        </childnode>
        <childnode refid="2881" relation="include">
        </childnode>
      </node>
      <node id="2828">
        <label>cstdio</label>
      </node>
      <node id="2878">
        <label>openrave/viewer.h</label>
        <link refid="viewer_8h"/>
      </node>
      <node id="2880">
        <label>openrave/planningutils.h</label>
        <link refid="planningutils_8h"/>
        <childnode refid="2827" relation="include">
        </childnode>
      </node>
      <node id="2834">
        <label>vector</label>
      </node>
      <node id="2867">
        <label>openrave/kinbody.h</label>
        <link refid="kinbody_8h"/>
      </node>
      <node id="2860">
        <label>utility</label>
      </node>
      <node id="2841">
        <label>sstream</label>
      </node>
      <node id="2877">
        <label>openrave/sensorsystem.h</label>
        <link refid="sensorsystem_8h"/>
      </node>
      <node id="2876">
        <label>openrave/physicsengine.h</label>
        <link refid="physicsengine_8h"/>
      </node>
      <node id="2846">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="2856">
        <label>openrave/geometry.h</label>
        <link refid="geometry_8h"/>
        <childnode refid="2857" relation="include">
        </childnode>
        <childnode refid="2858" relation="include">
        </childnode>
        <childnode refid="2859" relation="include">
        </childnode>
        <childnode refid="2860" relation="include">
        </childnode>
        <childnode refid="2830" relation="include">
        </childnode>
        <childnode refid="2831" relation="include">
        </childnode>
        <childnode refid="2861" relation="include">
        </childnode>
      </node>
      <node id="2831">
        <label>cstdlib</label>
      </node>
      <node id="2858">
        <label>iostream</label>
      </node>
      <node id="2868">
        <label>openrave/trajectory.h</label>
        <link refid="trajectory_8h"/>
      </node>
      <node id="2863">
        <label>climits</label>
      </node>
      <node id="2881">
        <label>boost/bind.hpp</label>
      </node>
      <node id="2865">
        <label>openrave/interface.h</label>
        <link refid="interface_8h"/>
      </node>
      <node id="2873">
        <label>openrave/iksolver.h</label>
        <link refid="iksolver_8h"/>
      </node>
      <node id="2852">
        <label>boost/array.hpp</label>
      </node>
      <node id="2869">
        <label>openrave/module.h</label>
        <link refid="module_8h"/>
      </node>
      <node id="2837">
        <label>set</label>
      </node>
      <node id="2853">
        <label>boost/multi_array.hpp</label>
      </node>
      <node id="2830">
        <label>cstring</label>
      </node>
      <node id="2871">
        <label>openrave/sensor.h</label>
        <link refid="sensor_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="ormulticontrol_8cpp_1a87e5a6712bd042f3257acfbf82827714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetViewer</definition>
        <argsstring>(EnvironmentBasePtr penv, const string &amp;viewername)</argsstring>
        <name>SetViewer</name>
        <param>
          <type>EnvironmentBasePtr</type>
          <declname>penv</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>viewername</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/src/cppexamples/ormulticontrol.cpp" line="30" bodyfile="/home/pra3cob/openrave/src/cppexamples/ormulticontrol.cpp" bodystart="29" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="ormulticontrol_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/src/cppexamples/ormulticontrol.cpp" line="37" bodyfile="/home/pra3cob/openrave/src/cppexamples/ormulticontrol.cpp" bodystart="36" bodyend="158"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="openrave-core_8h" kindref="compound">openrave-core.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="planningutils_8h" kindref="compound" tooltip="Planning related utilities likes samplers, distance metrics, etc.">openrave/planningutils.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/thread/thread.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/bind.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">OpenRAVE;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WIN32_LEAN_AND_MEAN</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>usleep(micro)<sp/>Sleep(micro/1000)</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="ormulticontrol_8cpp_1a87e5a6712bd042f3257acfbf82827714" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="opencvsaving_8cpp_1a87e5a6712bd042f3257acfbf82827714" kindref="member">SetViewer</ref>(<ref refid="namespaceOpenRAVE_1a652cd59d4cc9e3262d85e6776ec8ff9b" kindref="member">EnvironmentBasePtr</ref><sp/>penv,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>viewername)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1af0d19499c5ac95f5e1ac60b29187d7c4" kindref="member">ViewerBasePtr</ref><sp/>viewer<sp/>=<sp/><ref refid="namespaceOpenRAVE_1a75b6125ec62afca70c38afe81f572db1" kindref="member">RaveCreateViewer</ref>(penv,viewername);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>penv-&gt;AddViewer(viewer);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>viewer-&gt;main(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="ormulticontrol_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ikfastloader_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>scenefilename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;data/diffdrive_arm.env.xml&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>viewername<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;qtcoin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1ab89ccf2331c4ee81662f687cedaa1781" kindref="member" tooltip="Explicitly initializes the global OpenRAVE state (optional).">RaveInitialize</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1a652cd59d4cc9e3262d85e6776ec8ff9b" kindref="member">EnvironmentBasePtr</ref><sp/>penv<sp/>=<sp/><ref refid="namespaceOpenRAVE_1aec9c3dd6a1f2908a1eb84ca59243e00a" kindref="member">RaveCreateEnvironment</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>penv-&gt;SetDebugLevel(<ref refid="namespaceOpenRAVE_1ab658e6d84759440dbf3c890446075395abd3809f60dd27203b26d387b072b090f" kindref="member">Level_Debug</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::thread<sp/>thviewer(boost::bind(<ref refid="opencvsaving_8cpp_1a87e5a6712bd042f3257acfbf82827714" kindref="member">SetViewer</ref>,penv,viewername));<sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>viewer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(400000);<sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>the<sp/>viewer<sp/>to<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>penv-&gt;Load(scenefilename);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attach<sp/>a<sp/>physics<sp/>engine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>penv-&gt;SetPhysicsEngine(<ref refid="namespaceOpenRAVE_1ab08a89586f8780b19a4da7cc142cbcf4" kindref="member">RaveCreatePhysicsEngine</ref>(penv,</highlight><highlight class="stringliteral">&quot;ode&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>penv-&gt;GetPhysicsEngine()-&gt;SetGravity(<ref refid="namespaceOpenRAVE_1ab815faf493a6d82304f7f202d59f2a36" kindref="member">Vector</ref>(0,0,-9.8));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;RobotBasePtr&gt;<sp/>vrobots;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>penv-&gt;GetRobots(vrobots);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1a5a9955dc6058f09c4462952478dfcf58" kindref="member">RobotBasePtr</ref><sp/>probot<sp/>=<sp/>vrobots.at(0);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;dReal&gt;<sp/>q;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>wheelindices,<sp/>restindices;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1a93f3c54acfadfefe33b745f7df0c81cf" kindref="member">ControllerBasePtr</ref><sp/>wheelcontroller,<sp/>armcontroller;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>controllers,<sp/>make<sp/>sure<sp/>to<sp/>lock<sp/>environment!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnvironmentMutex::scoped_lock<sp/>lock(penv-&gt;GetMutex());<sp/></highlight><highlight class="comment">//<sp/>lock<sp/>environment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1ab691b4b86694b0711ca726899d248488" kindref="member">MultiControllerPtr</ref><sp/>multi(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classOpenRAVE_1_1MultiController" kindref="compound" tooltip="controller that manage multiple controllers, allows users to easily set multiple...">MultiController</ref>(penv));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>dofindices(probot-&gt;GetDOF());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>probot-&gt;GetDOF();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dofindices[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probot-&gt;SetController(multi,dofindices,1);<sp/></highlight><highlight class="comment">//<sp/>control<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>velocity<sp/>controller<sp/>on<sp/>all<sp/>joints<sp/>that<sp/>have<sp/>&apos;wheel&apos;<sp/>in<sp/>their<sp/>description</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;KinBody::JointPtr&gt;::const_iterator<sp/>itjoint<sp/>=<sp/>probot-&gt;GetJoints().begin();<sp/>itjoint<sp/>!=<sp/>probot-&gt;GetJoints().end();<sp/>++itjoint)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*itjoint)-&gt;GetName().find(</highlight><highlight class="stringliteral">&quot;wheel&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(*itjoint)-&gt;GetDOF();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelindices.push_back((*itjoint)-&gt;GetDOFIndex()+i);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(*itjoint)-&gt;GetDOF();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restindices.push_back((*itjoint)-&gt;GetDOFIndex()+i);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(wheelindices.size()<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelcontroller<sp/>=<sp/><ref refid="namespaceOpenRAVE_1a1df06dca7777efdfbd9e75b9ee568cd2" kindref="member">RaveCreateController</ref>(penv,</highlight><highlight class="stringliteral">&quot;odevelocity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi-&gt;AttachController(wheelcontroller,wheelindices,0);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>restindices.size()<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armcontroller<sp/>=<sp/><ref refid="namespaceOpenRAVE_1a1df06dca7777efdfbd9e75b9ee568cd2" kindref="member">RaveCreateController</ref>(penv,</highlight><highlight class="stringliteral">&quot;idealcontroller&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi-&gt;AttachController(armcontroller,restindices,0);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="openrave_8h_1a9bbbf668aa39f398c341e946ab8a43f5" kindref="member">RAVELOG_WARN</ref>(</highlight><highlight class="stringliteral">&quot;robot<sp/>needs<sp/>to<sp/>have<sp/>wheels<sp/>and<sp/>arm<sp/>for<sp/>demo<sp/>to<sp/>work\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnvironmentMutex::scoped_lock<sp/>lock(penv-&gt;GetMutex());<sp/></highlight><highlight class="comment">//<sp/>lock<sp/>environment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!!armcontroller<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>a<sp/>trajectory<sp/>on<sp/>the<sp/>arm<sp/>and<sp/>velocity<sp/>on<sp/>the<sp/>wheels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1aa3c159b394f2e4ec46ac49416a2acf17" kindref="member">TrajectoryBasePtr</ref><sp/>traj<sp/>=<sp/><ref refid="namespaceOpenRAVE_1aa987900651248eee02dc1ce6647dc543" kindref="member" tooltip="Return an empty trajectory instance.">RaveCreateTrajectory</ref>(penv,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probot-&gt;SetActiveDOFs(restindices);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOpenRAVE_1_1ConfigurationSpecification" kindref="compound" tooltip="A configuration specification references values in the environment that then define...">ConfigurationSpecification</ref><sp/>spec<sp/>=<sp/>probot-&gt;GetActiveConfigurationSpecification();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeoffset<sp/>=<sp/>spec.<ref refid="classOpenRAVE_1_1ConfigurationSpecification_1a5624a2dfc350dfe608dc26d86b7e7c08" kindref="member" tooltip="adds the deltatime tag to the end if one doesn&amp;#39;t exist and returns the index...">AddDeltaTime</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traj-&gt;Init(spec);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probot-&gt;GetActiveDOFValues(q);<sp/></highlight><highlight class="comment">//<sp/>get<sp/>current<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;dReal&gt;<sp/>vdata(spec.<ref refid="classOpenRAVE_1_1ConfigurationSpecification_1ac938a6c271285a5468b805a3243e20e6" kindref="member" tooltip="return the dimension of the configuraiton space (degrees of freedom)">GetDOF</ref>(),0);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(q.begin(),q.end(),vdata.begin());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traj-&gt;Insert(0,vdata);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.at(<ref refid="namespaceOpenRAVE_1a71fdac6520a636ef5daab82808551813" kindref="member">RaveRandomInt</ref>()%restindices.size())<sp/>+=<sp/><ref refid="namespaceOpenRAVE_1af106eea57ab2fbb2e632347a3371a813" kindref="member">RaveRandomFloat</ref>()-0.5;<sp/></highlight><highlight class="comment">//<sp/>move<sp/>a<sp/>random<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>collisions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOpenRAVE_1_1RobotBase_1_1RobotStateSaver" kindref="compound" tooltip="Helper class derived from KinBodyStateSaver to additionaly save robot information...">RobotBase::RobotStateSaver</ref><sp/>saver(probot);<sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>state<sp/>saver<sp/>so<sp/>robot<sp/>is<sp/>not<sp/>moved<sp/>permenantly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probot-&gt;SetActiveDOFValues(q);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>probot-&gt;CheckSelfCollision()<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>check<sp/>env<sp/>collisions<sp/>since<sp/>we<sp/>have<sp/>physics<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>robot<sp/>in<sp/>collision<sp/>at<sp/>final<sp/>point,<sp/>so<sp/>reject</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(q.begin(),q.end(),vdata.begin());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdata.at(timeoffset)<sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>trajectory<sp/>takes<sp/>2s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traj-&gt;Insert(1,vdata);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1_1planningutils_1a164e0c7cc3c0c50d13573f72aa57f2dc" kindref="member" tooltip="retimes the trajectory points consisting of active dofs of the robot">planningutils::RetimeActiveDOFTrajectory</ref>(traj,probot,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armcontroller-&gt;SetPath(traj);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!!wheelcontroller<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringstream<sp/>sout,ss;<sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;setvelocity<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wheelindices.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>2*(<ref refid="namespaceOpenRAVE_1af106eea57ab2fbb2e632347a3371a813" kindref="member">RaveRandomFloat</ref>()-0.5)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wheelcontroller-&gt;SendCommand(sout,ss)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="openrave_8h_1a9bbbf668aa39f398c341e946ab8a43f5" kindref="member">RAVELOG_WARN</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>send<sp/>velocity<sp/>command\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unlock<sp/>the<sp/>environment<sp/>and<sp/>wait<sp/>for<sp/>the<sp/>arm<sp/>controller<sp/>to<sp/>finish<sp/>(wheel<sp/>controller<sp/>will<sp/>never<sp/>finish)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!armcontroller<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(2000000);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!armcontroller-&gt;IsDone())<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(1000);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>thviewer.join();<sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>the<sp/>viewer<sp/>thread<sp/>to<sp/>exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>penv-&gt;Destroy();<sp/></highlight><highlight class="comment">//<sp/>destroy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/pra3cob/openrave/src/cppexamples/ormulticontrol.cpp"/>
  </compounddef>
</doxygen>
