<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="installation__windows" kind="page">
    <compoundname>installation_windows</compoundname>
    <title>Building and Installing on Windows</title>
    <detaileddescription>
<para><bold>NOTE:</bold> Only Windows XP has been tested. Windows 7 and others have been reported to work, but might need to modify the executable properties to <bold>windows95 compatibility mode</bold> after the executable has been built.</para><para>It is recommended to use <ref refid="namespaceOpenRAVE" kindref="compound">OpenRAVE</ref> from the official <ulink url="http://sourceforge.net/projects/openrave/files/">Windows Installers on Sourceforge</ulink>.</para><sect1 id="installation__windows_1iwin_octavematlab">
<title>Installation of 3rd Party Software</title>
<para>Download the sources from <ulink url="http://sourceforge.net/projects/openrave">sourceforge</ulink> (<ulink url="http://tortoisesvn.net/downloads.html/">Tortoise SVN</ulink> is recommended). The subversion url is:</para><para><verbatim>
https://openrave.svn.sourceforge.net/svnroot/openrave/tags/latest_stable
</verbatim></para><para>Check out the openrave sources <bold>in a path whose directories do not contain spaces</bold>!!!. For example <computeroutput>C:\openrave</computeroutput>.</para><para>A lot of the 3rd party libraries are already inside the openrave sources. However, the following need to be installed:</para><para><itemizedlist>
<listitem><para><ulink url="http://www.boostpro.com/download/">Latest Boost C++ Libraries</ulink> - Select <bold>Multithreaded DLL</bold>!<itemizedlist>
<listitem><para>A local boost installation is included in the sources in case cannot use a system install.</para></listitem></itemizedlist>
</para></listitem><listitem><para><ulink url="http://code.google.com/p/qt-msvc-installer/downloads/list">Qt4 MSVC Installer</ulink></para></listitem><listitem><para><ulink url="http://www.cmake.org/cmake/resources/software.html">CMake</ulink>.</para></listitem><listitem><para>For openravepy python bindings (<bold>make sure Python version is compatible with Boost.Python! 2.6 is recommended!</bold>):<itemizedlist>
<listitem><para><ulink url="http://python.org/download/releases/2.6.6">Python 2.6.6</ulink></para></listitem><listitem><para><ulink url="http://sourceforge.net/projects/numpy/files">numpy superpack</ulink></para></listitem><listitem><para><bold>Highly Recommended:</bold> <ulink url="http://ipython.scipy.org/moin/PyReadline/Intro">PyReadline</ulink> and <ulink url="http://ipython.scipy.org/moin/Download">IPython</ulink></para></listitem><listitem><para><bold>Recommended:</bold> <ulink url="http://sourceforge.net/projects/scipy/files/">SciPy</ulink> - the scientific library for Python is recommended.</para></listitem><listitem><para><ulink url="http://code.google.com/p/sympy/downloads/list">SymPy</ulink> - Python Symbolic Mathematics.</para></listitem><listitem><para><bold>openravepy</bold> will not compile in Debug mode unless the Python debug libraries are also installed.</para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para><sect2 id="installation__windows_1iwin_octavematlab">
<title>Installation of 3rd Party Software</title>
<para>Both <ulink url="http://www.gnu.org/software/octave/">Octave</ulink> and Matlab are supported and the OpenRAVE build system automatically detects and compiles the mex files for each.</para><para><itemizedlist>
<listitem><para>If using Octave, make sure to add the path to <computeroutput>mkoctfile</computeroutput> to the $Path environment variable. If you are using Matlab, make sure that the path to <computeroutput>mex</computeroutput> is in the PATH environment variable (ie, typing <computeroutput>mex</computeroutput> on the command line gives the MATLAB compiler). On Windows Mik-Tex overwrites the <computeroutput>mex</computeroutput> program with its own version, so any matlab paths have to be declared before Mik-Tex in the PATH variable. You can check if the paths are set correctly by starting up the command prompt and typing <computeroutput>mkoctfile</computeroutput> or <computeroutput>mex</computeroutput>.</para></listitem></itemizedlist>
</para><para>Octave users:<itemizedlist>
<listitem><para>Make sure <computeroutput>mkoctfile</computeroutput> is in your system path.</para></listitem><listitem><para>If you having problems with the JVM, try installing octave using gnuplot (rather than jhandles).</para></listitem><listitem><para>Compiling mex files should use the same compiler as was used to build the Octave package. As of October 2008, the official Octave binaries are compiled with Visual Studio 2005 (freely available).</para></listitem><listitem><para>Add <computeroutput>$OPENRAVE_INSTALL\share\openrave\octave</computeroutput> to the Octave path (default is <computeroutput>C:\Program Files\openrave\share\openrave\octave</computeroutput>).</para></listitem></itemizedlist>
</para><para>Matlab users:<itemizedlist>
<listitem><para>make sure <computeroutput>mex</computeroutput> is in your path and actually points to the Matlab <computeroutput>mex</computeroutput> program.</para></listitem><listitem><para>Compile the *.cpp files inside <computeroutput>$OPENRAVE_INSTALL\share\openrave-*\matlab</computeroutput> and addit to the MATLAB Path. Can use runmex.bat for that.</para></listitem></itemizedlist>
</para></sect2>
</sect1>
<sect1 id="installation__windows_1iwin_building">
<title>Building OpenRAVE</title>
<para>Run the <computeroutput>CMake</computeroutput> GUI and specify a build directory somewhere out of the current source directory. Click on the Configure and Generate buttons. For Visual Studio users, this will generate a <bold>OpenRAVE.sln</bold> file. Open the Microsoft Visual Studio solution file and select the <bold>RelWithDebInfo</bold> or <bold>Release</bold> configuration, and build everything. Once done, build the INSTALL project. This should install everything in <computeroutput>C:\Program Files\openrave</computeroutput>. The installation directory can be changed by configuring <computeroutput>CMake&apos;s</computeroutput> CMAKE_INSTALL_PREFIX variable to a new path. If using the command-line, can specify the install directory with <computeroutput>-DCMAKE_INSTALL_PREFIX=&quot;my/new/install/dir&quot;</computeroutput>.</para><para>Before running anything, have to modify the following environment variables:<itemizedlist>
<listitem><para><computeroutput>PYTHONPATH</computeroutput> - add <computeroutput>&quot;C:\\Program Files\\openrave\\share\\openrave&quot;</computeroutput></para></listitem><listitem><para><computeroutput>Path</computeroutput> - add <computeroutput>&quot;C:\\Program Files\\openrave\\bin&quot;</computeroutput> to the front. Furthermore, if Qt and Boost are installed in separate directories, have to add the location of their DLLs to Path (for example <computeroutput>C:\Qt\4.7.1\bin</computeroutput> and <computeroutput>C:\Program Files\boost\boost_1_44\lib</computeroutput>). Be very careful when putting it in the back since several user have had problems with different Qt libraries conflicting!</para></listitem></itemizedlist>
</para></sect1>
<sect1 id="installation__windows_1iwin_updating">
<title>Updating Subversion</title>
<para>Whenever updating subversion, it should just be sufficient to run <computeroutput>runcmake_win.bat</computeroutput> again and then open the solution file build all the projects, and then manually build the INSTALL project. If an update to libraries or programs happens (for example Octave/MATLAB/python was installed/uninstalled), it is recommended to clear the cmake cache by first removing <computeroutput>build\CMakeCache.txt</computeroutput> before running <computeroutput>runcmake_win.bat</computeroutput>. </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
