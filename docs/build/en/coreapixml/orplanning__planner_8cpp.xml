<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="orplanning__planner_8cpp" kind="file">
    <compoundname>orplanning_planner.cpp</compoundname>
    <includes refid="openrave-core_8h" local="no">openrave-core.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">sstream</includes>
    <includes local="no">boost/thread/thread.hpp</includes>
    <includes local="no">boost/bind.hpp</includes>
    <includes local="no">boost/format.hpp</includes>
    <incdepgraph>
      <node id="3007">
        <label>list</label>
      </node>
      <node id="3019">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="3044">
        <label>openrave/robot.h</label>
        <link refid="robot_8h"/>
      </node>
      <node id="3001">
        <label>stdarg.h</label>
      </node>
      <node id="3051">
        <label>openrave/environment.h</label>
        <link refid="environment_8h"/>
      </node>
      <node id="3036">
        <label>openrave/plugininfo.h</label>
        <link refid="plugininfo_8h"/>
      </node>
      <node id="3038">
        <label>openrave/spacesampler.h</label>
        <link refid="spacesampler_8h"/>
      </node>
      <node id="3011">
        <label>iomanip</label>
      </node>
      <node id="3015">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="3031">
        <label>limits</label>
      </node>
      <node id="3034">
        <label>openrave/mathextra.h</label>
        <link refid="mathextra_8h"/>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3029" relation="include">
        </childnode>
        <childnode refid="3035" relation="include">
        </childnode>
      </node>
      <node id="3017">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="3021">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="3026">
        <label>openrave/config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="3004">
        <label>stdint.h</label>
      </node>
      <node id="2998">
        <label>openrave-core.h</label>
        <link refid="openrave-core_8h"/>
        <childnode refid="2999" relation="include">
        </childnode>
      </node>
      <node id="3023">
        <label>boost/format.hpp</label>
      </node>
      <node id="3027">
        <label>openrave/interfacehashes.h</label>
        <link refid="interfacehashes_8h"/>
      </node>
      <node id="3029">
        <label>cmath</label>
      </node>
      <node id="3033">
        <label>cassert</label>
      </node>
      <node id="3022">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="3020">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="3005">
        <label>string</label>
      </node>
      <node id="3016">
        <label>boost/weak_ptr.hpp</label>
      </node>
      <node id="3008">
        <label>map</label>
      </node>
      <node id="3010">
        <label>exception</label>
      </node>
      <node id="3012">
        <label>fstream</label>
      </node>
      <node id="3042">
        <label>openrave/collisionchecker.h</label>
        <link refid="collisionchecker_8h"/>
      </node>
      <node id="3014">
        <label>boost/function.hpp</label>
      </node>
      <node id="3047">
        <label>openrave/controller.h</label>
        <link refid="controller_8h"/>
      </node>
      <node id="3046">
        <label>openrave/planner.h</label>
        <link refid="planner_8h"/>
      </node>
      <node id="2999">
        <label>openrave/openrave.h</label>
        <link refid="openrave_8h"/>
        <childnode refid="3000" relation="include">
        </childnode>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3004" relation="include">
        </childnode>
        <childnode refid="3005" relation="include">
        </childnode>
        <childnode refid="3006" relation="include">
        </childnode>
        <childnode refid="3007" relation="include">
        </childnode>
        <childnode refid="3008" relation="include">
        </childnode>
        <childnode refid="3009" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
        <childnode refid="3011" relation="include">
        </childnode>
        <childnode refid="3012" relation="include">
        </childnode>
        <childnode refid="3013" relation="include">
        </childnode>
        <childnode refid="3014" relation="include">
        </childnode>
        <childnode refid="3015" relation="include">
        </childnode>
        <childnode refid="3016" relation="include">
        </childnode>
        <childnode refid="3017" relation="include">
        </childnode>
        <childnode refid="3018" relation="include">
        </childnode>
        <childnode refid="3019" relation="include">
        </childnode>
        <childnode refid="3020" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
        <childnode refid="3022" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
        <childnode refid="3024" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
        <childnode refid="3026" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3028" relation="include">
        </childnode>
        <childnode refid="3034" relation="include">
        </childnode>
        <childnode refid="3036" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3039" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3041" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
        <childnode refid="3043" relation="include">
        </childnode>
        <childnode refid="3044" relation="include">
        </childnode>
        <childnode refid="3045" relation="include">
        </childnode>
        <childnode refid="3046" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
        <childnode refid="3048" relation="include">
        </childnode>
        <childnode refid="3049" relation="include">
        </childnode>
        <childnode refid="3050" relation="include">
        </childnode>
        <childnode refid="3051" relation="include">
        </childnode>
      </node>
      <node id="3000">
        <label>cstdio</label>
      </node>
      <node id="3050">
        <label>openrave/viewer.h</label>
        <link refid="viewer_8h"/>
      </node>
      <node id="3006">
        <label>vector</label>
      </node>
      <node id="3039">
        <label>openrave/kinbody.h</label>
        <link refid="kinbody_8h"/>
      </node>
      <node id="3032">
        <label>utility</label>
      </node>
      <node id="3013">
        <label>sstream</label>
      </node>
      <node id="3049">
        <label>openrave/sensorsystem.h</label>
        <link refid="sensorsystem_8h"/>
      </node>
      <node id="3048">
        <label>openrave/physicsengine.h</label>
        <link refid="physicsengine_8h"/>
      </node>
      <node id="3018">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="3028">
        <label>openrave/geometry.h</label>
        <link refid="geometry_8h"/>
        <childnode refid="3029" relation="include">
        </childnode>
        <childnode refid="3030" relation="include">
        </childnode>
        <childnode refid="3031" relation="include">
        </childnode>
        <childnode refid="3032" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
      </node>
      <node id="3003">
        <label>cstdlib</label>
      </node>
      <node id="3030">
        <label>iostream</label>
      </node>
      <node id="3040">
        <label>openrave/trajectory.h</label>
        <link refid="trajectory_8h"/>
      </node>
      <node id="3035">
        <label>climits</label>
      </node>
      <node id="3052">
        <label>boost/bind.hpp</label>
      </node>
      <node id="3037">
        <label>openrave/interface.h</label>
        <link refid="interface_8h"/>
      </node>
      <node id="3045">
        <label>openrave/iksolver.h</label>
        <link refid="iksolver_8h"/>
      </node>
      <node id="3024">
        <label>boost/array.hpp</label>
      </node>
      <node id="3041">
        <label>openrave/module.h</label>
        <link refid="module_8h"/>
      </node>
      <node id="3009">
        <label>set</label>
      </node>
      <node id="3025">
        <label>boost/multi_array.hpp</label>
      </node>
      <node id="2997">
        <label>src/cppexamples/orplanning_planner.cpp</label>
        <link refid="orplanning_planner.cpp"/>
        <childnode refid="2998" relation="include">
        </childnode>
        <childnode refid="3006" relation="include">
        </childnode>
        <childnode refid="3013" relation="include">
        </childnode>
        <childnode refid="3020" relation="include">
        </childnode>
        <childnode refid="3052" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
      </node>
      <node id="3002">
        <label>cstring</label>
      </node>
      <node id="3043">
        <label>openrave/sensor.h</label>
        <link refid="sensor_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="orplanning__planner_8cpp_1a87e5a6712bd042f3257acfbf82827714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetViewer</definition>
        <argsstring>(EnvironmentBasePtr penv, const string &amp;viewername)</argsstring>
        <name>SetViewer</name>
        <param>
          <type>EnvironmentBasePtr</type>
          <declname>penv</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>viewername</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/src/cppexamples/orplanning_planner.cpp" line="26" bodyfile="/home/pra3cob/openrave/src/cppexamples/orplanning_planner.cpp" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="orplanning__planner_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pra3cob/openrave/src/cppexamples/orplanning_planner.cpp" line="33" bodyfile="/home/pra3cob/openrave/src/cppexamples/orplanning_planner.cpp" bodystart="32" bodyend="128"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="openrave-core_8h" kindref="compound">openrave-core.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/thread/thread.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/bind.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/format.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">OpenRAVE;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WIN32_LEAN_AND_MEAN</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;winsock2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>usleep(micro)<sp/>Sleep(micro/1000)</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="orplanning__planner_8cpp_1a87e5a6712bd042f3257acfbf82827714" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="opencvsaving_8cpp_1a87e5a6712bd042f3257acfbf82827714" kindref="member">SetViewer</ref>(<ref refid="namespaceOpenRAVE_1a652cd59d4cc9e3262d85e6776ec8ff9b" kindref="member">EnvironmentBasePtr</ref><sp/>penv,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>viewername)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1af0d19499c5ac95f5e1ac60b29187d7c4" kindref="member">ViewerBasePtr</ref><sp/>viewer<sp/>=<sp/><ref refid="namespaceOpenRAVE_1a75b6125ec62afca70c38afe81f572db1" kindref="member">RaveCreateViewer</ref>(penv,viewername);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>penv-&gt;AddViewer(viewer);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>viewer-&gt;main(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="orplanning__planner_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ikfastloader_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>scenefilename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;data/hanoi_complex2.env.xml&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>viewername<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;qtcoin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1ab89ccf2331c4ee81662f687cedaa1781" kindref="member" tooltip="Explicitly initializes the global OpenRAVE state (optional).">RaveInitialize</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1a652cd59d4cc9e3262d85e6776ec8ff9b" kindref="member">EnvironmentBasePtr</ref><sp/>penv<sp/>=<sp/><ref refid="namespaceOpenRAVE_1aec9c3dd6a1f2908a1eb84ca59243e00a" kindref="member">RaveCreateEnvironment</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1a4565818cc5d4875f6c462cb6c5ab1a80" kindref="member" tooltip="Sets the global openrave debug level. A combination of DebugLevel.">RaveSetDebugLevel</ref>(<ref refid="namespaceOpenRAVE_1ab658e6d84759440dbf3c890446075395abd3809f60dd27203b26d387b072b090f" kindref="member">Level_Debug</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::thread<sp/>thviewer(boost::bind(<ref refid="opencvsaving_8cpp_1a87e5a6712bd042f3257acfbf82827714" kindref="member">SetViewer</ref>,penv,viewername));<sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>viewer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(200000);<sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>the<sp/>viewer<sp/>to<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>penv-&gt;Load(scenefilename);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(100000);<sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>the<sp/>viewer<sp/>to<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;RobotBasePtr&gt;<sp/>vrobots;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>penv-&gt;GetRobots(vrobots);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1a5a9955dc6058f09c4462952478dfcf58" kindref="member">RobotBasePtr</ref><sp/>probot<sp/>=<sp/>vrobots.at(0);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>longest<sp/>manipulator<sp/>chain<sp/>to<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>RobotBase::ManipulatorPtr<sp/>pmanip<sp/>=<sp/>probot-&gt;GetManipulators().at(0);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>probot-&gt;GetManipulators().size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pmanip-&gt;GetArmIndices().size()<sp/>&lt;<sp/>probot-&gt;GetManipulators()[i]-&gt;GetArmIndices().size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmanip<sp/>=<sp/>probot-&gt;GetManipulators()[i];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openrave_8h_1a334922a6794604207afe36b4feda230e" kindref="member">RAVELOG_INFO</ref>(str(boost::format(</highlight><highlight class="stringliteral">&quot;planning<sp/>with<sp/>manipulator<sp/>%s\n&quot;</highlight><highlight class="normal">)%pmanip-&gt;GetName()));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>probot-&gt;SetActiveDOFs(pmanip-&gt;GetArmIndices());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;dReal&gt;<sp/>vlower,vupper;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>probot-&gt;GetActiveDOFLimits(vlower,vupper);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>planner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1ab39121477d2dd841859e79f112b52a0b" kindref="member">PlannerBasePtr</ref><sp/>planner<sp/>=<sp/><ref refid="namespaceOpenRAVE_1a917047ebc086703b4eaf0bffd6ac9527" kindref="member">RaveCreatePlanner</ref>(penv,</highlight><highlight class="stringliteral">&quot;birrt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>PlannerBase::PlannerParametersPtr<sp/>params(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classOpenRAVE_1_1PlannerBase_1_1PlannerParameters" kindref="compound" tooltip="Describes a common and serializable interface for planning parameters.">PlannerBase::PlannerParameters</ref>());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>params-&gt;_nMaxIterations<sp/>=<sp/>4000;<sp/></highlight><highlight class="comment">//<sp/>max<sp/>iterations<sp/>before<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>params-&gt;SetRobotActiveJoints(probot);<sp/></highlight><highlight class="comment">//<sp/>set<sp/>planning<sp/>configuration<sp/>space<sp/>to<sp/>current<sp/>active<sp/>dofs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>params-&gt;vgoalconfig.resize(probot-&gt;GetActiveDOF());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1a11bae0ab3a7dd29755f7af2e5376c47d" kindref="member">GraphHandlePtr</ref><sp/>pgraph;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnvironmentMutex::scoped_lock<sp/>lock(penv-&gt;GetMutex());<sp/></highlight><highlight class="comment">//<sp/>lock<sp/>environment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>a<sp/>set<sp/>of<sp/>free<sp/>joint<sp/>values<sp/>for<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOpenRAVE_1_1RobotBase_1_1RobotStateSaver" kindref="compound" tooltip="Helper class derived from KinBodyStateSaver to additionaly save robot information...">RobotBase::RobotStateSaver</ref><sp/>saver(probot);<sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vlower.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params-&gt;vgoalconfig[i]<sp/>=<sp/>vlower[i]<sp/>+<sp/>(vupper[i]-vlower[i])*<ref refid="namespaceOpenRAVE_1af106eea57ab2fbb2e632347a3371a813" kindref="member">RaveRandomFloat</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probot-&gt;SetActiveDOFValues(params-&gt;vgoalconfig);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!penv-&gt;CheckCollision(probot)<sp/>&amp;&amp;<sp/>!probot-&gt;CheckSelfCollision()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>robot<sp/>state<sp/>is<sp/>restored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="openrave_8h_1a334922a6794604207afe36b4feda230e" kindref="member">RAVELOG_INFO</ref>(</highlight><highlight class="stringliteral">&quot;starting<sp/>to<sp/>plan\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probot-&gt;GetActiveDOFValues(params-&gt;vinitialconfig);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!planner-&gt;InitPlan(probot,params)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>new<sp/>output<sp/>trajectory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1aa3c159b394f2e4ec46ac49416a2acf17" kindref="member">TrajectoryBasePtr</ref><sp/>ptraj<sp/>=<sp/><ref refid="namespaceOpenRAVE_1aa987900651248eee02dc1ce6647dc543" kindref="member" tooltip="Return an empty trajectory instance.">RaveCreateTrajectory</ref>(penv,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!planner-&gt;PlanPath(ptraj)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="openrave_8h_1a9bbbf668aa39f398c341e946ab8a43f5" kindref="member">RAVELOG_WARN</ref>(</highlight><highlight class="stringliteral">&quot;plan<sp/>failed,<sp/>trying<sp/>again\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>end<sp/>effector<sp/>of<sp/>the<sp/>trajectory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOpenRAVE_1_1RobotBase_1_1RobotStateSaver" kindref="compound" tooltip="Helper class derived from KinBodyStateSaver to additionaly save robot information...">RobotBase::RobotStateSaver</ref><sp/>saver(probot);<sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>state<sp/>of<sp/>the<sp/>robot<sp/>since<sp/>will<sp/>be<sp/>setting<sp/>joint<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;RaveVector&lt;float&gt;<sp/>&gt;<sp/>vpoints;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;dReal&gt;<sp/>vtrajdata;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref><sp/>ftime<sp/>=<sp/>0;<sp/>ftime<sp/>&lt;=<sp/>ptraj-&gt;GetDuration();<sp/>ftime<sp/>+=<sp/>0.01)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptraj-&gt;Sample(vtrajdata,ftime,probot-&gt;GetActiveConfigurationSpecification());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probot-&gt;SetActiveDOFValues(vtrajdata);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vpoints.push_back(pmanip-&gt;GetEndEffectorTransform().trans);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pgraph<sp/>=<sp/>penv-&gt;drawlinestrip(&amp;vpoints[0].x,vpoints.size(),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vpoints[0]),1.0f);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>the<sp/>trajectory<sp/>to<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probot-&gt;GetController()-&gt;SetPath(ptraj);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>the<sp/>robot<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!probot-&gt;GetController()-&gt;IsDone())<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(1000);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>thviewer.join();<sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>the<sp/>viewer<sp/>thread<sp/>to<sp/>exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>penv-&gt;Destroy();<sp/></highlight><highlight class="comment">//<sp/>destroy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/pra3cob/openrave/src/cppexamples/orplanning_planner.cpp"/>
  </compounddef>
</doxygen>
