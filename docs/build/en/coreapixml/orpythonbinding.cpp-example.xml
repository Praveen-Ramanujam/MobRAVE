<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="orpythonbinding.cpp-example" kind="example">
    <compoundname>orpythonbinding.cpp</compoundname>
    <detaileddescription>
<para><simplesect kind="author"><para>Rosen Diankov</para></simplesect>
Shows how to creating python bindings with an <ref refid="namespaceOpenRAVE" kindref="compound">OpenRAVE</ref> C++ plugin. The demo registers a python function to be called inside the environment simulation thread using a Module interface.</para><para>The compilation procedure will produce a orpythonbinding shared object or DLL, which can then be directly included into python.</para><para>The following python example will register &apos;mysimfunction&apos; with the enviornment thread, and run it until it returns true. <verbatim>
   from openravepy import *
   env=openravepy.Environment()
   RaveSetDebugLevel(DebugLevel.Debug)
   import orpythonbinding
   orpythonbinding.Init(RaveGlobalState())
   totaltime = 0
   def mysimfunction(elapsedtime):
    global totaltime
    totaltime += elapsedtime
    print &apos;this is the time&apos;,totaltime
 # return True to end the thread
    return totaltime &gt; 5

   module = orpythonbinding.RegisterSimulationFunction(RaveGetEnvironmentId(env),mysimfunction)
   while True:
    sleep(1)
    </verbatim></para><para><bold>Full Example Code:</bold> <programlisting><codeline></codeline>
<codeline><highlight class="preprocessor">#include<sp/>&lt;<ref refid="openrave_8h" kindref="compound" tooltip="Defines the public headers that every plugin must include in order to use openrave...">openrave/openrave.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/exception_translator.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/stl_iterator.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pyconfig.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/format.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assert.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">OpenRAVE;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classFunctionUserData" kindref="compound">FunctionUserData</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>UserData</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classFunctionUserData_1a3f55251eab9ec2728ca067e780c4b782" kindref="member">~FunctionUserData</ref>()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>boost::python::object<sp/><ref refid="classFunctionUserData_1a9bf6140464e79a241b1f09bf83f4223e" kindref="member">simulationfn</ref>;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classPythonBindingModule" kindref="compound">PythonBindingModule</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classOpenRAVE_1_1ModuleBase_1a5a91427df2d07efa80c64f34f54539eb" kindref="member">ModuleBase</ref></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPythonBindingModule_1a1824493f29358a9dfd262f916cbb9626" kindref="member">PythonBindingModule</ref>(<ref refid="namespaceOpenRAVE_1a652cd59d4cc9e3262d85e6776ec8ff9b" kindref="member">EnvironmentBasePtr</ref><sp/>penv,<sp/>std::istream&amp;)<sp/>:<sp/><ref refid="classOpenRAVE_1_1ModuleBase_1a5a91427df2d07efa80c64f34f54539eb" kindref="member">ModuleBase</ref>(penv)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOpenRAVE_1_1InterfaceBase_1ab3a2d5e41d756988959d9f5cdccfe284" kindref="member" tooltip="set user data">SetUserData</ref>(<ref refid="namespaceOpenRAVE_1aa02b5cd826890fa31fb80f0d469312d9" kindref="member">UserDataPtr</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classFunctionUserData" kindref="compound">FunctionUserData</ref>()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classPythonBindingModule_1ab852a7862fb930a8a4f644191859d0fc" kindref="member">~PythonBindingModule</ref>()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="openrave_8h_1a5c5058dd8a101f87dca4d6ca16bc7ebc" kindref="member">RAVELOG_DEBUG</ref>(</highlight><highlight class="stringliteral">&quot;destroying<sp/>python<sp/>binding\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classPythonBindingModule_1a7b480d96bbf53f0a0d0800deec13fff1" kindref="member">SimulationStep</ref>(<ref refid="namespaceOpenRAVE_1a973ec569e405922437be98473d2aa6f8" kindref="member">dReal</ref><sp/>fElapsedTime)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;FunctionUserData&gt;<sp/>p<sp/>=<sp/>boost::dynamic_pointer_cast&lt;<ref refid="classFunctionUserData" kindref="compound">FunctionUserData</ref>&gt;(<ref refid="classOpenRAVE_1_1InterfaceBase_1a975ebca32c743c8530807758e7c46618" kindref="member" tooltip="return the user custom data">GetUserData</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!!p<sp/>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyGILState_STATE<sp/>gstate<sp/>=<sp/>PyGILState_Ensure();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>p-&gt;simulationfn(fElapsedTime);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="openrave_8h_1a9bbbf668aa39f398c341e946ab8a43f5" kindref="member">RAVELOG_WARN</ref>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>exception<sp/>in<sp/>python<sp/>callback,<sp/>please<sp/>register<sp/>again:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Print();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyGILState_Release(gstate);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ret<sp/>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOpenRAVE_1_1InterfaceBase_1a847c7f827694fd3db16f20b5669e1743" kindref="member">GetEnv</ref>()-&gt;Remove(shared_from_this());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">boost::shared_ptr&lt;void&gt;<sp/><ref refid="orpythonbinding_8cpp_1a4834368c5c3c12fcd1ad7861c48439e1" kindref="member">g_PythonBindingInterfaceHandle</ref>;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespaceOpenRAVE_1a0c35179adf3473a44ad9b4436e12e088" kindref="member">InterfaceBasePtr</ref><sp/><ref refid="orpythonbinding_8cpp_1a7a3c4da759e2fc58c6686b5d5c2ad7c2" kindref="member">PythonBindingCreateInterface</ref>(<ref refid="namespaceOpenRAVE_1a652cd59d4cc9e3262d85e6776ec8ff9b" kindref="member">EnvironmentBasePtr</ref><sp/>penv,<sp/>std::istream&amp;<sp/>istream)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1a0c35179adf3473a44ad9b4436e12e088" kindref="member">InterfaceBasePtr</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classPythonBindingModule" kindref="compound">PythonBindingModule</ref>(penv,istream));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespaceOpenRAVE_1a0c35179adf3473a44ad9b4436e12e088" kindref="member">InterfaceBasePtr</ref><sp/><ref refid="orpythonbinding_8cpp_1a8d4db7ac9eb1344f591b6901b870d318" kindref="member">RegisterSimulationFunction</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>environmentid,<sp/>boost::python::object<sp/>simulationfn)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1a8f388daa26e3d70da4f292f61554a4cd" kindref="member">ModuleBasePtr</ref><sp/>module<sp/>=<sp/><ref refid="namespaceOpenRAVE_1a85a2344a8c87ccc8573c58c05f17616e" kindref="member">RaveCreateModule</ref>(<ref refid="namespaceOpenRAVE_1ac5ad28f8313d016b3ecde4c01737d652" kindref="member" tooltip="get the environment from its unique id">RaveGetEnvironment</ref>(environmentid),<sp/></highlight><highlight class="stringliteral">&quot;PythonBinding&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!!module<sp/>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;FunctionUserData&gt;<sp/>p<sp/>=<sp/>boost::dynamic_pointer_cast&lt;<ref refid="classFunctionUserData" kindref="compound">FunctionUserData</ref>&gt;(module-&gt;GetUserData());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;simulationfn<sp/>=<sp/>simulationfn;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module-&gt;GetEnv()-&gt;AddModule(module,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceOpenRAVE_1a0c35179adf3473a44ad9b4436e12e088" kindref="member">InterfaceBasePtr</ref>(module);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="orpythonbinding_8cpp_1a7f8934a0c50d70a317cb981bc9f49af8" kindref="member">Init</ref>(<ref refid="namespaceOpenRAVE_1aa02b5cd826890fa31fb80f0d469312d9" kindref="member">UserDataPtr</ref><sp/>globalstate)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceOpenRAVE_1a4cad8fb5664f22d9c877fc520ec20abe" kindref="member" tooltip="Initializes the global state from an already loaded OpenRAVE environment.">RaveInitializeFromState</ref>(globalstate);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!g_PythonBindingInterfaceHandle<sp/>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_PythonBindingInterfaceHandle<sp/>=<sp/><ref refid="namespaceOpenRAVE_1a331d3070544589695a6a05e7da0f419f" kindref="member" tooltip="Registers a function to create an interface, this allows the interface to be created...">RaveRegisterInterface</ref>(PT_Module,<sp/></highlight><highlight class="stringliteral">&quot;PythonBinding&quot;</highlight><highlight class="normal">,<sp/><ref refid="interfacehashes_8h_1a8d659abed23f85be062a462fa04ad130" kindref="member">OPENRAVE_MODULE_HASH</ref>,<ref refid="interfacehashes_8h_1a9aed328f2c74952f51841514b2bb211a" kindref="member">OPENRAVE_ENVIRONMENT_HASH</ref>,<sp/><ref refid="orpythonbinding_8cpp_1a7a3c4da759e2fc58c6686b5d5c2ad7c2" kindref="member">PythonBindingCreateInterface</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="orpythonbinding_8cpp_1a26299d71d49dd80a01f27ca70bdc2270" kindref="member">BOOST_PYTHON_MODULE</ref>(orpythonbinding)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>boost::python::def(</highlight><highlight class="stringliteral">&quot;Init&quot;</highlight><highlight class="normal">,<sp/><ref refid="orpythonbinding_8cpp_1a7f8934a0c50d70a317cb981bc9f49af8" kindref="member">Init</ref>,<sp/>boost::python::args(</highlight><highlight class="stringliteral">&quot;globalstate&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;initializes<sp/>the<sp/>python<sp/>bindings<sp/>with<sp/>the<sp/>openrave<sp/>global<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>boost::python::def(</highlight><highlight class="stringliteral">&quot;RegisterSimulationFunction&quot;</highlight><highlight class="normal">,<sp/><ref refid="orpythonbinding_8cpp_1a8d4db7ac9eb1344f591b6901b870d318" kindref="member">RegisterSimulationFunction</ref>,<sp/>boost::python::args(</highlight><highlight class="stringliteral">&quot;environmentid&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;simulationfn&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
